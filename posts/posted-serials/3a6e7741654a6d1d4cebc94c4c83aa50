ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/RatMaze'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/RatMaze.java'
p11
atp12
Rp13
sS'title'
p14
VBacktracking | Set 2 (Rat in a Maze)
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(g22
g2
Ntp44
Rp45
(dp46
g26
I00
sg27
g0
(cbs4.element
NavigableString
p47
c__builtin__
unicode
p48
Vas another example problem that can be solved using Backtracking.
p49
tp50
Rp51
(dp52
g34
g0
(g22
g2
Ntp53
Rp54
(dp55
g26
I00
sg27
g0
(g47
g48
V.  Let us discuss Rat in a 
p56
tp57
Rp58
(dp59
g34
g0
(g22
g2
Ntp60
Rp61
(dp62
g26
I00
sg27
g0
(g47
g48
VWe have discussed Backtracking and Knight\u2019s tour problem in 
p63
tp64
Rp65
(dp66
g34
Nsg27
g39
sg28
g61
sg37
g61
sg31
g39
sbsg28
g58
sg29
Va
p67
sg31
g39
sg32
Nsg33
Nsg34
g65
sg35
(dp68
Vhref
p69
Vhttp://geeksforgeeks.org/?p=12916
p70
ssg37
g0
(g47
g48
VSet 1
p71
tp72
Rp73
(dp74
g34
Nsg27
g61
sg28
Nsg37
g58
sg31
g61
sbsS'parser_class'
p75
cbs4
BeautifulSoup
p76
sS'hidden'
p77
I00
sS'contents'
p78
(lp79
g73
asbsg27
g73
sg28
g54
sg37
g54
sg31
g39
sbsg28
g51
sg29
g67
sg31
g39
sg32
Nsg33
Nsg34
g58
sg35
(dp80
Vhref
p81
Vhttp://en.wikipedia.org/wiki/Maze
p82
ssg37
g0
(g47
g48
VMaze 
p83
tp84
Rp85
(dp86
g34
Nsg27
g54
sg28
Nsg37
g51
sg31
g54
sbsg75
g76
sg77
I00
sg78
(lp87
g85
asbsg27
g85
sg28
g45
sg37
g45
sg31
g39
sbsg28
Nsg29
Vspan
p88
sg31
g39
sg32
Nsg33
Nsg34
g51
sg35
(dp89
Vid
p90
Vmore-13376
p91
ssg37
g42
sg75
g76
sg77
I00
sg78
(lp92
sbsg28
g0
(g22
g2
Ntp93
Rp94
(dp95
g26
I00
sg27
g0
(g47
g48
V\u000aIn the maze matrix, 0 means the block is dead end and 1 means the block can be used in the path from source to destination. Note that this is a simple version of the typical Maze problem. For example, a more complex version can be that the rat can move in 4 directions and a more complex version can be with limited number of moves.
p96
tp97
Rp98
(dp99
g34
g0
(g22
g2
Ntp100
Rp101
(dp102
g26
I01
sg27
g0
(g47
g48
VA Maze is given as N*N binary matrix of blocks where source block is the upper left most block i.e., maze[0][0] and destination block is lower rightmost block i.e., maze[N-1][N-1].  A rat starts from source and has to reach destination. The rat can move only in two directions: forward and down.
p103
tp104
Rp105
(dp106
g34
Nsg27
g42
sg28
g101
sg37
g101
sg31
g42
sbsg28
g98
sg29
Vbr
p107
sg31
g42
sg32
Nsg33
Nsg34
g105
sg35
(dp108
sg37
g98
sg75
g76
sg77
I00
sg78
(lp109
sbsg27
g101
sg28
Nsg37
g94
sg31
g42
sbsg28
g0
(g22
g2
Ntp110
Rp111
(dp112
g26
I00
sg27
g0
(g47
g48
VFollowing is an example maze.
p113
tp114
Rp115
(dp116
g34
Nsg27
g94
sg28
Nsg37
g111
sg31
g94
sbsg28
g0
(g22
g2
Ntp117
Rp118
(dp119
g26
I00
sg27
g0
(g47
g48
V Gray blocks are dead ends (value = 0). 
p120
tp121
Rp122
(dp123
g34
Nsg27
g111
sg28
Nsg37
g118
sg31
g111
sbsg28
g0
(g22
g2
Ntp124
Rp125
(dp126
g26
I00
sg27
g0
(g22
g2
Ntp127
Rp128
(dp129
g26
I01
sg27
g0
(g22
g2
Ntp130
Rp131
(dp132
g26
I00
sg27
g118
sg28
Nsg29
g67
sg31
g118
sg32
Nsg33
Nsg34
Nsg35
(dp133
Vhref
p134
Vhttp://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled11.png
p135
ssg37
g128
sg75
g76
sg77
I00
sg78
(lp136
g128
asbsg28
Nsg29
Vimg
p137
sg31
g131
sg32
Nsg33
Nsg34
Nsg35
(dp138
Vsrc
p139
Vhttp://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled11.png
p140
sVtitle
p141
Vratinmaze_filled1
p142
sVheight
p143
V157
p144
sVwidth
p145
V181
p146
sValt
p147
V
p148
sVclass
p149
(lp150
Valigncenter
p151
aVsize-full
p152
aVwp-image-13423
p153
assg37
g125
sg75
g76
sg77
I00
sg78
(lp154
sbsg28
g0
(g22
g2
Ntp155
Rp156
(dp157
g26
I00
sg27
g0
(g47
g48
VFollowing is binary matrix representation of the above maze.
p158
tp159
Rp160
(dp161
g34
Nsg27
g125
sg28
Nsg37
g156
sg31
g125
sbsg28
g0
(g22
g2
Ntp162
Rp163
(dp164
g26
I00
sg27
g0
(g47
g48
V\u000a                {1, 0, 0, 0}\u000a                {1, 1, 0, 1}\u000a                {0, 1, 0, 0}\u000a                {1, 1, 1, 1}\u000a
p165
tp166
Rp167
(dp168
g34
Nsg27
g156
sg28
Nsg37
g163
sg31
g156
sbsg28
g0
(g22
g2
Ntp169
Rp170
(dp171
g26
I00
sg27
g0
(g47
g48
VFollowing is maze with highlighted solution path.
p172
tp173
Rp174
(dp175
g34
Nsg27
g163
sg28
Nsg37
g170
sg31
g163
sbsg28
g0
(g22
g2
Ntp176
Rp177
(dp178
g26
I00
sg27
g0
(g22
g2
Ntp179
Rp180
(dp181
g26
I01
sg27
g0
(g22
g2
Ntp182
Rp183
(dp184
g26
I00
sg27
g170
sg28
Nsg29
g67
sg31
g170
sg32
Nsg33
Nsg34
Nsg35
(dp185
Vhref
p186
Vhttp://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled_path1.png
p187
ssg37
g180
sg75
g76
sg77
I00
sg78
(lp188
g180
asbsg28
Nsg29
Vimg
p189
sg31
g183
sg32
Nsg33
Nsg34
Nsg35
(dp190
Vsrc
p191
Vhttp://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled_path1.png
p192
sVtitle
p193
Vratinmaze_filled_path
p194
sVheight
p195
V157
p196
sVwidth
p197
V176
p198
sValt
p199
g148
sVclass
p200
(lp201
Valigncenter
p202
aVsize-full
p203
aVwp-image-13424
p204
assg37
g177
sg75
g76
sg77
I00
sg78
(lp205
sbsg28
g0
(g22
g2
Ntp206
Rp207
(dp208
g26
I00
sg27
g0
(g47
g48
VFollowing is the solution matrix (output of program) for the above input matrx.
p209
tp210
Rp211
(dp212
g34
Nsg27
g177
sg28
Nsg37
g207
sg31
g177
sbsg28
g0
(g22
g2
Ntp213
Rp214
(dp215
g26
I00
sg27
g0
(g47
g48
V\u000a                {1, 0, 0, 0}\u000a                {1, 1, 0, 0}\u000a                {0, 1, 0, 0}\u000a                {0, 1, 1, 1}\u000a All enteries in solution path are marked as 1.\u000a
p216
tp217
Rp218
(dp219
g34
Nsg27
g207
sg28
Nsg37
g214
sg31
g207
sbsg28
g0
(g22
g2
Ntp220
Rp221
(dp222
g26
I00
sg27
g0
(g47
g48
V\u000aThe Naive Algorithm is to generate all paths from source to destination and one by one check if the generated path satisfies the constraints.
p223
tp224
Rp225
(dp226
g34
g0
(g22
g2
Ntp227
Rp228
(dp229
g26
I01
sg27
g0
(g47
g48
VNaive Algorithm
p230
tp231
Rp232
(dp233
g34
Nsg27
g0
(g22
g2
Ntp234
Rp235
(dp236
g26
I00
sg27
g214
sg28
g228
sg29
Vstrong
p237
sg31
g214
sg32
Nsg33
Nsg34
Nsg35
(dp238
sg37
g232
sg75
g76
sg77
I00
sg78
(lp239
g232
asbsg28
Nsg37
g228
sg31
g235
sbsg28
g225
sg29
Vbr
p240
sg31
g214
sg32
Nsg33
Nsg34
g235
sg35
(dp241
sg37
g225
sg75
g76
sg77
I00
sg78
(lp242
sbsg27
g228
sg28
Nsg37
g221
sg31
g214
sbsg28
g0
(g22
g2
Ntp243
Rp244
(dp245
g26
I00
sg27
g0
(g47
g48
Vwhile there are untried paths\u000a{\u000a   generate the next path\u000a   if this path has all blocks as 1\u000a   {\u000a      print this path;\u000a   }\u000a}
p246
tp247
Rp248
(dp249
g34
Nsg27
g221
sg28
Nsg37
g244
sg31
g221
sbsg28
g0
(g22
g2
Ntp250
Rp251
(dp252
g26
I00
sg27
g0
(g47
g48
VBacktrackng Algorithm
p253
tp254
Rp255
(dp256
g34
Nsg27
g0
(g22
g2
Ntp257
Rp258
(dp259
g26
I00
sg27
g244
sg28
Nsg29
Vstrong
p260
sg31
g244
sg32
Nsg33
Nsg34
Nsg35
(dp261
sg37
g255
sg75
g76
sg77
I00
sg78
(lp262
g255
asbsg28
Nsg37
g251
sg31
g258
sbsg28
g0
(g22
g2
Ntp263
Rp264
(dp265
g26
I00
sg27
g0
(g47
g48
VIf destination is reached\u000a    print the solution matrix\u000aElse\u000a   a) Mark current cell in solution matrix as 1. \u000a   b) Move forward in horizontal direction and recursively check if this \u000a       move leads to a solution. \u000a   c) If the move chosen in the above step doesn't lead to a solution\u000a       then move down and check if  this move leads to a solution. \u000a   d) If none of the above solutions work then unmark this cell as 0 \u000a       (BACKTRACK) and return false.\u000a
p266
tp267
Rp268
(dp269
g34
Nsg27
g251
sg28
Nsg37
g264
sg31
g251
sbsg28
Nsg29
Vp
p270
sg31
g24
sg32
Nsg33
Nsg34
g251
sg35
(dp271
sg37
g0
(g22
g2
Ntp272
Rp273
(dp274
g26
I00
sg27
g264
sg28
g0
(g22
g2
Ntp275
Rp276
(dp277
g26
I01
sg27
g0
(g47
g48
VImplementation of Backtracking solution
p278
tp279
Rp280
(dp281
g34
Nsg27
g273
sg28
Nsg37
g276
sg31
g273
sbsg28
g0
(g47
g48
V\u000a
p282
tp283
Rp284
(dp285
g34
g276
sg27
g276
sg28
g0
(g22
g2
Ntp286
Rp287
(dp288
g26
I00
sg27
g284
sg28
Nsg29
Vdiv
p289
sg31
g264
sg32
Nsg33
Nsg34
g284
sg35
(dp290
Vclass
p291
(lp292
Vresponsive-tabs
p293
assg37
g0
(g47
g48
V\u000a
p294
tp295
Rp296
(dp297
g34
Nsg27
g287
sg28
g0
(g22
g2
Ntp298
Rp299
(dp300
g26
I00
sg27
g296
sg28
g0
(g47
g48
V\u000a
p301
tp302
Rp303
(dp304
g34
g299
sg27
g0
(g47
g48
VC/C++
p305
tp306
Rp307
(dp308
g34
Nsg27
g299
sg28
Nsg37
g303
sg31
g299
sbsg28
g0
(g22
g2
Ntp309
Rp310
(dp311
g26
I00
sg27
g303
sg28
Nsg29
Vdiv
p312
sg31
g287
sg32
Nsg33
Nsg34
g303
sg35
(dp313
Vclass
p314
(lp315
Vtabcontent
p316
assg37
g0
(g47
g48
V\u000a
p317
tp318
Rp319
(dp320
g34
Nsg27
g310
sg28
Nsg37
Nsg31
g310
sbsg75
g76
sg77
I00
sg78
(lp321
g319
asbsg37
g310
sg31
g287
sbsg29
Vh2
p322
sg31
g287
sg32
Nsg33
Nsg34
g296
sg35
(dp323
Vclass
p324
(lp325
Vtabtitle
p326
assg37
g307
sg75
g76
sg77
I00
sg78
(lp327
g307
asbsg37
g299
sg31
g287
sbsg75
g76
sg77
I00
sg78
(lp328
g296
ag299
ag303
ag310
asbsg37
g287
sg31
g264
sbsg29
Vbr
p329
sg31
g264
sg32
Nsg33
Nsg34
g273
sg35
(dp330
sg37
g284
sg75
g76
sg77
I00
sg78
(lp331
sbsg29
Vstrong
p332
sg31
g264
sg32
Nsg33
Nsg34
Nsg35
(dp333
sg37
g280
sg75
g76
sg77
I00
sg78
(lp334
g280
asbsg75
g76
sg77
I00
sg78
(lp335
g273
ag276
ag284
ag287
asbsg29
Vpre
p336
sg31
g24
sg32
Nsg33
Nsg34
g244
sg35
(dp337
sg37
g268
sg75
g76
sg77
I00
sg78
(lp338
g268
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g221
sg35
(dp339
sg37
g258
sg75
g76
sg77
I00
sg78
(lp340
g258
asbsg29
Vpre
p341
sg31
g24
sg32
Nsg33
Nsg34
g214
sg35
(dp342
sg37
g248
sg75
g76
sg77
I00
sg78
(lp343
g248
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g207
sg35
(dp344
sg37
g235
sg75
g76
sg77
I00
sg78
(lp345
g235
ag228
ag225
asbsg29
Vpre
p346
sg31
g24
sg32
Nsg33
Nsg34
g177
sg35
(dp347
sg37
g218
sg75
g76
sg77
I00
sg78
(lp348
g218
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g170
sg35
(dp349
sg37
g211
sg75
g76
sg77
I00
sg78
(lp350
g211
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g163
sg35
(dp351
sg37
g183
sg75
g76
sg77
I00
sg78
(lp352
g183
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g156
sg35
(dp353
sg37
g174
sg75
g76
sg77
I00
sg78
(lp354
g174
asbsg29
Vpre
p355
sg31
g24
sg32
Nsg33
Nsg34
g125
sg35
(dp356
sg37
g167
sg75
g76
sg77
I00
sg78
(lp357
g167
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g118
sg35
(dp358
sg37
g160
sg75
g76
sg77
I00
sg78
(lp359
g160
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g111
sg35
(dp360
sg37
g131
sg75
g76
sg77
I00
sg78
(lp361
g131
asbsg29
Vpre
p362
sg31
g24
sg32
Nsg33
Nsg34
g94
sg35
(dp363
sg37
g122
sg75
g76
sg77
I00
sg78
(lp364
g122
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp365
sg37
g115
sg75
g76
sg77
I00
sg78
(lp366
g115
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp367
sg37
g105
sg75
g76
sg77
I00
sg78
(lp368
g105
ag101
ag98
asbsg29
g270
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp369
sg37
g65
sg75
g76
sg77
I00
sg78
(lp370
g65
ag61
ag58
ag54
ag51
ag45
asbsg75
Nsg77
I00
sg78
(lp371
g39
ag42
ag94
ag111
ag118
ag125
ag156
ag163
ag170
ag177
ag207
ag214
ag221
ag244
ag251
ag264
asbsS'raw_page'
p372
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Backtracking | Set 2 (Rat in a Maze) - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Backtracking | Set 2 (Rat in a Maze) - GeeksforGeeks" />\n<meta property="og:description" content="We have discussed Backtracking and Knight&#8217;s tour problem in Set 1. Let us discuss Rat in a Maze as another example problem that can be solved using Backtracking. A Maze is given as N*N binary matrix of blocks where source block is the upper left most block i.e., maze[0][0] and destination block is lower rightmost\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Backtracking" />\n<meta property="article:section" content="Backtracking" />\n<meta property="article:published_time" content="2011-07-18T19:52:48+00:00" />\n<meta property="article:modified_time" content="2015-10-29T21:44:20+00:00" />\n<meta property="og:updated_time" content="2015-10-29T21:44:20+00:00" />\n<meta property="og:image" content="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled11.png" />\n<meta property="og:image" content="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled_path1.png" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-13376 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-13376" class="post-13376 post type-post status-publish format-standard hentry category-backtracking tag-backtracking">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Backtracking | Set 2 (Rat in a Maze)</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>We have discussed Backtracking and Knight&#8217;s tour problem in <a href="http://geeksforgeeks.org/?p=12916">Set 1</a>.  Let us discuss Rat in a <a href="http://en.wikipedia.org/wiki/Maze">Maze </a>as another example problem that can be solved using Backtracking.<span id="more-13376"></span></p>\n<p>A Maze is given as N*N binary matrix of blocks where source block is the upper left most block i.e., maze[0][0] and destination block is lower rightmost block i.e., maze[N-1][N-1].  A rat starts from source and has to reach destination. The rat can move only in two directions: forward and down.<br />\nIn the maze matrix, 0 means the block is dead end and 1 means the block can be used in the path from source to destination. Note that this is a simple version of the typical Maze problem. For example, a more complex version can be that the rat can move in 4 directions and a more complex version can be with limited number of moves.</p>\n<p>Following is an example maze.</p>\n<pre> Gray blocks are dead ends (value = 0). </pre>\n<p><a href="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled11.png"><img src="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled11.png" alt="" title="ratinmaze_filled1" width="181" height="157" class="aligncenter size-full wp-image-13423" /></a></p>\n<p>Following is binary matrix representation of the above maze.</p>\n<pre>\r\n                {1, 0, 0, 0}\r\n                {1, 1, 0, 1}\r\n                {0, 1, 0, 0}\r\n                {1, 1, 1, 1}\r\n</pre>\n<p>Following is maze with highlighted solution path.</p>\n<p><a href="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled_path1.png"><img src="http://geeksforgeeks.org/wp-content/uploads/ratinmaze_filled_path1.png" alt="" title="ratinmaze_filled_path" width="176" height="157" class="aligncenter size-full wp-image-13424"/></a></p>\n<p>Following is the solution matrix (output of program) for the above input matrx.</p>\n<pre>\r\n                {1, 0, 0, 0}\r\n                {1, 1, 0, 0}\r\n                {0, 1, 0, 0}\r\n                {0, 1, 1, 1}\r\n All enteries in solution path are marked as 1.\r\n</pre>\n<p><strong>Naive Algorithm</strong><br />\nThe Naive Algorithm is to generate all paths from source to destination and one by one check if the generated path satisfies the constraints.</p>\n<pre>while there are untried paths\r\n{\r\n   generate the next path\r\n   if this path has all blocks as 1\r\n   {\r\n      print this path;\r\n   }\r\n}</pre>\n<p><strong>Backtrackng Algorithm</strong></p>\n<pre>If destination is reached\r\n    print the solution matrix\r\nElse\r\n   a) Mark current cell in solution matrix as 1. \r\n   b) Move forward in horizontal direction and recursively check if this \r\n       move leads to a solution. \r\n   c) If the move chosen in the above step doesn\'t lead to a solution\r\n       then move down and check if  this move leads to a solution. \r\n   d) If none of the above solutions work then unmark this cell as 0 \r\n       (BACKTRACK) and return false.\r\n</pre>\n<p><strong>Implementation of Backtracking solution</strong><br />\n<div class="responsive-tabs">\n<h2 class="tabtitle">C/C++</h2>\n<div class="tabcontent">\n</p>\n<pre class="brush: cpp; highlight: [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86]; title: ; notranslate" title="">\r\n/* C/C++ program to solve Rat in a Maze problem using\r\n   backtracking */\r\n#include&lt;stdio.h&gt;\r\n\r\n// Maze size\r\n#define N 4 \r\n\r\nbool solveMazeUtil(int maze[N][N], int x, int y, int sol[N][N]);\r\n\r\n/* A utility function to print solution matrix sol[N][N] */\r\nvoid printSolution(int sol[N][N])\r\n{\r\n    for (int i = 0; i &lt; N; i++)\r\n    {\r\n        for (int j = 0; j &lt; N; j++)\r\n            printf(&quot; %d &quot;, sol[i][j]);\r\n        printf(&quot;\\n&quot;);\r\n    }\r\n}\r\n\r\n/* A utility function to check if x,y is valid index for N*N maze */\r\nbool isSafe(int maze[N][N], int x, int y)\r\n{\r\n    // if (x,y outside maze) return false\r\n    if(x &gt;= 0 &amp;&amp; x &lt; N &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; N &amp;&amp; maze[x][y] == 1)\r\n        return true;\r\n\r\n    return false;\r\n}\r\n\r\n/* This function solves the Maze problem using Backtracking.  It mainly\r\n   uses solveMazeUtil() to solve the problem. It returns false if no \r\n   path is possible, otherwise return true and prints the path in the\r\n   form of 1s. Please note that there may be more than one solutions, \r\n   this function prints one of the feasible solutions.*/\r\nbool solveMaze(int maze[N][N])\r\n{\r\n    int sol[N][N] = { {0, 0, 0, 0},\r\n        {0, 0, 0, 0},\r\n        {0, 0, 0, 0},\r\n        {0, 0, 0, 0}\r\n    };\r\n\r\n    if(solveMazeUtil(maze, 0, 0, sol) == false)\r\n    {\r\n        printf(&quot;Solution doesn\'t exist&quot;);\r\n        return false;\r\n    }\r\n\r\n    printSolution(sol);\r\n    return true;\r\n}\r\n\r\n/* A recursive utility function to solve Maze problem */\r\nbool solveMazeUtil(int maze[N][N], int x, int y, int sol[N][N])\r\n{\r\n    // if (x,y is goal) return true\r\n    if(x == N-1 &amp;&amp; y == N-1)\r\n    {\r\n        sol[x][y] = 1;\r\n        return true;\r\n    }\r\n\r\n    // Check if maze[x][y] is valid\r\n    if(isSafe(maze, x, y) == true)\r\n    {\r\n        // mark x,y as part of solution path\r\n        sol[x][y] = 1;\r\n\r\n        /* Move forward in x direction */\r\n        if (solveMazeUtil(maze, x+1, y, sol) == true)\r\n            return true;\r\n\r\n        /* If moving in x direction doesn\'t give solution then\r\n           Move down in y direction  */\r\n        if (solveMazeUtil(maze, x, y+1, sol) == true)\r\n            return true;\r\n\r\n        /* If none of the above movements work then BACKTRACK: \r\n            unmark x,y as part of solution path */\r\n        sol[x][y] = 0;\r\n        return false;\r\n    }   \r\n\r\n    return false;\r\n}\r\n\r\n// driver program to test above function\r\nint main()\r\n{\r\n    int maze[N][N]  =  { {1, 0, 0, 0},\r\n        {1, 1, 0, 1},\r\n        {0, 1, 0, 0},\r\n        {1, 1, 1, 1}\r\n    };\r\n\r\n    solveMaze(maze);\r\n    return 0;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Java</h2>\n<div class="tabcontent">\n\n<pre class="brush: java; highlight: [30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90]; title: ; notranslate" title="">\r\n/* Java program to solve Rat in a Maze problem using\r\n   backtracking */\r\n\r\npublic class RatMaze\r\n{\r\n    final int N = 4;\r\n\r\n    /* A utility function to print solution matrix\r\n       sol[N][N] */\r\n    void printSolution(int sol[][])\r\n    {\r\n        for (int i = 0; i &lt; N; i++)\r\n        {\r\n            for (int j = 0; j &lt; N; j++)\r\n                System.out.print(&quot; &quot; + sol[i][j] +\r\n                                 &quot; &quot;);\r\n            System.out.println();\r\n        }\r\n    }\r\n\r\n    /* A utility function to check if x,y is valid\r\n        index for N*N maze */\r\n    boolean isSafe(int maze[][], int x, int y)\r\n    {\r\n        // if (x,y outside maze) return false\r\n        return (x &gt;= 0 &amp;&amp; x &lt; N &amp;&amp; y &gt;= 0 &amp;&amp;\r\n                y &lt; N &amp;&amp; maze[x][y] == 1);\r\n    }\r\n\r\n    /* This function solves the Maze problem using\r\n       Backtracking. It mainly uses solveMazeUtil()\r\n       to solve the problem. It returns false if no\r\n       path is possible, otherwise return true and\r\n       prints the path in the form of 1s. Please note\r\n       that there may be more than one solutions, this\r\n       function prints one of the feasible solutions.*/\r\n    boolean solveMaze(int maze[][])\r\n    {\r\n        int sol[][] = {{0, 0, 0, 0},\r\n            {0, 0, 0, 0},\r\n            {0, 0, 0, 0},\r\n            {0, 0, 0, 0}\r\n        };\r\n\r\n        if (solveMazeUtil(maze, 0, 0, sol) == false)\r\n        {\r\n            System.out.print(&quot;Solution doesn\'t exist&quot;);\r\n            return false;\r\n        }\r\n\r\n        printSolution(sol);\r\n        return true;\r\n    }\r\n\r\n    /* A recursive utility function to solve Maze\r\n       problem */\r\n    boolean solveMazeUtil(int maze[][], int x, int y,\r\n                          int sol[][])\r\n    {\r\n        // if (x,y is goal) return true\r\n        if (x == N - 1 &amp;&amp; y == N - 1)\r\n        {\r\n            sol[x][y] = 1;\r\n            return true;\r\n        }\r\n\r\n        // Check if maze[x][y] is valid\r\n        if (isSafe(maze, x, y) == true)\r\n        {\r\n            // mark x,y as part of solution path\r\n            sol[x][y] = 1;\r\n\r\n            /* Move forward in x direction */\r\n            if (solveMazeUtil(maze, x + 1, y, sol))\r\n                return true;\r\n\r\n            /* If moving in x direction doesn\'t give\r\n               solution then  Move down in y direction */\r\n            if (solveMazeUtil(maze, x, y + 1, sol))\r\n                return true;\r\n\r\n            /* If none of the above movements work then\r\n               BACKTRACK: unmark x,y as part of solution\r\n               path */\r\n            sol[x][y] = 0;\r\n            return false;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public static void main(String args[])\r\n    {\r\n        RatMaze rat = new RatMaze();\r\n        int maze[][] = {{1, 0, 0, 0},\r\n            {1, 1, 0, 1},\r\n            {0, 1, 0, 0},\r\n            {1, 1, 1, 1}\r\n        };\r\n        rat.solveMaze(maze);\r\n    }\r\n}\r\n// This code is contributed by Abhishek Shankhadhar\r\n</pre>\n<p></div></div><br />\nOutput: The 1 values show the path for rat\n<pre> 1  0  0  0 \r\n 1  1  0  0 \r\n 0  1  0  0 \r\n 0  1  1  1 </pre>\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="13376 http://geeksforgeeks.org/?p=13376">33 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/backtracking/" rel="category tag">Backtracking</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/backtracking/" rel="tag">Backtracking</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/fill-two-instances-numbers-1-n-specific-way/" title="Fill two instances of all numbers from 1 to n in a specific way">Fill two instances of all numbers from 1 to n in a specific way</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-8-solving-cryptarithmetic-puzzles/" title="Backtracking | Set 8 (Solving Cryptarithmetic Puzzles)">Backtracking | Set 8 (Solving Cryptarithmetic Puzzles)</a></li><li><a href="http://www.geeksforgeeks.org/print-all-possible-paths-from-top-left-to-bottom-right-of-a-mxn-matrix/" title="Print all possible paths from top left to bottom right of a mXn matrix">Print all possible paths from top left to bottom right of a mXn matrix</a></li><li><a href="http://www.geeksforgeeks.org/tug-of-war/" title="Tug of War">Tug of War</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" title="Backtracking | Set 7 (Sudoku)">Backtracking | Set 7 (Sudoku)</a></li><li><a href="http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/" title="Backtracking | Set 5 (m Coloring Problem)">Backtracking | Set 5 (m Coloring Problem)</a></li><li><a href="http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/" title="Backtracking | Set 4 (Subset Sum)">Backtracking | Set 4 (Subset Sum)</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/" title="Backtracking | Set 3 (N Queen Problem)">Backtracking | Set 3 (N Queen Problem)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/backtracking-set-1-the-knights-tour-problem/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="13376" ptitle="Backtracking | Set 2 (Rat in a Maze)" id="ratePlugin"></div>\r\n<div pid="13376" ptitle="Backtracking | Set 2 (Rat in a Maze)" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-35937">\r\n        <div id="dsq-comment-header-35937" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35937">\r\n                <span id="dsq-author-user-35937">kzs</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35937" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35937" class="dsq-comment-message"><p>please provide solution for the problem including 1.down 2.left 3.right possible ways.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-33403">\r\n        <div id="dsq-comment-header-33403" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33403">\r\n                <span id="dsq-author-user-33403">Amit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33403" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33403" class="dsq-comment-message"><p>Very well explained but it will fail for the case in which rat has to travel left or up and then the normal path<br />\nex<br />\n1 1 1 0 0<br />\n0 0 1 0 0<br />\n0 1 1 0 0<br />\n0 1 0 0 0<br />\n0 1 1 1 1</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-33861">\r\n        <div id="dsq-comment-header-33861" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33861">\r\n                <span id="dsq-author-user-33861">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33861" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33861" class="dsq-comment-message"><p>Amit, please take a closer look at the problem statement.  It is clearly mentioned that the rat can only move forward (or right) and down.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-33887">\r\n        <div id="dsq-comment-header-33887" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33887">\r\n                <span id="dsq-author-user-33887">amit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33887" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33887" class="dsq-comment-message"><p>oops.<br />\nkartik Thanku buddy</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-32669">\r\n        <div id="dsq-comment-header-32669" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32669">\r\n                <span id="dsq-author-user-32669">shiv</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32669" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32669" class="dsq-comment-message"><p>here is one more sipmle solution of maze</p>\n<p>technofrendzz.blogspot.in</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-30438">\r\n        <div id="dsq-comment-header-30438" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30438">\r\n                <span id="dsq-author-user-30438">nakul gowda</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30438" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30438" class="dsq-comment-message"><p>here is the bfs implementation for the same, which is much quicker and gives you always the shortest path</p>\n<p>#include</p>\n<p>#define SIZE 7   </p>\n<p>int a[SIZE][SIZE],q[SIZE*SIZE],visited[SIZE][SIZE],n,i,j,f=0,r=-1;</p>\n<p>int parent[SIZE*SIZE], x_dest, y_dest, x_temp, y_temp;</p>\n<p>int flag =0;</p>\n<p>void find_neighbours(int x, int y)</p>\n<p>{</p>\n<p>    if (( (y+1)=0 &amp;&amp; (a[x][y-1]) &amp;&amp; !visited[x][y-1])</p>\n<p>    {</p>\n<p>        q[++r]= x*n + (y-1);</p>\n<p>        parent[x*n +  (y-1)] = x*n +y;</p>\n<p>        visited[x][y-1] =1;</p>\n<p>    }</p>\n<p>    if ((x+1)=0 &amp;&amp; (a[x-1][y]) &amp;&amp; !visited[x-1][y])</p>\n<p>    {</p>\n<p>        q[++r]= (x-1)*n + (y);</p>\n<p>        parent[(x-1)*n +  (y)] = x*n +y;</p>\n<p>        visited[x-1][y] =1;</p>\n<p>    }</p>\n<p>}</p>\n<p>void bfs(int x, int y)</p>\n<p>{</p>\n<p>    find_neighbours(x, y);</p>\n<p>        if(f&lt;=r)</p>\n<p>        {</p>\n<p>        x_temp = q[f]/n;</p>\n<p>        y_temp = q[f] &#8211; n*x_temp;    </p>\n<p>        if (x_temp == x_dest &amp;&amp; y_temp == y_dest)</p>\n<p>            {</p>\n<p>\t\t\t\tflag =1;</p>\n<p>\t\t\t\treturn ;</p>\n<p>\t\t\t}</p>\n<p>//        visited[x_temp][y_temp] = 1;</p>\n<p>              f++;</p>\n<p>        bfs(x_temp,y_temp);</p>\n<p>         }</p>\n<p>}</p>\n<p>int main()</p>\n<p>{</p>\n<p>    int x,y,val;</p>\n<p>    int source_x , source_y;</p>\n<p>    n = SIZE;</p>\n<p>    for(i=0;i&lt; n;i++)</p>\n<p>     {</p>\n<p>      q[i]=0;</p>\n<p>     }</p>\n<p>     for(i=0;i&lt; n;i++)</p>\n<p>      for(j=0;j&lt;n;j++)</p>\n<p>        {</p>\n<p>            visited[i][j] = 0;</p>\n<p>        }</p>\n<p>    for(i=0;i&lt;n*n;i++)</p>\n<p>        parent[i] = 0;</p>\n<p>     printf(&quot;n Enter graph data in matrix form:n&quot;);</p>\n<p>     for(i=0;i&lt; n;i++)</p>\n<p>      for(j=0;j&lt;n;j++)</p>\n<p>       scanf(&quot;%d&quot;,&amp;a[i][j]);</p>\n<p>    source_x = 0;</p>\n<p>    source_y = 0;</p>\n<p>\tvisited[source_x][source_y] =1;</p>\n<p>    x_dest = 6;</p>\n<p>    y_dest = 6;</p>\n<p>    bfs(0,0);</p>\n<p>\tif (!flag)</p>\n<p>\t\t{</p>\n<p>\t\t\tprintf(&quot;not reachablen&quot;);</p>\n<p>\t\t\treturn 0;</p>\n<p>\t    }</p>\n<p>    x = x_temp;</p>\n<p>    y = y_temp;</p>\n<p>    while(x!=0 || y!=0)</p>\n<p>    {</p>\n<p>        val = parent[x *n + y];</p>\n<p>        x = val/n;</p>\n<p>        y = val &#8211; x*n;</p>\n<p>        printf(&quot;%d %dn &quot;, x,y);</p>\n<p>    }</p>\n<p>return 0;</p>\n<p>}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-29500">\r\n        <div id="dsq-comment-header-29500" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29500">\r\n                <span id="dsq-author-user-29500">Raj</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29500" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29500" class="dsq-comment-message"><p>Here is the java version of rat in a maze. Code is really easy to understand.<br />\n<a href="http://techlovejump.in/2013/11/rat-in-a-maze-in-java/" rel="nofollow">http://techlovejump.in/2013/11/rat-in-a-maze-in-java/</a></p>\n<p>Demo of code :-<br />\n boolean solveMazeUtil(int matrix[][],int x,int y,int sol[][],int n){<br />\n            //path complete (if we are at our goal then path complete)<br />\n                if(x == n-1 &amp;&amp; y == n-1){<br />\n                    sol[x][y] = 1;<br />\n                        return true;<br />\n                        }<br />\n        if(isSafe(matrix,x,y,n) == true)<br />\n        {<br />\n        sol[x][y] = 1;<br />\n        // try right<br />\n        if(solveMazeUtil(matrix,x+1,y,sol,n))<br />\n            return true;<br />\n        //try down<br />\n        if(solveMazeUtil(matrix,x,y+1,sol,n))<br />\n            return true;<br />\n        //try left<br />\n        if(solveMazeUtil(matrix,x-1,y,sol,n))<br />\n            return true;<br />\n        //try up<br />\n        if(solveMazeUtil(matrix,x,y-1,sol,n))<br />\n            return true;<br />\n        //no case match so return false<br />\n        sol[x][y] = 0;<br />\n        return false;<br />\n        }<br />\n        return false;<br />\n        }}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</li><!-- #comment-## -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-17431">\r\n        <div id="dsq-comment-header-17431" class="dsq-comment-header">\r\n            <cite id="dsq-cite-17431">\r\n                <span id="dsq-author-user-17431">Suryaamsh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-17431" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-17431" class="dsq-comment-message"><p>This is quite long comment/reply.</p>\n<p>I think performance of the solution posted can be improved by memorizing whether a path exists from given node (to destination). </p>\n<p>Say, we are at a[i][j] and if both recursive calls of solveMazeUtil return false, it means that from that node there doesn&#8217;t exist a path leading to destination. Set a flag say, flags[i][j] to false. So, when a[i][j] is hit during another recursive call (arriving from different path), we can altogether ignore the subsequent recursive calls if flags[i][j] is found to be false. There is an overhead of n^2 bits though. In my opinion, it can reduce substantial amount of redundant recursive calls on an average. Please point the mistakes if found.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-24924">\r\n        <div id="dsq-comment-header-24924" class="dsq-comment-header">\r\n            <cite id="dsq-cite-24924">\r\n                <span id="dsq-author-user-24924">Aditya</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-24924" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-24924" class="dsq-comment-message"><p>so you are saying false =&gt; no path , true =&gt; path exists, what about the third case, where we do not know if path exists or not, i.e. we haven&#8217;t calculated yet?<br />\nits better if we use an int array with 0,1,2 values.</p>\n<p>correct me if I&#8217;m mistaken.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-16757">\r\n        <div id="dsq-comment-header-16757" class="dsq-comment-header">\r\n            <cite id="dsq-cite-16757">\r\n                <span id="dsq-author-user-16757">Kavish Dwivedi</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-16757" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-16757" class="dsq-comment-message"><p>Here is my code for the problem:</p>\n<pre> <code language="C">\n#include&lt;stdio.h&gt;\n#define N 4\nint sol[N][N],maze[N][N];\nint check(int x,int y)\n{\n\tif( x&gt;=0 &amp;&amp; x&lt;N &amp;&amp; y&gt;=0 &amp;&amp; y&lt;N &amp;&amp; maze[x][y]!=0 &amp;&amp; sol[x][y]==-1)\n\treturn 1;\n\treturn 0;\n}\nint solve(int x,int y,int move)\n{\n\tif(x==N-1&amp;&amp;y==N-1)\n\t{\n\t\treturn 1;\n\t}\n\telse\n\t{\n\t\tif(check(x+1,y)==1)\n\t\t{\n\t\t\tsol[x+1][y]=move;\n\t\t\tif(solve(x+1,y,move+1)==1)\n\t\t\treturn 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(&quot;Case 1\\n&quot;);\n\t\t\t\tsol[x+1][y]=-1;\n\t\t\t}\n\t\t\t\n\t\t}\n\t\tif(check(x,y+1)==1)\n\t\t{\n\t\t\tsol[x][y+1]=move;\n\t\t\tif(solve(x,y+1,move+1)==1)\n\t\t\treturn 1;\n\t\t\telse\n\t\t\t{\n\t\t\t\tprintf(&quot;Case 2\\n&quot;);\n\t\t\t\tsol[x][y+1]=-1;\n\t\t\t}\n\t\t}\n\t}\n\treturn 0;\n}\nint main()\n{\n\tint i,j;\n\tfor(i=0;i&lt;N;i++)\n\tfor(j=0;j&lt;N;j++)\n\tsol[i][j]=-1;\n\tprintf(&quot;Enter the maze:\\n&quot;);\n\tfor(i=0;i&lt;N;i++)\n\tfor(j=0;j&lt;N;j++)\n\tscanf(&quot;%d&quot;,&amp;maze[i][j]);\n\tsol[0][0]=0;\n\tif(solve(0,0,1)==1)\n\t{\n\t\tfor(i=0;i&lt;N;i++)\n\t\t{\n\t\t\tfor(j=0;j&lt;N;j++)\n\t\t\tprintf(&quot;%d &quot;,sol[i][j]);\n\t\t\tprintf(&quot;\\n&quot;);\n\t\t}\n\t}\n\telse\n\tprintf(&quot;No path exists\\n&quot;);\n\treturn 0;\n}\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-12113">\r\n        <div id="dsq-comment-header-12113" class="dsq-comment-header">\r\n            <cite id="dsq-cite-12113">\r\n                <span id="dsq-author-user-12113">Ravi Shankar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-12113" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-12113" class="dsq-comment-message"><p>This prints no. of solutions from 0,0 to n-1,n-1</p>\n<p>#include&lt;cstdio&gt;<br />\nint v[10][10],m[10][10],c=0,n,i,j,dx[4]={1,0,-1,0},dy[4]={0,1,0,-1};<br />\nint s(int x,int y){<br />\n\tif(x&gt;=0&amp;&amp;x&lt;n&amp;&amp;y&gt;=0&amp;&amp;y&lt;n&amp;&amp;m[x][y]&amp;&amp;!v[x][y]){<br />\n\t\tif(x==n-1&amp;&amp;y==n-1)return 1;<br />\n\t\tv[x][y]=1;<br />\n\t\tfor(int i=0;i&lt;4;i++)c+=s(x+dx[i],y+dy[i]);<br />\n\t\tv[x][y]=0;<br />\n\t}<br />\n\treturn 0;<br />\n}<br />\nint main(){<br />\n\tscanf(&quot;%d&quot;,&amp;n);<br />\n\tfor(i=0;i&lt;n;i++)for(j=0;j&lt;n;j++)scanf(&quot;%d&quot;,&amp;m[i][j]);<br />\n\ts(0,0);<br />\n\tprintf(&quot;%d\\n&quot;,c);<br />\n\treturn 0;<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-13520">\r\n        <div id="dsq-comment-header-13520" class="dsq-comment-header">\r\n            <cite id="dsq-cite-13520">\r\n                <span id="dsq-author-user-13520">hariprasath</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-13520" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-13520" class="dsq-comment-message"><p>does this implementation correct??<br />\n#include<br />\n#include<br />\n#include</p>\n<p>int a[9][9];<br />\nint b[9][9];</p>\n<p>int check(int x,int y,int val)<br />\n{<br />\n    int i,j;</p>\n<p>//Scanning its own Row and Column</p>\n<p>    for(i=0;i&lt;9;i++)<br />\n    {<br />\n        if(val==b[i][y] || val==b[x][i])   return 0;<br />\n    }</p>\n<p>// Scanning its own square</p>\n<p>    if(x&lt;3)<br />\n    {<br />\n        if(y&lt;3)<br />\n        {<br />\n            for(i=0;i&lt;3;i++)<br />\n                for(j=0;j&lt;3;j++)<br />\n                    if (val==b[i][j])   return 0;<br />\n        }<br />\n        else if(y&lt;6)<br />\n        {<br />\n            for(i=0;i&lt;3;i++)<br />\n                for(j=3;j&lt;6;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n        else<br />\n        {<br />\n            for(i=0;i&lt;3;i++)<br />\n                for(j=6;j&lt;9;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n    }</p>\n<p>    else if(x&lt;6)<br />\n    {<br />\n        if(y&lt;3)<br />\n        {<br />\n            for(i=3;i&lt;6;i++)<br />\n                for(j=0;j&lt;3;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n        else if(y&lt;6)<br />\n        {<br />\n            for(i=3;i&lt;6;i++)<br />\n                for(j=3;j&lt;6;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n        else<br />\n        {<br />\n            for(i=3;i&lt;6;i++)<br />\n                for(j=6;j&lt;9;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n    }<br />\n    else<br />\n    {<br />\n        if(y&lt;3)<br />\n        {<br />\n            for (i=6;i&lt;9;i++)<br />\n                for(j=0;j&lt;3;j++)<br />\n                    if (val == b[i][j]) return 0;<br />\n        }<br />\n        else if(y&lt;6)<br />\n        {<br />\n            for(i=6;i&lt;9;i++)<br />\n                for(j=3;j&lt;6;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n        else<br />\n        {<br />\n            for(i=6;i&lt;9;i++)<br />\n                for(j=6;j&lt;9;j++)<br />\n                    if(val==b[i][j])    return 0;<br />\n        }<br />\n    }<br />\n    return val;<br />\n}</p>\n<p>int BT(int x,int y)<br />\n{<br />\n    int t,i,j;</p>\n<p>//If the value is Zero then we have to find possible values!!</p>\n<p>    if(b[x][y]==0)<br />\n    {<br />\n        for(i=1;i0)<br />\n            {<br />\n                b[x][y]=t;<br />\n                if(x==8 &amp;&amp; y==8)    return 1;       //Puzzle solved and returns 1.<br />\n                else if(x==8)<br />\n                {<br />\n                    if(BT(0,y+1))   return 1;<br />\n                }<br />\n                else<br />\n                {<br />\n                    if(BT(x+1,y))   return 1 ;<br />\n                }<br />\n            }<br />\n        }<br />\n        if(i==10)<br />\n        {<br />\n            if(b[x][y] != a[x][y])  b[x][y]=0;<br />\n            return 0;<br />\n        }<br />\n    }<br />\n    else<br />\n    {<br />\n        if(x==8 &amp;&amp; y==8)    return 1;<br />\n        else if(x==8)<br />\n        {<br />\n            if(BT(0,y+1))   return 1;<br />\n        }<br />\n        else<br />\n        {<br />\n            if(BT(x+1,y))   return 1;<br />\n        }<br />\n    }<br />\n}</p>\n<p>main()<br />\n{<br />\n    int i,j;<br />\n    FILE * fd;<br />\n    fd=fopen(&#8220;input.txt&#8221;,&#8221;r&#8221;);<br />\n    printf(&#8220;Before Solving:\\n&#8221;);</p>\n<p>//Read the puzzle from the given text file!!</p>\n<p>    for(i=0;i&lt;9;i++)<br />\n    {<br />\n        fscanf(fd,&quot;%d%d%d%d%d%d%d%d%d&quot;,&amp;a[i][0],&amp;a[i][1],&amp;a[i][2],&amp;a[i][3],&amp;a[i][4],&amp;a[i][5],&amp;a[i][6],&amp;a[i][7],&amp;a[i][8]);<br />\n    }</p>\n<p>//For dispalying the given puzzle before solving and also copying it into another array for future use!!</p>\n<p>    for(i=0;i&lt;9;i++)<br />\n    {<br />\n        for (j=0;j&lt;9;j++)<br />\n        {<br />\n            b[i][j] = a[i][j];<br />\n            printf(&quot;%d &quot;, a[i][j]);<br />\n        }<br />\n        printf(&quot;\\n&quot;);<br />\n    }</p>\n<p>//Here i implemented backtrack for solving this given puzzle it returns 1 on success!!</p>\n<p>    if(BT(0,0))<br />\n    {<br />\n        printf(&quot;After Solving:\\n&quot;);<br />\n        for(i=0;i&lt;9;i++)<br />\n        {<br />\n            for(j=0;j&lt;9;j++)<br />\n            {<br />\n                printf(&quot;%d &quot;,b[i][j]);<br />\n            }<br />\n            printf(&quot;\\n&quot;);<br />\n        }<br />\n    }<br />\n    else<br />\n    {<br />\n        printf(&quot;Error in the given data\\n&quot;);<br />\n    }<br />\n    fclose(fd);<br />\n    return 0;<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-12112">\r\n        <div id="dsq-comment-header-12112" class="dsq-comment-header">\r\n            <cite id="dsq-cite-12112">\r\n                <span id="dsq-author-user-12112">Ravi Shankar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-12112" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-12112" class="dsq-comment-message"><p>Thanks</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-9577">\r\n        <div id="dsq-comment-header-9577" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9577">\r\n                <span id="dsq-author-user-9577">sachin</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9577" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9577" class="dsq-comment-message"><p>I have basic  C /recursion noob question.Can Someone please explain- when we backtrack,why we set sol[x][y] =0 .<br />\nAs sol[x][y] should not already be set to 0 when return to previous state of recursion?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-14584">\r\n        <div id="dsq-comment-header-14584" class="dsq-comment-header">\r\n            <cite id="dsq-cite-14584">\r\n                <span id="dsq-author-user-14584">monika</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-14584" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-14584" class="dsq-comment-message"><p>It is because, we were making changes in the same sol[][] matrix, and so when we backtrack, we have to undo the changes we had made.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-9153">\r\n        <div id="dsq-comment-header-9153" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9153">\r\n                <span id="dsq-author-user-9153">sachin</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9153" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9153" class="dsq-comment-message"><p>How to find out the shortest path among all the paths?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9017">\r\n        <div id="dsq-comment-header-9017" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9017">\r\n                <span id="dsq-author-user-9017">vivek</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9017" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9017" class="dsq-comment-message"><p>where is the backtracking step? i mean in backtracking,if subsequent computation don&#8217;t provide a valid solution we revert the state of a system to a previous stable state&#8230;right? so i don&#8217;t get where is that done here?here its just a condition checking .. please explain</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8529">\r\n        <div id="dsq-comment-header-8529" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8529">\r\n                <span id="dsq-author-user-8529">Guddu sharma</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8529" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8529" class="dsq-comment-message"><p>Here is my code which prints all the solutions of the maze.</p>\n<pre> <code language="C">\nvoid Maze(int (*maze)[N],int x,int y,int (*sol)[N])\n{\n\tstatic int i,j;\n\tif(x==N-1 &amp;&amp; y==N-1)\n\t{\n\t\tprintf(&quot;\\n\\nSolution\\n\\n&quot;);\n\t\tsol[x][y]=1;\n\t\tfor(i=0;i&lt;N;i++)\n\t\t{\n\t\t\tfor(j=0;j&lt;N;j++)\n\t\t\t\tprintf(&quot;%d &quot;,sol[i][j]);\n\t\t\tprintf(&quot;\\n&quot;);\n\t\t}\n\t}\n\telse\n\t{\n\t\tif(isSafe(maze,x,y))\n\t\t{\n\t\t\tsol[x][y]=1;\n\n\t\t\tMaze(maze,x+1,y,sol);\n\t\t\tMaze(maze,x,y+1,sol);\n\n\t\t\tsol[x][y]=0;\n\t\t}\n\t}\n}\n</code> </pre>\n<p>comments are welcome</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-7876">\r\n        <div id="dsq-comment-header-7876" class="dsq-comment-header">\r\n            <cite id="dsq-cite-7876">\r\n                <span id="dsq-author-user-7876">Ajinkya</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-7876" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-7876" class="dsq-comment-message"><p>Execute this modified code to print all possible paths and not just one path&#8230; Also a new more clear printPath procedure&#8230;.</p>\n<pre> <code language="C">\n#include&lt;stdio.h&gt;\n#include&lt;conio.h&gt;\n#include&lt;iostream.h&gt;\n \n// Maze size\n#define N 4 \n \nvoid solveMazeUtil(int maze[N][N], int x, int y, int sol[N][N]);\n \n/* A utility function to print solution matrix sol[N][N] */\nvoid printSolution(int sol[N][N],int i,int j)\n{\n    /*for (int i = 0; i &lt; N; i++)\n    {\n        for (int j = 0; j &lt; N; j++)\n            printf(&quot; %d &quot;, sol[i][j]);\n        printf(&quot;\\n&quot;);\n    }*/\n\n       cout&lt;&lt;&quot;(&quot;&lt;&lt;i&lt;&lt;&quot;,&quot;&lt;&lt;j&lt;&lt;&quot;)&quot;&lt;&lt;endl;\n       if(i==N-1 &amp;&amp; j==N-1) //end\n         return;\n       if(sol[i+1][j]==1)\n        printSolution(sol,i+1,j);\n       else\n        printSolution(sol,i,j+1);\n   //go down till you can, if you cant go right\n   \n          \n}\n \n/* A utility function to check if x,y is valid index for N*N maze */\nbool isSafe(int maze[N][N], int x, int y)\n{\n    // if (x,y outside maze) return false\n    if(x &gt;= 0 &amp;&amp; x &lt; N &amp;&amp; y &gt;= 0 &amp;&amp; y &lt; N &amp;&amp; maze[x][y] == 1)\n        return true;\n \n    return false;\n}\n \n/* This function solves the Maze problem using Backtracking.  It mainly uses\nsolveMazeUtil() to solve the problem. It returns false if no path is possible,\notherwise return true and prints the path in the form of 1s. Please note that\nthere may be more than one solutions, this function prints one of the feasible\nsolutions.*/\nvoid solveMaze(int maze[N][N])\n{\n    int sol[N][N] = { {0, 0, 0, 0},\n        {0, 0, 0, 0},\n        {0, 0, 0, 0},\n        {0, 0, 0, 0}\n    };\n \n    solveMazeUtil(maze, 0, 0, sol);\n    //return true;\n}\n \n/* A recursive utility function to solve Maze problem */\nvoid solveMazeUtil(int maze[N][N], int x, int y, int sol[N][N])\n{\n      cout&lt;&lt;&quot;x: &quot;&lt;&lt;x&lt;&lt;&quot; y: &quot;&lt;&lt;y&lt;&lt;endl;\n    // if (x,y is goal) return true\n    if(x == N-1 &amp;&amp; y == N-1)\n    {\n        sol[x][y] = 1;\n        printSolution(sol,0,0);\n        return;\n    }\n \n    // Check if maze[x][y] is valid\n    if(isSafe(maze, x, y) == true)\n    {\n        // mark x,y as part of solution path\n        sol[x][y] = 1;\n       \n \n        /* Move forward in x direction */\n        solveMazeUtil(maze, x+1, y, sol);\n        \n        /* If x moving in x direction doesn\'t give solution then\n           Move down in y direction  */\n        solveMazeUtil(maze, x, y+1, sol);\n        sol[x][y]=0;\n \n        /* If none of the above movements work then BACKTRACK:\n            unmark x,y as part of solution path */\n        //sol[x][y] = 0;\n        //return false;\n    }   \n \n    \n}\n \n// driver program to test above function\nint main()\n{\n    int maze[N][N]  =  { {1,0,0,0},\n        {1, 1, 0, 1},\n        {0, 1, 1, 0},\n        {1, 1, 1, 1}\n    };\n \n    solveMaze(maze);\n    getchar();\n    return 0;\n}\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-agniswar odd alt thread-even depth-1" id="dsq-comment-5097">\r\n        <div id="dsq-comment-header-5097" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5097">\r\n                <span id="dsq-author-user-5097">Agniswar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5097" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5097" class="dsq-comment-message"><p>Hey this is my solution..please tell me if there is any wrong in the code somewhere-</p>\n<p>#include<br />\n#include</p>\n<p>#define N 4</p>\n<p>int is_safe(int a[N][N],int sol[][N],int x1,int y1)<br />\n{<br />\n    if((x1&gt;=0 &amp;&amp; y1&gt;=0) &amp;&amp; (x1&lt;=N-1 &amp;&amp; y1&lt;=N-1))<br />\n    {<br />\n              if(a[x1][y1]==1 &amp;&amp; sol[x1][y1]==0)<br />\n                              return 1;<br />\n    }<br />\n    return 0;<br />\n}</p>\n<p>void init(int sol[N][N])<br />\n{<br />\n     int i,j;<br />\n     for(i=0;i&lt;N;i++)<br />\n     {<br />\n            for(j=0;j&lt;N;j++)<br />\n            {<br />\n                            sol[i][j]=0;<br />\n            }<br />\n     }<br />\n}</p>\n<p>void print(int a[][N])<br />\n{<br />\n     int i,j;<br />\n     for(i=0;i&lt;N;i++)<br />\n     {<br />\n            for(j=0;j&lt;N;j++)<br />\n            {<br />\n                            printf(&quot;%d    &quot;,a[i][j]);<br />\n            }<br />\n            printf(&quot;\\n&quot;);<br />\n     }<br />\n}     </p>\n<p>int rat_in_maze(int a[N][N],int sol[N][N],int x1,int y1,int x2,int y2)<br />\n{<br />\n    static int flag=0;</p>\n<p>    if(x1==x2 &amp;&amp; y1==y2)<br />\n    {<br />\n              printf(&quot;destination found\\n&quot;);<br />\n              sol[x1][y1]=1;<br />\n              print(sol);<br />\n              return 1;<br />\n    }</p>\n<p>     else if(is_safe(a,sol,x1,y1))<br />\n     {<br />\n        sol[x1][y1]=1;</p>\n<p>     }</p>\n<p>     else if(!is_safe(a,sol,x1,y1))<br />\n         return 0;</p>\n<p>     if(flag==0)<br />\n     {<br />\n                return (rat_in_maze(a,sol,x1+1,y1,x2,y2) || rat_in_maze(a,sol,x1,y1+1,x2,y2)||rat_in_maze(a,sol,x1-1,y1,x2,y2)||rat_in_maze(a,sol,x1,y1-1,x2,y2));</p>\n<p>     }<br />\n}</p>\n<p>int main()<br />\n{</p>\n<p>    int a[N][N]  =  { {1, 1, 0, 0},<br />\n        {1, 1, 0, 1},<br />\n        {0, 1, 0, 0},<br />\n        {1, 1, 1, 1}<br />\n    };</p>\n<p>    int sol[N][N];</p>\n<p>    init(sol);</p>\n<p>    int x=rat_in_maze(a,sol,0,0,3,3);<br />\n    //print(a);<br />\n    printf(&quot;\\n\\n&quot;);<br />\n    printf(&quot;x=%d\\n&quot;,x);<br />\n    if(x==0)<br />\n            printf(&quot;No solution exists\\n&quot;);<br />\n    getch();<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-4665">\r\n        <div id="dsq-comment-header-4665" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4665">\r\n                <span id="dsq-author-user-4665">karthiga</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4665" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4665" class="dsq-comment-message"><p>can somebody pls help me how dis part working ..i cant understand dis !!!!!!</p>\n<pre> <code language="C">\r\nbool solveMazeUtil(int maze[N][N], int x, int y, int sol[N][N])\r\n{\r\n    // if (x,y is goal) return true\r\n    if(x == N-1 &amp;amp;&amp;amp; y == N-1)\r\n    {\r\n        sol[x][y] = 1;\r\n        return true;\r\n    }\r\n \r\n    // Check if maze[x][y] is valid\r\n    if(isSafe(maze, x, y) == true)\r\n    {\r\n        // mark x,y as part of solution path\r\n        sol[x][y] = 1;\r\n \r\n        /* Move forward in x direction */\r\n        if (solveMazeUtil(maze, x+1, y, sol) == true)\r\n            return true;\r\n \r\n        /* If x moving in x direction doesn\'t give solution then\r\n           Move down in y direction  */\r\n        if (solveMazeUtil(maze, x, y+1, sol) == true)\r\n            return true;\r\n \r\n        /* If none of the above movements work then BACKTRACK:\r\n            unmark x,y as part of solution path */\r\n        sol[x][y] = 0;\r\n        return false;\r\n    }   \r\n \r\n    return false;\r\n}\r\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-6905">\r\n        <div id="dsq-comment-header-6905" class="dsq-comment-header">\r\n            <cite id="dsq-cite-6905">\r\n                <span id="dsq-author-user-6905">PolaNix</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-6905" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-6905" class="dsq-comment-message"><p>If you cant understand this clearly written code along with the descriptive comments, this is a serious RED flag.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-7790">\r\n        <div id="dsq-comment-header-7790" class="dsq-comment-header">\r\n            <cite id="dsq-cite-7790">\r\n                <span id="dsq-author-user-7790">xor</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-7790" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-7790" class="dsq-comment-message"><p>The code is clear to you because you wrote it.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-nitishgarg odd alt thread-even depth-1" id="dsq-comment-4652">\r\n        <div id="dsq-comment-header-4652" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4652">\r\n                <span id="dsq-author-user-4652">nitishgarg</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4652" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4652" class="dsq-comment-message"><p>Err..The code given above is not printing the correct solution, check here: <a href="https://ideone.com/Ffssm" rel="nofollow">https://ideone.com/Ffssm</a><br />\nCan anyone check why?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-sandeep even depth-2" id="dsq-comment-4658">\r\n        <div id="dsq-comment-header-4658" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4658">\r\nhttp://geeksforgeeks.org/                <span id="dsq-author-user-4658">Sandeep</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4658" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4658" class="dsq-comment-message"><p>@nitishgarg: Thanks for pointing this out.  The original code was working on my compiler (Code Blocks) but there was a small issue which was causing problems on Ideone.  I have added &#8220;return false&#8221; at the end of solveMaze().  It should work on all compilers now.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-8719">\r\n        <div id="dsq-comment-header-8719" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8719">\r\n                <span id="dsq-author-user-8719">atul</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8719" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8719" class="dsq-comment-message"><p>code does  not work for below test case :-</p>\n<p>int maze[N][N]  =  {<br />\n        {1, 1, 1, 1},<br />\n        {0, 0, 1, 1},<br />\n        {0, 1, 1, 0},<br />\n        {1, 1, 1, 1}<br />\n    };</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-4" id="dsq-comment-32847">\r\n        <div id="dsq-comment-header-32847" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32847">\r\n                <span id="dsq-author-user-32847">Aps</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32847" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32847" class="dsq-comment-message"><p>It doesn&#8217;t work because we defined &#8216;N&#8217; value to 9 so the array which we given is 4X4 but compiler considers it as 9X9 by inserting zeros(as we no for zero&#8217;s there is no path),so by changing N value to 4 we can get a correct path</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt depth-3" id="dsq-comment-8722">\r\n        <div id="dsq-comment-header-8722" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8722">\r\n                <span id="dsq-author-user-8722">atul</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8722" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8722" class="dsq-comment-message"><p>it will fail for following test case :-</p>\n<p>int maze[N][N]  =  {<br />\n        {1, 1, 1, 1,1,1},<br />\n        {0, 0, 1, 0,0,1},<br />\n        {0, 0, 0, 1,1,1},<br />\n        {1, 1, 0, 0,1,0},<br />\n\t{0, 0, 1, 1,1,1},<br />\n\t{0, 0, 0, 0,0,1}<br />\n    };</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-3" id="dsq-comment-8729">\r\n        <div id="dsq-comment-header-8729" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8729">\r\n                <span id="dsq-author-user-8729">atul007</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8729" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8729" class="dsq-comment-message"><p>Here is the code which will for all cases :-</p>\n<pre> <code language="C">\n\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#define N 9\n\nint validPath(int maze[][N],int row,int col)\n{\n\tif(maze[row][col])\n\t\treturn 1;\n\nreturn 0;\n}\nvoid printSolution(int path[][N])\n{\nint i,j;\n\n        for(i=0;i&lt;N;i++)\n        {\n                for(j=0;j&lt;N;j++)\n                {\n                        printf(&quot;%d &quot;,path[i][j]);\n                }\n                printf(&quot;\\n&quot;);\n        }\n}\n\nint searchUtil(int maze[][N],int sol[][N],int row,int col)\n{\n\nif(row==N-1 &amp;&amp; col==N-1)\n{\n\tsol[row][col]=1;\n\treturn 1;\n}\n\nif(row &gt;= N || col &gt;= N || row &lt; 0 || col &lt; 0)\n{\n\t\treturn 0;\n}\n\tif(validPath(maze,row,col)==1)\n\t{\n\t\tif(sol[row][col]==0)\n\t\t{\n\t\t\tsol[row][col]=1;\n\t\t\t\n\t\t\t\tif(searchUtil(maze,sol,row,col+1)==1)\n\t\t\t\t\treturn 1;\n\t\t\n\t\t\t\tif(searchUtil(maze,sol,row+1,col)==1)\n\t\t\t\t\treturn 1;\n\n                \t\tif(searchUtil(maze,sol,row,col-1)==1)\n\t\t\t\t\treturn 1;\n\n\t\t\t\tif(searchUtil(maze,sol,row-1,col)==1)\n                                        return 1;\n \t\t\t\t\n\t\t\n\t\t\tsol[row][col]=0;\n\n\t\t}\n\t}\n\nreturn 0;\n}\n\n\nvoid searchPath(int maze[][N])\n{\n\tint path[N][N];\n\tint i,j;\n\n\tfor(i=0;i&lt;N;i++)\n\t\tfor(j=0;j&lt;N;j++)\n\t\t\tpath[i][j]=0;\n\n\tif(searchUtil(maze,path,0,0)==0)\n\t{\n\t\tprintf(&quot;\\n\\nPath does not exist\\n\\n&quot;);\n\t}\n\telse\n\t{\n\t\tprintf(&quot;\\n\\nSolution\\n\\n&quot;);\n\t\tprintSolution(path);\n\t}\t\n\n}\n\nint main()\n{\n\nint maze[N][N]  =  {\n        {1, 1, 1, 1,1,1,0,0,0},\n        {0, 0, 1, 0,0,1,0,0,0},\n        {0, 0, 0, 1,1,1,0,0,1},\n        {1, 1, 0, 0,1,0,0,0,0},\n        {0, 0, 1, 1,1,0,0,0,1},\n        {1, 1, 1, 0,0,0,0,0,0},\n\t{0, 1, 0, 0,1,1,1,0,0},\n\t{0, 1, 1, 1,1,0,1,1,0},\n\t{0, 0, 0, 0,0,0,0,1,1},\n    };\n\n/*\nmodify #define N accordingly for below test case..or it wont give correct output. \n\nint maze[N][N]  =  {\n        {1, 1, 1, 1,1,1},\n        {0, 0, 1, 0,0,1},\n        {0, 0, 0, 1,1,1},\n        {1, 1, 0, 0,1,0},\n\t{0, 0, 1, 1,1,1},\n\t{0, 0, 0, 0,0,1}\n    };\n*/\n/*\nint maze[N][N]  =  { {1, 1, 1, 1},\n        {1, 1, 1, 1},\n        {1, 1, 1, 1},\n        {1, 1, 1, 1}\n    };\n*/\nsearchPath(maze);\nprintf(&quot;\\n&quot;);\nreturn 1;\n}\n\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-4651">\r\n        <div id="dsq-comment-header-4651" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4651">\r\n                <span id="dsq-author-user-4651">yu</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4651" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4651" class="dsq-comment-message"><p>we can also build a binary tree from the matrix representation and do a depth-first traversal to find a route to destination.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-sandeep even depth-2" id="dsq-comment-4659">\r\n        <div id="dsq-comment-header-4659" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4659">\r\nhttp://geeksforgeeks.org/                <span id="dsq-author-user-4659">Sandeep</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4659" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4659" class="dsq-comment-message"><p>Backtracking  solution does DFS traversal only. The point to note is that the Backtracking solutions do not always traverse the complete tree. Backtracking stops at an internal node when it sees that no solution is feasible from this node and starts exploring other possibilities.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/\';\r\nvar disqus_identifier = \'13376 http://geeksforgeeks.org/?p=13376\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Backtracking | Set 2 (Rat in a Maze)";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(406)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(81)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(57)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'62 topics\' style=\'font-size: 15.766423357664pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.332 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-02 13:38:38 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p373
sb.