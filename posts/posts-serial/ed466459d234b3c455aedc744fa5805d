ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/IntersectingLists'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/IntersectingLists.java'
p11
atp12
Rp13
sS'title'
p14
VWrite a function to get the intersection point of two Linked Lists.
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(g22
g2
Ntp44
Rp45
(dp46
g26
I00
sg27
g0
(cbs4.element
NavigableString
p47
c__builtin__
unicode
p48
VThere are two singly linked lists in a system. By some programming error the end node of one of the linked list got linked into the second list, forming a inverted Y shaped list. Write a program to get the point where two linked list merge. 
p49
tp50
Rp51
(dp52
g34
Nsg27
g39
sg28
g45
sg37
g45
sg31
g39
sbsg28
Nsg29
Vspan
p53
sg31
g39
sg32
Nsg33
Nsg34
g51
sg35
(dp54
Vid
p55
Vmore-2405
p56
ssg37
g42
sS'parser_class'
p57
cbs4
BeautifulSoup
p58
sS'hidden'
p59
I00
sS'contents'
p60
(lp61
sbsg28
g0
(g22
g2
Ntp62
Rp63
(dp64
g26
I00
sg27
g0
(g47
g48
V\u000aAbove diagram shows an example with two linked list having 15 as intersection point.
p65
tp66
Rp67
(dp68
g34
g0
(g22
g2
Ntp69
Rp70
(dp71
g26
I01
sg27
g0
(g22
g2
Ntp72
Rp73
(dp74
g26
I01
sg27
g42
sg28
g70
sg29
Vimg
p75
sg31
g42
sg32
Nsg33
Nsg34
Nsg35
(dp76
Vsrc
p77
Vhttp://www.geeksforgeeks.org/wp-content/uploads/2009/10/Y-ShapedLinked-List.gif
p78
sVtitle
p79
VY ShapedLinked List
p80
sVheight
p81
V300
p82
sVwidth
p83
V275
p84
sValt
p85
VY ShapedLinked List
p86
sVclass
p87
(lp88
Valigncenter
p89
aVsize-full
p90
aVwp-image-2753
p91
assg37
g70
sg57
g58
sg59
I00
sg60
(lp92
sbsg28
g67
sg29
Vbr
p93
sg31
g42
sg32
Nsg33
Nsg34
g73
sg35
(dp94
sg37
g67
sg57
g58
sg59
I00
sg60
(lp95
sbsg27
g70
sg28
Nsg37
g63
sg31
g42
sbsg28
g0
(g22
g2
Ntp96
Rp97
(dp98
g26
I00
sg27
g0
(g47
g48
V\u000a
p99
tp100
Rp101
(dp102
g34
g0
(g22
g2
Ntp103
Rp104
(dp105
g26
I00
sg27
g0
(g47
g48
V\u000a
p106
tp107
Rp108
(dp109
g34
Nsg27
g63
sg28
g104
sg37
g104
sg31
g63
sbsg28
g101
sg29
Vh2
p110
sg31
g63
sg32
Nsg33
Nsg34
g108
sg35
(dp111
sg37
g0
(g22
g2
Ntp112
Rp113
(dp114
g26
I00
sg27
g104
sg28
Nsg29
Va
p115
sg31
g104
sg32
Nsg33
Nsg34
Nsg35
(dp116
Vhref
p117
Vhttp://practice.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1
p118
ssg37
g0
(g47
g48
VRecommended: Please solve it on \u201c
p119
tp120
Rp121
(dp122
g34
Nsg27
g113
sg28
g0
(g22
g2
Ntp123
Rp124
(dp125
g26
I00
sg27
g121
sg28
g0
(g47
g48
V\u201d first, before moving on to the solution.
p126
tp127
Rp128
(dp129
g34
g124
sg27
g0
(g47
g48
VPRACTICE
p130
tp131
Rp132
(dp133
g34
Nsg27
g0
(g22
g2
Ntp134
Rp135
(dp136
g26
I00
sg27
g0
(g22
g2
Ntp137
Rp138
(dp139
g26
I00
sg27
g124
sg28
Nsg29
Vi
p140
sg31
g124
sg32
Nsg33
Nsg34
Nsg35
(dp141
sg37
g135
sg57
g58
sg59
I00
sg60
(lp142
g135
asbsg28
Nsg29
Vu
p143
sg31
g138
sg32
Nsg33
Nsg34
Nsg35
(dp144
sg37
g132
sg57
g58
sg59
I00
sg60
(lp145
g132
asbsg28
Nsg37
g128
sg31
g135
sbsg28
Nsg37
g101
sg31
g113
sbsg29
Vb
p146
sg31
g113
sg32
Nsg33
Nsg34
g121
sg35
(dp147
sg37
g138
sg57
g58
sg59
I00
sg60
(lp148
g138
asbsg37
g124
sg31
g113
sbsg57
g58
sg59
I00
sg60
(lp149
g121
ag124
ag128
asbsg57
g58
sg59
I00
sg60
(lp150
g113
asbsg27
g128
sg28
Nsg37
g97
sg31
g63
sbsg28
g0
(g22
g2
Ntp151
Rp152
(dp153
g26
I00
sg27
g0
(g47
g48
V\u000aUse 2 nested for loops. Outer loop will be for each node of the 1st list and inner loop will be for 2nd list. In the inner loop, check if any of nodes of 2nd list is same as the current node of first linked list. Time complexity of this method will be O(mn) where m and n are the number of nodes in two lists.
p154
tp155
Rp156
(dp157
g34
g0
(g22
g2
Ntp158
Rp159
(dp160
g26
I01
sg27
g0
(g47
g48
VMethod 1(Simply use two loops)
p161
tp162
Rp163
(dp164
g34
Nsg27
g0
(g22
g2
Ntp165
Rp166
(dp167
g26
I00
sg27
g97
sg28
g159
sg29
Vstrong
p168
sg31
g97
sg32
Nsg33
Nsg34
Nsg35
(dp169
sg37
g163
sg57
g58
sg59
I00
sg60
(lp170
g163
asbsg28
Nsg37
g159
sg31
g166
sbsg28
g156
sg29
Vbr
p171
sg31
g97
sg32
Nsg33
Nsg34
g166
sg35
(dp172
sg37
g156
sg57
g58
sg59
I00
sg60
(lp173
sbsg27
g159
sg28
Nsg37
g152
sg31
g97
sbsg28
g0
(g22
g2
Ntp174
Rp175
(dp176
g26
I00
sg27
g0
(g47
g48
V\u000aThis solution requires modifications to basic linked list data structure.  Have a visited flag with each node.  Traverse the first linked list and keep marking visited nodes.  Now traverse second linked list, If you see a visited node again then there is an intersection point, return the intersecting node. This solution works in O(m+n) but requires additional information with each node. A variation of this solution that doesn\u2019t require modification to basic data structure can be implemented using hash.  Traverse the first  linked list and  store the addresses of visited nodes in a hash. Now traverse the second linked list and if you see an address that already exists in hash then return the intersecting node.
p177
tp178
Rp179
(dp180
g34
g0
(g22
g2
Ntp181
Rp182
(dp183
g26
I01
sg27
g0
(g47
g48
VMethod 2 (Mark Visited Nodes)
p184
tp185
Rp186
(dp187
g34
Nsg27
g0
(g22
g2
Ntp188
Rp189
(dp190
g26
I00
sg27
g152
sg28
g182
sg29
Vstrong
p191
sg31
g152
sg32
Nsg33
Nsg34
Nsg35
(dp192
sg37
g186
sg57
g58
sg59
I00
sg60
(lp193
g186
asbsg28
Nsg37
g182
sg31
g189
sbsg28
g179
sg29
Vbr
p194
sg31
g152
sg32
Nsg33
Nsg34
g189
sg35
(dp195
sg37
g179
sg57
g58
sg59
I00
sg60
(lp196
sbsg27
g182
sg28
Nsg37
g175
sg31
g152
sbsg28
g0
(g22
g2
Ntp197
Rp198
(dp199
g26
I00
sg27
g0
(g47
g48
V\u000a5) Then we can traverse both the lists in parallel till we come across a common node. (Note that getting a common node is done by comparing the address of the nodes)
p200
tp201
Rp202
(dp203
g34
g0
(g22
g2
Ntp204
Rp205
(dp206
g26
I01
sg27
g0
(g47
g48
V\u000a4) Now traverse the bigger list from the first node till d nodes so that from here onwards both the lists have equal no of nodes.
p207
tp208
Rp209
(dp210
g34
g0
(g22
g2
Ntp211
Rp212
(dp213
g26
I01
sg27
g0
(g47
g48
V\u000a3) Get the difference of counts d = abs(c1 \u2013 c2)
p214
tp215
Rp216
(dp217
g34
g0
(g22
g2
Ntp218
Rp219
(dp220
g26
I01
sg27
g0
(g47
g48
V\u000a2) Get count of the nodes in second list, let count be c2.
p221
tp222
Rp223
(dp224
g34
g0
(g22
g2
Ntp225
Rp226
(dp227
g26
I01
sg27
g0
(g47
g48
V\u000a1) Get count of the nodes in first list, let count be c1.
p228
tp229
Rp230
(dp231
g34
g0
(g22
g2
Ntp232
Rp233
(dp234
g26
I01
sg27
g0
(g47
g48
VMethod 3(Using difference of node counts)
p235
tp236
Rp237
(dp238
g34
Nsg27
g0
(g22
g2
Ntp239
Rp240
(dp241
g26
I00
sg27
g175
sg28
g233
sg29
Vstrong
p242
sg31
g175
sg32
Nsg33
Nsg34
Nsg35
(dp243
sg37
g237
sg57
g58
sg59
I00
sg60
(lp244
g237
asbsg28
Nsg37
g233
sg31
g240
sbsg28
g230
sg29
Vbr
p245
sg31
g175
sg32
Nsg33
Nsg34
g240
sg35
(dp246
sg37
g230
sg57
g58
sg59
I00
sg60
(lp247
sbsg27
g233
sg28
g226
sg37
g226
sg31
g175
sbsg28
g223
sg29
Vbr
p248
sg31
g175
sg32
Nsg33
Nsg34
g230
sg35
(dp249
sg37
g223
sg57
g58
sg59
I00
sg60
(lp250
sbsg27
g226
sg28
g219
sg37
g219
sg31
g175
sbsg28
g216
sg29
Vbr
p251
sg31
g175
sg32
Nsg33
Nsg34
g223
sg35
(dp252
sg37
g216
sg57
g58
sg59
I00
sg60
(lp253
sbsg27
g219
sg28
g212
sg37
g212
sg31
g175
sbsg28
g209
sg29
Vbr
p254
sg31
g175
sg32
Nsg33
Nsg34
g216
sg35
(dp255
sg37
g209
sg57
g58
sg59
I00
sg60
(lp256
sbsg27
g212
sg28
g205
sg37
g205
sg31
g175
sbsg28
g202
sg29
Vbr
p257
sg31
g175
sg32
Nsg33
Nsg34
g209
sg35
(dp258
sg37
g202
sg57
g58
sg59
I00
sg60
(lp259
sbsg27
g205
sg28
Nsg37
g198
sg31
g175
sbsg28
g0
(g22
g2
Ntp260
Rp261
(dp262
g26
I00
sg27
g0
(g47
g48
V\u000a
p263
tp264
Rp265
(dp266
g34
g0
(g22
g2
Ntp267
Rp268
(dp269
g26
I00
sg27
g0
(g47
g48
V\u000a
p270
tp271
Rp272
(dp273
g34
Nsg27
g0
(g22
g2
Ntp274
Rp275
(dp276
g26
I00
sg27
g0
(g47
g48
V\u000a
p277
tp278
Rp279
(dp280
g34
g0
(g22
g2
Ntp281
Rp282
(dp283
g26
I00
sg27
g0
(g47
g48
V\u000a
p284
tp285
Rp286
(dp287
g34
g0
(g22
g2
Ntp288
Rp289
(dp290
g26
I00
sg27
g0
(g47
g48
V\u000a
p291
tp292
Rp293
(dp294
g34
Nsg27
g0
(g22
g2
Ntp295
Rp296
(dp297
g26
I00
sg27
g0
(g47
g48
V\u000a
p298
tp299
Rp300
(dp301
g34
g0
(g22
g2
Ntp302
Rp303
(dp304
g26
I00
sg27
g0
(g47
g48
V\u000a
p305
tp306
Rp307
(dp308
g34
Nsg27
g198
sg28
g303
sg37
g303
sg31
g198
sbsg28
g300
sg29
Vh2
p309
sg31
g198
sg32
Nsg33
Nsg34
g307
sg35
(dp310
Vclass
p311
(lp312
Vtabtitle
p313
assg37
g0
(g47
g48
VC
p314
tp315
Rp316
(dp317
g34
Nsg27
g303
sg28
Nsg37
g300
sg31
g303
sbsg57
g58
sg59
I00
sg60
(lp318
g316
asbsg27
g316
sg28
g296
sg37
g296
sg31
g198
sbsg28
g282
sg29
Vdiv
p319
sg31
g198
sg32
Nsg33
Nsg34
g300
sg35
(dp320
Vclass
p321
(lp322
Vtabcontent
p323
assg37
g293
sg57
g58
sg59
I00
sg60
(lp324
g293
ag289
ag286
asbsg28
g289
sg37
g289
sg31
g296
sbsg28
g286
sg29
Vpre
p325
sg31
g296
sg32
Nsg33
Nsg34
g293
sg35
(dp326
Vclass
p327
(lp328
Vbrush:
p329
aVc;
p330
aVtitle:
p331
aV;
p332
aVnotranslate
p333
asVtitle
p334
V
p335
ssg37
g0
(g47
g48
V\u000a#include<stdio.h>\u000a#include<stdlib.h>\u000a\u000a/* Link list node */\u000astruct Node\u000a{\u000a  int data;\u000a  struct Node* next;\u000a};\u000a\u000a/* Function to get the counts of node in a linked list */\u000aint getCount(struct Node* head);\u000a\u000a/* function to get the intersection point of two linked\u000a   lists head1 and head2 where head1 has d more nodes than\u000a   head2 */\u000aint _getIntesectionNode(int d, struct Node* head1, struct Node* head2);\u000a\u000a/* function to get the intersection point of two linked\u000a   lists head1 and head2 */\u000aint getIntesectionNode(struct Node* head1, struct Node* head2)\u000a{\u000a  int c1 = getCount(head1);\u000a  int c2 = getCount(head2);\u000a  int d;\u000a\u000a  if(c1 > c2)\u000a  {\u000a    d = c1 - c2;\u000a    return _getIntesectionNode(d, head1, head2);\u000a  }\u000a  else\u000a  {\u000a    d = c2 - c1;\u000a    return _getIntesectionNode(d, head2, head1);\u000a  }\u000a}\u000a\u000a/* function to get the intersection point of two linked\u000a   lists head1 and head2 where head1 has d more nodes than\u000a   head2 */\u000aint _getIntesectionNode(int d, struct Node* head1, struct Node* head2)\u000a{\u000a  int i;\u000a  struct Node* current1 = head1;\u000a  struct Node* current2 = head2;\u000a\u000a  for(i = 0; i < d; i++)\u000a  {\u000a    if(current1 == NULL)\u000a    {  return -1; }\u000a    current1 = current1->next;\u000a  }\u000a\u000a  while(current1 !=  NULL && current2 != NULL)\u000a  {\u000a    if(current1 == current2)\u000a      return current1->data;\u000a    current1= current1->next;\u000a    current2= current2->next;\u000a  }\u000a\u000a  return -1;\u000a}\u000a\u000a/* Takes head pointer of the linked list and\u000a   returns the count of nodes in the list */\u000aint getCount(struct Node* head)\u000a{\u000a  struct Node* current = head;\u000a  int count = 0;\u000a\u000a  while (current != NULL)\u000a  {\u000a    count++;\u000a    current = current->next;\u000a  }\u000a\u000a  return count;\u000a}\u000a\u000a/* IGNORE THE BELOW LINES OF CODE. THESE LINES\u000a   ARE JUST TO QUICKLY TEST THE ABOVE FUNCTION */\u000aint main()\u000a{\u000a  /*\u000a    Create two linked lists\u000a\u000a    1st 3->6->9->15->30\u000a    2nd 10->15->30\u000a\u000a    15 is the intersection point\u000a  */\u000a\u000a  struct Node* newNode;\u000a  struct Node* head1 =\u000a            (struct Node*) malloc(sizeof(struct Node));\u000a  head1->data  = 10;\u000a\u000a  struct Node* head2 =\u000a            (struct Node*) malloc(sizeof(struct Node));\u000a  head2->data  = 3;\u000a\u000a  newNode = (struct Node*) malloc (sizeof(struct Node));\u000a  newNode->data = 6;\u000a  head2->next = newNode;\u000a\u000a  newNode = (struct Node*) malloc (sizeof(struct Node));\u000a  newNode->data = 9;\u000a  head2->next->next = newNode;\u000a\u000a  newNode = (struct Node*) malloc (sizeof(struct Node));\u000a  newNode->data = 15;\u000a  head1->next = newNode;\u000a  head2->next->next->next  = newNode;\u000a\u000a  newNode = (struct Node*) malloc (sizeof(struct Node));\u000a  newNode->data = 30;\u000a  head1->next->next= newNode;\u000a\u000a  head1->next->next->next = NULL;\u000a\u000a  printf("\u005cn The node of intersection is %d \u005cn",\u000a          getIntesectionNode(head1, head2));\u000a\u000a  getchar();\u000a}\u000a
p336
tp337
Rp338
(dp339
g34
Nsg27
g289
sg28
Nsg37
g286
sg31
g289
sbsg57
g58
sg59
I00
sg60
(lp340
g338
asbsg27
g338
sg28
Nsg37
g282
sg31
g296
sbsg28
g279
sg29
Vh2
p341
sg31
g198
sg32
Nsg33
Nsg34
g296
sg35
(dp342
Vclass
p343
(lp344
Vtabtitle
p345
assg37
g0
(g47
g48
VJava
p346
tp347
Rp348
(dp349
g34
Nsg27
g282
sg28
Nsg37
g279
sg31
g282
sbsg57
g58
sg59
I00
sg60
(lp350
g348
asbsg27
g348
sg28
g275
sg37
g275
sg31
g198
sbsg28
Nsg29
Vdiv
p351
sg31
g198
sg32
Nsg33
Nsg34
g279
sg35
(dp352
Vclass
p353
(lp354
Vtabcontent
p355
assg37
g272
sg57
g58
sg59
I00
sg60
(lp356
g272
ag268
ag265
asbsg28
g268
sg37
g268
sg31
g275
sbsg28
g265
sg29
Vpre
p357
sg31
g275
sg32
Nsg33
Nsg34
g272
sg35
(dp358
Vclass
p359
(lp360
Vbrush:
p361
aVjava;
p362
aVtitle:
p363
ag332
aVnotranslate
p364
asVtitle
p365
g335
ssg37
g0
(g47
g48
V\u000a// Java program to get intersection point of two linked list\u000a\u000aclass LinkedList {\u000a\u000a    static Node head1, head2;\u000a\u000a    static class Node {\u000a\u000a        int data;\u000a        Node next;\u000a\u000a        Node(int d) {\u000a            data = d;\u000a            next = null;\u000a        }\u000a    }\u000a\u000a    /*function to get the intersection point of two linked\u000a    lists head1 and head2 */\u000a    int getNode() {\u000a        int c1 = getCount(head1);\u000a        int c2 = getCount(head2);\u000a        int d;\u000a\u000a        if (c1 > c2) {\u000a            d = c1 - c2;\u000a            return _getIntesectionNode(d, head1, head2);\u000a        } else {\u000a            d = c2 - c1;\u000a            return _getIntesectionNode(d, head2, head1);\u000a        }\u000a    }\u000a\u000a    /* function to get the intersection point of two linked\u000a     lists head1 and head2 where head1 has d more nodes than\u000a     head2 */\u000a    int _getIntesectionNode(int d, Node node1, Node node2) {\u000a        int i;\u000a        Node current1 = node1;\u000a        Node current2 = node2;\u000a        for (i = 0; i < d; i++) {\u000a            if (current1 == null) {\u000a                return -1;\u000a            }\u000a            current1 = current1.next;\u000a        }\u000a        while (current1 != null && current2 != null) {\u000a            if (current1.data == current2.data) {\u000a                return current1.data;\u000a            }\u000a            current1 = current1.next;\u000a            current2 = current2.next;\u000a        }\u000a\u000a        return -1;\u000a    }\u000a\u000a    /*Takes head pointer of the linked list and\u000a    returns the count of nodes in the list */\u000a    int getCount(Node node) {\u000a        Node current = node;\u000a        int count = 0;\u000a\u000a        while (current != null) {\u000a            count++;\u000a            current = current.next;\u000a        }\u000a\u000a        return count;\u000a    }\u000a\u000a    public static void main(String[] args) {\u000a        LinkedList list = new LinkedList();\u000a\u000a        // creating first linked list\u000a        list.head1 = new Node(3);\u000a        list.head1.next = new Node(6);\u000a        list.head1.next.next = new Node(15);\u000a        list.head1.next.next.next = new Node(15);\u000a        list.head1.next.next.next.next = new Node(30);\u000a\u000a        // creating second linked list\u000a        list.head2 = new Node(10);\u000a        list.head2.next = new Node(15);\u000a        list.head2.next.next = new Node(30);\u000a\u000a        System.out.println("The node of intersection is " + list.getNode());\u000a\u000a    }\u000a}\u000a\u000a// This code has been contributed by Mayank Jaiswal\u000a\u000a
p366
tp367
Rp368
(dp369
g34
Nsg27
g268
sg28
Nsg37
g265
sg31
g268
sbsg57
g58
sg59
I00
sg60
(lp370
g368
asbsg27
g368
sg28
Nsg37
g261
sg31
g275
sbsg28
g0
(g22
g2
Ntp371
Rp372
(dp373
g26
I00
sg27
g0
(g47
g48
V O(1)
p374
tp375
Rp376
(dp377
g34
g0
(g22
g2
Ntp378
Rp379
(dp380
g26
I00
sg27
g0
(g47
g48
V\u000a
p381
tp382
Rp383
(dp384
g34
g0
(g22
g2
Ntp385
Rp386
(dp387
g26
I01
sg27
g0
(g47
g48
V O(m+n)
p388
tp389
Rp390
(dp391
g34
g0
(g22
g2
Ntp392
Rp393
(dp394
g26
I00
sg27
g261
sg28
g390
sg29
Vstrong
p395
sg31
g261
sg32
Nsg33
Nsg34
Nsg35
(dp396
sg37
g0
(g47
g48
VTime Complexity:
p397
tp398
Rp399
(dp400
g34
Nsg27
g393
sg28
Nsg37
g390
sg31
g393
sbsg57
g58
sg59
I00
sg60
(lp401
g399
asbsg27
g399
sg28
g386
sg37
g386
sg31
g261
sbsg28
g383
sg29
Vbr
p402
sg31
g261
sg32
Nsg33
Nsg34
g390
sg35
(dp403
sg37
g383
sg57
g58
sg59
I00
sg60
(lp404
sbsg27
g386
sg28
g379
sg37
g379
sg31
g261
sbsg28
g376
sg29
Vstrong
p405
sg31
g261
sg32
Nsg33
Nsg34
g383
sg35
(dp406
sg37
g0
(g47
g48
VAuxiliary Space:
p407
tp408
Rp409
(dp410
g34
Nsg27
g379
sg28
Nsg37
g376
sg31
g379
sbsg57
g58
sg59
I00
sg60
(lp411
g409
asbsg27
g409
sg28
Nsg37
g372
sg31
g261
sbsg28
g0
(g22
g2
Ntp412
Rp413
(dp414
g26
I00
sg27
g0
(g47
g48
V O(1)
p415
tp416
Rp417
(dp418
g34
g0
(g22
g2
Ntp419
Rp420
(dp421
g26
I00
sg27
g0
(g47
g48
V\u000a
p422
tp423
Rp424
(dp425
g34
g0
(g22
g2
Ntp426
Rp427
(dp428
g26
I01
sg27
g0
(g47
g48
V O(m+n)
p429
tp430
Rp431
(dp432
g34
g0
(g22
g2
Ntp433
Rp434
(dp435
g26
I00
sg27
g0
(g47
g48
V\u000a
p436
tp437
Rp438
(dp439
g34
g0
(g22
g2
Ntp440
Rp441
(dp442
g26
I01
sg27
g0
(g47
g48
V\u000a4. remove the circle from the linked list.
p443
tp444
Rp445
(dp446
g34
g0
(g22
g2
Ntp447
Rp448
(dp449
g26
I01
sg27
g0
(g47
g48
V\u000a3. Since we already know the length of the loop(size of first linked list) we can traverse those many number of nodes in second list, and then start another pointer from the beginning of second list. we have to traverse until they are equal, and that is the required intersection point.
p450
tp451
Rp452
(dp453
g34
g0
(g22
g2
Ntp454
Rp455
(dp456
g26
I01
sg27
g0
(g47
g48
V\u000a2. Now view the problem as find the loop in the second linked list. So the problem is solved.
p457
tp458
Rp459
(dp460
g34
g0
(g22
g2
Ntp461
Rp462
(dp463
g26
I01
sg27
g0
(g47
g48
V\u000a1. Traverse the first linked list(count the elements) and make a circular linked list. (Remember last node so that we can break the circle later on).
p464
tp465
Rp466
(dp467
g34
g0
(g22
g2
Ntp468
Rp469
(dp470
g26
I01
sg27
g0
(g47
g48
V for providing below solution.
p471
tp472
Rp473
(dp474
g34
g0
(g22
g2
Ntp475
Rp476
(dp477
g26
I00
sg27
g0
(g47
g48
V\u000aThanks to 
p478
tp479
Rp480
(dp481
g34
g0
(g22
g2
Ntp482
Rp483
(dp484
g26
I01
sg27
g0
(g47
g48
VMethod 4(Make circle in first list)
p485
tp486
Rp487
(dp488
g34
Nsg27
g0
(g22
g2
Ntp489
Rp490
(dp491
g26
I00
sg27
g372
sg28
g483
sg29
Vstrong
p492
sg31
g372
sg32
Nsg33
Nsg34
Nsg35
(dp493
sg37
g487
sg57
g58
sg59
I00
sg60
(lp494
g487
asbsg28
Nsg37
g483
sg31
g490
sbsg28
g480
sg29
Vbr
p495
sg31
g372
sg32
Nsg33
Nsg34
g490
sg35
(dp496
sg37
g480
sg57
g58
sg59
I00
sg60
(lp497
sbsg27
g483
sg28
g476
sg37
g476
sg31
g372
sbsg28
g473
sg29
g115
sg31
g372
sg32
Nsg33
Nsg34
g480
sg35
(dp498
Vhref
p499
Vhttp://www.geeksforgeeks.org/?p=2405#comment-264
p500
ssg37
g0
(g47
g48
VSaravanan Man
p501
tp502
Rp503
(dp504
g34
Nsg27
g476
sg28
Nsg37
g473
sg31
g476
sbsg57
g58
sg59
I00
sg60
(lp505
g503
asbsg27
g503
sg28
g469
sg37
g469
sg31
g372
sbsg28
g466
sg29
Vbr
p506
sg31
g372
sg32
Nsg33
Nsg34
g473
sg35
(dp507
sg37
g466
sg57
g58
sg59
I00
sg60
(lp508
sbsg27
g469
sg28
g462
sg37
g462
sg31
g372
sbsg28
g459
sg29
Vbr
p509
sg31
g372
sg32
Nsg33
Nsg34
g466
sg35
(dp510
sg37
g459
sg57
g58
sg59
I00
sg60
(lp511
sbsg27
g462
sg28
g455
sg37
g455
sg31
g372
sbsg28
g452
sg29
Vbr
p512
sg31
g372
sg32
Nsg33
Nsg34
g459
sg35
(dp513
sg37
g452
sg57
g58
sg59
I00
sg60
(lp514
sbsg27
g455
sg28
g448
sg37
g448
sg31
g372
sbsg28
g445
sg29
Vbr
p515
sg31
g372
sg32
Nsg33
Nsg34
g452
sg35
(dp516
sg37
g445
sg57
g58
sg59
I00
sg60
(lp517
sbsg27
g448
sg28
g441
sg37
g441
sg31
g372
sbsg28
g438
sg29
Vbr
p518
sg31
g372
sg32
Nsg33
Nsg34
g445
sg35
(dp519
sg37
g438
sg57
g58
sg59
I00
sg60
(lp520
sbsg27
g441
sg28
g434
sg37
g434
sg31
g372
sbsg28
g431
sg29
Vstrong
p521
sg31
g372
sg32
Nsg33
Nsg34
g438
sg35
(dp522
sg37
g0
(g22
g2
Ntp523
Rp524
(dp525
g26
I01
sg27
g434
sg28
g0
(g47
g48
V\u000aTime Complexity:
p526
tp527
Rp528
(dp529
g34
g524
sg27
g524
sg28
Nsg37
g431
sg31
g434
sbsg29
Vbr
p530
sg31
g434
sg32
Nsg33
Nsg34
Nsg35
(dp531
sg37
g528
sg57
g58
sg59
I00
sg60
(lp532
sbsg57
g58
sg59
I00
sg60
(lp533
g524
ag528
asbsg27
g528
sg28
g427
sg37
g427
sg31
g372
sbsg28
g424
sg29
Vbr
p534
sg31
g372
sg32
Nsg33
Nsg34
g431
sg35
(dp535
sg37
g424
sg57
g58
sg59
I00
sg60
(lp536
sbsg27
g427
sg28
g420
sg37
g420
sg31
g372
sbsg28
g417
sg29
Vstrong
p537
sg31
g372
sg32
Nsg33
Nsg34
g424
sg35
(dp538
sg37
g0
(g47
g48
VAuxiliary Space:
p539
tp540
Rp541
(dp542
g34
Nsg27
g420
sg28
Nsg37
g417
sg31
g420
sbsg57
g58
sg59
I00
sg60
(lp543
g541
asbsg27
g541
sg28
Nsg37
g413
sg31
g372
sbsg28
g0
(g22
g2
Ntp544
Rp545
(dp546
g26
I00
sg27
g0
(g47
g48
V for providing this method.
p547
tp548
Rp549
(dp550
g34
g0
(g22
g2
Ntp551
Rp552
(dp553
g26
I00
sg27
g0
(g47
g48
V\u000aThanks to 
p554
tp555
Rp556
(dp557
g34
g0
(g22
g2
Ntp558
Rp559
(dp560
g26
I01
sg27
g0
(g47
g48
VMethod 5 (Reverse the first list and make equations)
p561
tp562
Rp563
(dp564
g34
Nsg27
g0
(g22
g2
Ntp565
Rp566
(dp567
g26
I00
sg27
g413
sg28
g559
sg29
Vstrong
p568
sg31
g413
sg32
Nsg33
Nsg34
Nsg35
(dp569
sg37
g563
sg57
g58
sg59
I00
sg60
(lp570
g563
asbsg28
Nsg37
g559
sg31
g566
sbsg28
g556
sg29
Vbr
p571
sg31
g413
sg32
Nsg33
Nsg34
g566
sg35
(dp572
sg37
g556
sg57
g58
sg59
I00
sg60
(lp573
sbsg27
g559
sg28
g552
sg37
g552
sg31
g413
sbsg28
g549
sg29
g115
sg31
g413
sg32
Nsg33
Nsg34
g556
sg35
(dp574
Vhref
p575
Vhttp://www.geeksforgeeks.org/?p=2405#comment-266
p576
ssg37
g0
(g47
g48
VSaravanan Mani
p577
tp578
Rp579
(dp580
g34
Nsg27
g552
sg28
Nsg37
g549
sg31
g552
sbsg57
g58
sg59
I00
sg60
(lp581
g579
asbsg27
g579
sg28
Nsg37
g545
sg31
g413
sbsg28
g0
(g22
g2
Ntp582
Rp583
(dp584
g26
I00
sg27
g0
(g47
g48
V\u000a1) Let X be the length of the first linked list until intersection point.\u000a   Let Y be the length of the second linked list until the intersection point.\u000a   Let Z be the length of the linked list from intersection point to End of\u000a   the linked list including the intersection node.\u000a   We Have\u000a           X + Z = C1;\u000a           Y + Z = C2;\u000a2) Reverse first linked list.\u000a3) Traverse Second linked list. Let C3 be the length of second list - 1. \u000a     Now we have\u000a        X + Y = C3\u000a     We have 3 linear equations. By solving them, we get\u000a       X = (C1 + C3 \u2013 C2)/2;\u000a       Y = (C2 + C3 \u2013 C1)/2;\u000a       Z = (C1 + C2 \u2013 C3)/2;\u000a      WE GOT THE INTERSECTION POINT.\u000a4)  Reverse first linked list.\u000a
p585
tp586
Rp587
(dp588
g34
Nsg27
g545
sg28
Nsg37
g583
sg31
g545
sbsg28
g0
(g22
g2
Ntp589
Rp590
(dp591
g26
I00
sg27
g0
(g47
g48
VO(1)
p592
tp593
Rp594
(dp595
g34
g0
(g22
g2
Ntp596
Rp597
(dp598
g26
I00
sg27
g0
(g47
g48
V\u000a
p599
tp600
Rp601
(dp602
g34
g0
(g22
g2
Ntp603
Rp604
(dp605
g26
I01
sg27
g0
(g47
g48
V O(m+n)
p606
tp607
Rp608
(dp609
g34
g0
(g22
g2
Ntp610
Rp611
(dp612
g26
I00
sg27
g0
(g47
g48
V\u000a
p613
tp614
Rp615
(dp616
g34
g0
(g22
g2
Ntp617
Rp618
(dp619
g26
I01
sg27
g0
(g47
g48
V\u000aDisadvantage : Modifying linked list(Reversing list).
p620
tp621
Rp622
(dp623
g34
g0
(g22
g2
Ntp624
Rp625
(dp626
g26
I01
sg27
g0
(g47
g48
VAdvantage:  No Comparison of pointers.
p627
tp628
Rp629
(dp630
g34
Nsg27
g583
sg28
g625
sg37
g625
sg31
g583
sbsg28
g622
sg29
Vbr
p631
sg31
g583
sg32
Nsg33
Nsg34
g629
sg35
(dp632
sg37
g622
sg57
g58
sg59
I00
sg60
(lp633
sbsg27
g625
sg28
g618
sg37
g618
sg31
g583
sbsg28
g615
sg29
Vbr
p634
sg31
g583
sg32
Nsg33
Nsg34
g622
sg35
(dp635
sg37
g615
sg57
g58
sg59
I00
sg60
(lp636
sbsg27
g618
sg28
g611
sg37
g611
sg31
g583
sbsg28
g608
sg29
Vstrong
p637
sg31
g583
sg32
Nsg33
Nsg34
g615
sg35
(dp638
sg37
g0
(g22
g2
Ntp639
Rp640
(dp641
g26
I01
sg27
g611
sg28
g0
(g47
g48
V\u000aTime complexity:
p642
tp643
Rp644
(dp645
g34
g640
sg27
g640
sg28
Nsg37
g608
sg31
g611
sbsg29
Vbr
p646
sg31
g611
sg32
Nsg33
Nsg34
Nsg35
(dp647
sg37
g644
sg57
g58
sg59
I00
sg60
(lp648
sbsg57
g58
sg59
I00
sg60
(lp649
g640
ag644
asbsg27
g644
sg28
g604
sg37
g604
sg31
g583
sbsg28
g601
sg29
Vbr
p650
sg31
g583
sg32
Nsg33
Nsg34
g608
sg35
(dp651
sg37
g601
sg57
g58
sg59
I00
sg60
(lp652
sbsg27
g604
sg28
g597
sg37
g597
sg31
g583
sbsg28
g594
sg29
Vstrong
p653
sg31
g583
sg32
Nsg33
Nsg34
g601
sg35
(dp654
sg37
g0
(g47
g48
VAuxiliary Space: 
p655
tp656
Rp657
(dp658
g34
Nsg27
g597
sg28
Nsg37
g594
sg31
g597
sbsg57
g58
sg59
I00
sg60
(lp659
g657
asbsg27
g657
sg28
Nsg37
g590
sg31
g583
sbsg28
g0
(g22
g2
Ntp660
Rp661
(dp662
g26
I00
sg27
g0
(g47
g48
V This method is only to detect if there is an intersection point or not. (Thanks to NeoTheSaviour for suggesting this)
p663
tp664
Rp665
(dp666
g34
g0
(g22
g2
Ntp667
Rp668
(dp669
g26
I00
sg27
g590
sg28
g665
sg29
Vstrong
p670
sg31
g590
sg32
Nsg33
Nsg34
Nsg35
(dp671
sg37
g0
(g47
g48
VMethod 6 (Traverse both lists and compare addresses of last nodes)
p672
tp673
Rp674
(dp675
g34
Nsg27
g668
sg28
Nsg37
g665
sg31
g668
sbsg57
g58
sg59
I00
sg60
(lp676
g674
asbsg27
g674
sg28
Nsg37
g661
sg31
g590
sbsg28
g0
(g22
g2
Ntp677
Rp678
(dp679
g26
I00
sg27
g0
(g47
g48
V\u000a1) Traverse the list 1, store the last node address\u000a2) Traverse the list 2, store the last node address.\u000a3) If nodes stored in 1 and 2 are same then they are intersecting.\u000a
p680
tp681
Rp682
(dp683
g34
Nsg27
g661
sg28
Nsg37
g678
sg31
g661
sbsg28
g0
(g22
g2
Ntp684
Rp685
(dp686
g26
I00
sg27
g0
(g47
g48
VTime complexity of this method is O(m+n) and used Auxiliary space is O(1)
p687
tp688
Rp689
(dp690
g34
Nsg27
g678
sg28
Nsg37
g685
sg31
g678
sbsg28
g0
(g22
g2
Ntp691
Rp692
(dp693
g26
I00
sg27
g0
(g47
g48
V\u000a3) Traverse the second list. For every node check if it is present in hash table. If we find a node in hash table, return the node.
p694
tp695
Rp696
(dp697
g34
g0
(g22
g2
Ntp698
Rp699
(dp700
g26
I01
sg27
g0
(g47
g48
V\u000a2) Traverse the first linked list and insert all nodes\u2019 addresses in hash table.
p701
tp702
Rp703
(dp704
g34
g0
(g22
g2
Ntp705
Rp706
(dp707
g26
I01
sg27
g0
(g47
g48
V\u000a1) Create an empty hash table such that node address is used as key and a binary value present/absent is used as value.
p708
tp709
Rp710
(dp711
g34
g0
(g22
g2
Ntp712
Rp713
(dp714
g26
I01
sg27
g0
(g47
g48
V\u000aBasically we need to find common node of two linked lists. So we hash all nodes of first list and then check second list.
p715
tp716
Rp717
(dp718
g34
g0
(g22
g2
Ntp719
Rp720
(dp721
g26
I01
sg27
g0
(g47
g48
VMethod 7 (Use Hashing)
p722
tp723
Rp724
(dp725
g34
Nsg27
g0
(g22
g2
Ntp726
Rp727
(dp728
g26
I00
sg27
g685
sg28
g720
sg29
Vstrong
p729
sg31
g685
sg32
Nsg33
Nsg34
Nsg35
(dp730
sg37
g724
sg57
g58
sg59
I00
sg60
(lp731
g724
asbsg28
Nsg37
g720
sg31
g727
sbsg28
g717
sg29
Vbr
p732
sg31
g685
sg32
Nsg33
Nsg34
g727
sg35
(dp733
sg37
g717
sg57
g58
sg59
I00
sg60
(lp734
sbsg27
g720
sg28
g713
sg37
g713
sg31
g685
sbsg28
g710
sg29
Vbr
p735
sg31
g685
sg32
Nsg33
Nsg34
g717
sg35
(dp736
sg37
g710
sg57
g58
sg59
I00
sg60
(lp737
sbsg27
g713
sg28
g706
sg37
g706
sg31
g685
sbsg28
g703
sg29
Vbr
p738
sg31
g685
sg32
Nsg33
Nsg34
g710
sg35
(dp739
sg37
g703
sg57
g58
sg59
I00
sg60
(lp740
sbsg27
g706
sg28
g699
sg37
g699
sg31
g685
sbsg28
g696
sg29
Vbr
p741
sg31
g685
sg32
Nsg33
Nsg34
g703
sg35
(dp742
sg37
g696
sg57
g58
sg59
I00
sg60
(lp743
sbsg27
g699
sg28
Nsg37
g692
sg31
g685
sbsg28
g0
(g22
g2
Ntp744
Rp745
(dp746
g26
I00
sg27
g0
(g47
g48
V\u000a
p747
tp748
Rp749
(dp750
g34
g0
(g22
g2
Ntp751
Rp752
(dp753
g26
I00
sg27
g0
(g47
g48
V\u000a
p754
tp755
Rp756
(dp757
g34
Nsg27
g692
sg28
g752
sg37
g752
sg31
g692
sbsg28
g749
sg29
Vh3
p758
sg31
g692
sg32
Nsg33
Nsg34
g756
sg35
(dp759
sg37
g0
(g47
g48
VAsked in: 
p760
tp761
Rp762
(dp763
g34
Nsg27
g752
sg28
g0
(g22
g2
Ntp764
Rp765
(dp766
g26
I00
sg27
g762
sg28
g0
(g47
g48
V, 
p767
tp768
Rp769
(dp770
g34
g765
sg27
g0
(g47
g48
VAmazon
p771
tp772
Rp773
(dp774
g34
Nsg27
g765
sg28
Nsg37
g769
sg31
g765
sbsg28
g0
(g22
g2
Ntp775
Rp776
(dp777
g26
I00
sg27
g769
sg28
g0
(g47
g48
V, 
p778
tp779
Rp780
(dp781
g34
g776
sg27
g0
(g47
g48
VDE Shaw
p782
tp783
Rp784
(dp785
g34
Nsg27
g776
sg28
Nsg37
g780
sg31
g776
sbsg28
g0
(g22
g2
Ntp786
Rp787
(dp788
g26
I00
sg27
g780
sg28
g0
(g47
g48
V, 
p789
tp790
Rp791
(dp792
g34
g787
sg27
g0
(g47
g48
VGoldman Sachs
p793
tp794
Rp795
(dp796
g34
Nsg27
g787
sg28
Nsg37
g791
sg31
g787
sbsg28
g0
(g22
g2
Ntp797
Rp798
(dp799
g26
I00
sg27
g791
sg28
g0
(g47
g48
V, 
p800
tp801
Rp802
(dp803
g34
g798
sg27
g0
(g47
g48
VMicrosoft
p804
tp805
Rp806
(dp807
g34
Nsg27
g798
sg28
Nsg37
g802
sg31
g798
sbsg28
g0
(g22
g2
Ntp808
Rp809
(dp810
g26
I00
sg27
g802
sg28
Nsg29
g115
sg31
g752
sg32
Nsg33
Nsg34
g802
sg35
(dp811
Vhref
p812
Vhttp://practice.geeksforgeeks.org/company/Zopper/
p813
ssg37
g0
(g47
g48
VZopper
p814
tp815
Rp816
(dp817
g34
Nsg27
g809
sg28
Nsg37
g749
sg31
g809
sbsg57
g58
sg59
I00
sg60
(lp818
g816
asbsg37
g809
sg31
g752
sbsg29
g115
sg31
g752
sg32
Nsg33
Nsg34
g791
sg35
(dp819
Vhref
p820
Vhttp://practice.geeksforgeeks.org/company/Microsoft/
p821
ssg37
g806
sg57
g58
sg59
I00
sg60
(lp822
g806
asbsg37
g798
sg31
g752
sbsg29
g115
sg31
g752
sg32
Nsg33
Nsg34
g780
sg35
(dp823
Vhref
p824
Vhttp://practice.geeksforgeeks.org/company/Goldman Sachs/
p825
ssg37
g795
sg57
g58
sg59
I00
sg60
(lp826
g795
asbsg37
g787
sg31
g752
sbsg29
g115
sg31
g752
sg32
Nsg33
Nsg34
g769
sg35
(dp827
Vhref
p828
Vhttp://practice.geeksforgeeks.org/company/DE Shaw/
p829
ssg37
g784
sg57
g58
sg59
I00
sg60
(lp830
g784
asbsg37
g776
sg31
g752
sbsg29
g115
sg31
g752
sg32
Nsg33
Nsg34
g762
sg35
(dp831
Vhref
p832
Vhttp://practice.geeksforgeeks.org/company/Amazon/
p833
ssg37
g773
sg57
g58
sg59
I00
sg60
(lp834
g773
asbsg37
g765
sg31
g752
sbsg57
g58
sg59
I00
sg60
(lp835
g762
ag765
ag769
ag776
ag780
ag787
ag791
ag798
ag802
ag809
asbsg27
g816
sg28
Nsg37
g745
sg31
g692
sbsg28
Nsg29
Vp
p836
sg31
g24
sg32
Nsg33
Nsg34
g692
sg35
(dp837
sg37
Nsg57
g58
sg59
I00
sg60
(lp838
sbsg29
Vdiv
p839
sg31
g24
sg32
Nsg33
Nsg34
g685
sg35
(dp840
Vid
p841
VcompanyTagsDiv
p842
ssg37
g756
sg57
g58
sg59
I00
sg60
(lp843
g756
ag752
ag749
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g678
sg35
(dp844
sg37
g727
sg57
g58
sg59
I00
sg60
(lp845
g727
ag720
ag717
ag713
ag710
ag706
ag703
ag699
ag696
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g661
sg35
(dp846
sg37
g689
sg57
g58
sg59
I00
sg60
(lp847
g689
asbsg29
Vpre
p848
sg31
g24
sg32
Nsg33
Nsg34
g590
sg35
(dp849
sg37
g682
sg57
g58
sg59
I00
sg60
(lp850
g682
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g583
sg35
(dp851
sg37
g668
sg57
g58
sg59
I00
sg60
(lp852
g668
ag665
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g545
sg35
(dp853
sg37
g629
sg57
g58
sg59
I00
sg60
(lp854
g629
ag625
ag622
ag618
ag615
ag611
ag608
ag604
ag601
ag597
ag594
asbsg29
Vpre
p855
sg31
g24
sg32
Nsg33
Nsg34
g413
sg35
(dp856
sg37
g587
sg57
g58
sg59
I00
sg60
(lp857
g587
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g372
sg35
(dp858
sg37
g566
sg57
g58
sg59
I00
sg60
(lp859
g566
ag559
ag556
ag552
ag549
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g261
sg35
(dp860
sg37
g490
sg57
g58
sg59
I00
sg60
(lp861
g490
ag483
ag480
ag476
ag473
ag469
ag466
ag462
ag459
ag455
ag452
ag448
ag445
ag441
ag438
ag434
ag431
ag427
ag424
ag420
ag417
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g198
sg35
(dp862
sg37
g393
sg57
g58
sg59
I00
sg60
(lp863
g393
ag390
ag386
ag383
ag379
ag376
asbsg29
Vdiv
p864
sg31
g24
sg32
Nsg33
Nsg34
g175
sg35
(dp865
Vclass
p866
(lp867
Vresponsive-tabs
p868
assg37
g307
sg57
g58
sg59
I00
sg60
(lp869
g307
ag303
ag300
ag296
ag282
ag279
ag275
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g152
sg35
(dp870
sg37
g240
sg57
g58
sg59
I00
sg60
(lp871
g240
ag233
ag230
ag226
ag223
ag219
ag216
ag212
ag209
ag205
ag202
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g97
sg35
(dp872
sg37
g189
sg57
g58
sg59
I00
sg60
(lp873
g189
ag182
ag179
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g63
sg35
(dp874
sg37
g166
sg57
g58
sg59
I00
sg60
(lp875
g166
ag159
ag156
asbsg29
Vdiv
p876
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp877
Vid
p878
VpracticeLinkDiv
p879
ssg37
g108
sg57
g58
sg59
I00
sg60
(lp880
g108
ag104
ag101
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp881
sg37
g73
sg57
g58
sg59
I00
sg60
(lp882
g73
ag70
ag67
asbsg29
g836
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp883
sg37
g51
sg57
g58
sg59
I00
sg60
(lp884
g51
ag45
asbsg57
Nsg59
I00
sg60
(lp885
g39
ag42
ag63
ag97
ag152
ag175
ag198
ag261
ag372
ag413
ag545
ag583
ag590
ag661
ag678
ag685
ag692
ag745
asbsS'raw_page'
p886
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n<meta name="description" content="A Computer Science portal for geeks. It contains well written, well thought and well explained computer science and programming articles, quizzes and practice/competitive programming/company interview Questions.">\r\n<link rel="shortcut icon" href="/gfg.png" type="image/x-icon" />\r\n\r\n<meta property="og:image" content="http://www.geeksforgeeks.org/wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Write a function to get the intersection point of two Linked Lists. - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="" />\r\n<!--[if lt IE 9]>\r\n<script src="http://www.geeksforgeeks.org/wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n<script>\r\n    var domain = 1;\r\n    var arrPost = new Array();\r\n    var post_id = "2405";\r\n    var post_type = "post";\r\n    var post_slug = window.location.href;\r\n    var ip = "34.195.252.119";\r\n    var post_title = "Write a function to get the intersection point of two Linked Lists.";\r\n    var post_status = "publish";\r\n                            var isAdminLoggedIn = 0;\r\n        </script>\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.7.1 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Write a function to get the intersection point of two Linked Lists. - GeeksforGeeks" />\n<meta property="og:description" content="There are two singly linked lists in a system. By some programming error the end node of one of the linked list got linked into\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:section" content="Linked Lists" />\n<meta property="article:published_time" content="2009-10-10T02:51:43+00:00" />\n<meta property="article:modified_time" content="2017-06-08T17:43:39+00:00" />\n<meta property="og:updated_time" content="2017-06-08T17:43:39+00:00" />\n<meta property="og:image" content="http://www.geeksforgeeks.org/wp-content/uploads/2009/10/Y-ShapedLinked-List.gif" />\n<!-- / Yoast SEO plugin. -->\n\n<link rel=\'dns-prefetch\' href=\'//www.geeksforgeeks.org\' />\n<link rel=\'dns-prefetch\' href=\'//fonts.googleapis.com\' />\n<link rel=\'dns-prefetch\' href=\'//s.w.org\' />\n<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks &raquo; Feed" href="http://www.geeksforgeeks.org/feed/" />\n<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks &raquo; Comments Feed" href="http://www.geeksforgeeks.org/comments/feed/" />\n<link rel="alternate" type="application/rss+xml" title="GeeksforGeeks &raquo; Write a function to get the intersection point of two Linked Lists. Comments Feed" href="http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/feed/" />\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/2\\/72x72\\/","ext":".png","svgUrl":"https:\\/\\/s.w.org\\/images\\/core\\/emoji\\/2\\/svg\\/","svgExt":".svg","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c,d,e,f,g,h=b.createElement("canvas"),i=h.getContext&&h.getContext("2d"),j=String.fromCharCode;if(!i||!i.fillText)return!1;switch(i.textBaseline="top",i.font="600 32px Arial",a){case"flag":return i.fillText(j(55356,56806,55356,56826),0,0),!(h.toDataURL().length<3e3)&&(i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,65039,8205,55356,57096),0,0),c=h.toDataURL(),i.clearRect(0,0,h.width,h.height),i.fillText(j(55356,57331,55356,57096),0,0),d=h.toDataURL(),c!==d);case"diversity":return i.fillText(j(55356,57221),0,0),e=i.getImageData(16,16,1,1).data,f=e[0]+","+e[1]+","+e[2]+","+e[3],i.fillText(j(55356,57221,55356,57343),0,0),e=i.getImageData(16,16,1,1).data,g=e[0]+","+e[1]+","+e[2]+","+e[3],f!==g;case"simple":return i.fillText(j(55357,56835),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode8":return i.fillText(j(55356,57135),0,0),0!==i.getImageData(16,16,1,1).data[0];case"unicode9":return i.fillText(j(55358,56631),0,0),0!==i.getImageData(16,16,1,1).data[0]}return!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g,h,i;for(i=Array("simple","flag","unicode8","diversity","unicode9"),c.supports={everything:!0,everythingExceptFlag:!0},h=0;h<i.length;h++)c.supports[i[h]]=d(i[h]),c.supports.everything=c.supports.everything&&c.supports[i[h]],"flag"!==i[h]&&(c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&c.supports[i[h]]);c.supports.everythingExceptFlag=c.supports.everythingExceptFlag&&!c.supports.flag,c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.everything||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'mtq_CoreStyleSheets-css\'  href=\'http://www.geeksforgeeks.org/wp-content/plugins/mtouch-quiz/mtq_core_style.min.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'mtq_ThemeStyleSheets-css\'  href=\'http://www.geeksforgeeks.org/wp-content/plugins/mtouch-quiz/mtq_theme_style.min.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'wp-quicklatex-format-css\'  href=\'http://www.geeksforgeeks.org/wp-content/plugins/wp-quicklatex/css/quicklatex-format.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://www.geeksforgeeks.org/wp-content/themes/iconic-one/css/gfg-1.2.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-content/themes/iconic-one/js/gfg-5.1.js\'></script>\n<link rel=\'https://api.w.org/\' href=\'http://www.geeksforgeeks.org/wp-json/\' />\n<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://www.cdn.geeksforgeeks.org/xmlrpc.php?rsd" />\n<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://www.geeksforgeeks.org/wp-includes/wlwmanifest.xml" /> \n<meta name="generator" content="WordPress 4.6.6" />\n<link rel=\'shortlink\' href=\'http://www.geeksforgeeks.org/?p=2405\' />\n<link rel="alternate" type="application/json+oembed" href="http://www.geeksforgeeks.org/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.geeksforgeeks.org%2Fwrite-a-function-to-get-the-intersection-point-of-two-linked-lists%2F" />\n<link rel="alternate" type="text/xml+oembed" href="http://www.geeksforgeeks.org/wp-json/oembed/1.0/embed?url=http%3A%2F%2Fwww.geeksforgeeks.org%2Fwrite-a-function-to-get-the-intersection-point-of-two-linked-lists%2F&#038;format=xml" />\n<style>\r\n#wpadminbar{\r\nbackground: #ff0000 !important;\r\n}\r\n</style>\r\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n\r\n<script type=\'text/javascript\'>\r\n  var googletag = googletag || {};\r\n  googletag.cmd = googletag.cmd || [];\r\n  (function() {\r\n    var gads = document.createElement(\'script\');\r\n    gads.async = true;\r\n    gads.type = \'text/javascript\';\r\n    var useSSL = \'https:\' == document.location.protocol;\r\n    gads.src = (useSSL ? \'https:\' : \'http:\') +\r\n      \'//www.googletagservices.com/tag/js/gpt.js\';\r\n    var node = document.getElementsByTagName(\'script\')[0];\r\n    node.parentNode.insertBefore(gads, node);\r\n  })();\r\n</script>\r\n\r\n<script type=\'text/javascript\'>\r\n  googletag.cmd.push(function() {\r\n    googletag.defineSlot(\'/27823234/SP\', [300, 250], \'div-gpt-ad-1458112424022-0\').addService(googletag.pubads());\r\n    googletag.pubads().enableSingleRequest();\r\n    googletag.enableServices();\r\n  });\r\n</script>\r\n</head>\r\n\r\n<body class="single single-post postid-2405 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n\r\n<!-- BuySellAds Ad Code -->\r\n<script type="text/javascript">\r\n(function(){\r\n  var bsa = document.createElement(\'script\');\r\n     bsa.type = \'text/javascript\';\r\n     bsa.async = true;\r\n     bsa.src = \'//s3.buysellads.com/ac/bsa.js\';\r\n  (document.getElementsByTagName(\'head\')[0]||document.getElementsByTagName(\'body\')[0]).appendChild(bsa);\r\n})();\r\n</script>\r\n<!-- End BuySellAds Ad Code -->\r\n\r\n<div id="page" style="position:relative;" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t<div style="margin-bottom: 5px;">\t\r\n\t\t\t\t<hgroup class="main_gfg_title">\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\t\t<span class="responsive-custom-search">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n\t\t\r\n\t\t<gcse:search></gcse:search>  \r\n\t\t</span>\r\n\r\n<div class="top-button-div">\r\n<hgroup style="float:right;display:inline-block;margin-top:5px;">   \r\n\r\n\r\n<a class="products" href="http://practice.geeksforgeeks.org/">Practice</a>\r\n\r\n<a class="products" href="http://quiz.geeksforgeeks.org/gate-corner-2/">GATE CS</a>\r\n\r\n<a class="products" href="http://quiz.geeksforgeeks.org/placements/">Placements</a>\r\n\r\n<a class="products" href="https://www.youtube.com/geeksforgeeksvideos/">Videos</a>\r\n\r\n<a class="products" href="http://www.geeksforgeeks.org/contribute/">Contribute</a>\r\n</hgroup><br></br>\r\n\r\n\r\n<div id="profile" style="float: right; margin-top: -1%;margin-right:1%;"></div>\r\n</div>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-147519" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147519"><a href="/"><img style="width: 30px;vertical-align: middle;" src="http://www.geeksforgeeks.org/wp-content/uploads/gfg_transparent_white_small.png"></a></li>\n<li id="menu-item-141975" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-141975"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-146823" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146823"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Topicwise \xe2\x96\xba</a>\n\t<ul class="sub-menu">\n\t\t<li id="menu-item-147774" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147774"><a href="http://www.geeksforgeeks.org/searching-algorithms/">Searching Algorithms</a></li>\n\t\t<li id="menu-item-147773" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147773"><a href="http://www.geeksforgeeks.org/sorting-algorithms/">Sorting Algorithms</a></li>\n\t\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/graph-data-structure-and-algorithms/">Graph Algorithms</a></li>\n\t\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/bitwise-algorithms/">Bit Algorithms</a></li>\n\t\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/randomized-algorithms/">Randomized Algorithms</a></li>\n\t</ul>\n</li>\n\t<li id="menu-item-146824" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146824"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithm Paradigms \xe2\x96\xba</a>\n\t<ul class="sub-menu">\n\t\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/greedy-algorithms/">Greedy Algorithms</a></li>\n\t\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/dynamic-programming/">Dynamic Programming</a></li>\n\t\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t\t<li id="menu-item-137933" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137933"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BranchandBound">Branch &#038; Bound</a></li>\n\t</ul>\n</li>\n\t<li id="menu-item-146911" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146911"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">All Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-142016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-142016"><a href="http://www.geeksforgeeks.org/data-structures/">DS  \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/array-data-structure/">Array</a></li>\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/linked-list/">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/stack-data-structure/">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/queue-data-structure/">Queue</a></li>\n\t<li id="menu-item-146827" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146827"><a href="http://www.geeksforgeeks.org/data-structures/">Tree based DS \xe2\x96\xba</a>\n\t<ul class="sub-menu">\n\t\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/binary-tree-data-structure/">Binary Tree</a></li>\n\t\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/binary-search-tree-data-structure/">Binary Search Tree</a></li>\n\t\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/heap-data-structure/">Heap</a></li>\n\t</ul>\n</li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/hashing-data-structure/">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/graph-data-structure-and-algorithms/">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/advanced-data-structures/">Advanced Data Structure</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/matrix/">Matrix</a></li>\n\t<li id="menu-item-147716" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147716"><a href="http://www.geeksforgeeks.org/category/data-structures/c-strings/">Strings</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/">All Data Structures</a></li>\n</ul>\n</li>\n<li id="menu-item-147478" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-147478"><a href="http://www.geeksforgeeks.org/category/program-output/">Languages \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n\t<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n\t<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n\t<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n\t<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://www.geeksforgeeks.org/sql-tutorial/">SQL</a></li>\n\t<li id="menu-item-140854" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-140854"><a title="http://www.geeksforgeeks.org/category/program-output/" href="http://www.geeksforgeeks.org/category/program-output/">Program Output</a></li>\n</ul>\n</li>\n<li id="menu-item-142017" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-142017"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview  \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-141326" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-141326"><a href="http://www.geeksforgeeks.org/company-preparation/">Company Prep</a></li>\n\t<li id="menu-item-137171" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137171"><a href="http://www.geeksforgeeks.org/interview-preparation-for-software-developer/">Top Topics</a></li>\n\t<li id="menu-item-137172" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137172"><a href="http://www.practice.geeksforgeeks.org/tags.php?">Practice Company Questions</a></li>\n\t<li id="menu-item-137173" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137173"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></li>\n\t<li id="menu-item-137174" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137174"><a href="http://www.geeksforgeeks.org/category/interview-experiences/experienced-interview-experiences/">Experienced Interviews</a></li>\n\t<li id="menu-item-137175" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137175"><a href="http://www.geeksforgeeks.org/category/interview-experiences/internship-interview-experiences/">Internship Interviews</a></li>\n\t<li id="menu-item-137176" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137176"><a href="http://www.geeksforgeeks.org/category/competitive-programming/">Competitive Programming</a></li>\n\t<li id="menu-item-147581" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147581"><a href="http://www.geeksforgeeks.org/software-design-patterns/">Design Patterns</a></li>\n\t<li id="menu-item-137186" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137186"><a href="http://geeksquiz.com/quiz-corner/">Multiple Choice Quizzes</a></li>\n</ul>\n</li>\n<li id="menu-item-137178" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-137178"><a href="http://www.geeksforgeeks.org/student-corner/">Students  \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-137183" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137183"><a href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">Campus Ambassador Program</a></li>\n\t<li id="menu-item-137179" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137179"><a href="http://www.geeksforgeeks.org/geek-of-the-month/">Geek of the Month</a></li>\n\t<li id="menu-item-137570" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137570"><a href="http://geeksquiz.com/placements/">Placement Course</a></li>\n\t<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n\t<li id="menu-item-137180" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137180"><a href="http://www.geeksforgeeks.org/category/competitive-programming/">Competitive Programming</a></li>\n\t<li id="menu-item-137181" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137181"><a href="http://www.geeksforgeeks.org/testimonials/">Testimonials</a></li>\n\t<li id="menu-item-138863" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-138863"><a href="http://www.geeksforgeeks.org/category/geek-on-the-top/">Geek on the Top</a></li>\n\t<li id="menu-item-141974" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-141974"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n\t<li id="menu-item-137378" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-137378"><a href="http://www.geeksforgeeks.org/internship/">Internship</a></li>\n\t<li id="menu-item-147457" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147457"><a href="http://www.geeksforgeeks.org/school-programming/">School Programming</a></li>\n</ul>\n</li>\n<li id="menu-item-146712" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146712"><a href="http://www.geeksforgeeks.org/gate-corner-2-gq/">GATE \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-146713" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146713"><a href="http://www.geeksforgeeks.org/gate-corner-2-gq/">GATE CS Corner</a></li>\n\t<li id="menu-item-146714" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146714"><a href="http://www.geeksforgeeks.org/gate-cs-notes-gq/">GATE Notes</a></li>\n\t<li id="menu-item-146715" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146715"><a href="http://www.geeksforgeeks.org/lmns-gq/">Last Minute Notes</a></li>\n\t<li id="menu-item-146716" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146716"><a href="http://www.geeksforgeeks.org/original-gate-previous-year-question-papers-cse-and-it-gq/">Official Papers</a></li>\n\t<li id="menu-item-146717" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146717"><a href="http://www.geeksforgeeks.org/gate-2017-important-dates-and-links/">Gate 2017 Important Dates and Links</a></li>\n</ul>\n</li>\n<li id="menu-item-146718" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146718"><a href="http://www.geeksforgeeks.org/articles-on-computer-science-subjects-gq/">CS Subjects \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-146729" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146729"><a href="http://www.geeksforgeeks.org/operating-systems/">Operating Systems</a></li>\n\t<li id="menu-item-146724" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146724"><a href="http://www.geeksforgeeks.org/dbms/">DBMS</a></li>\n\t<li id="menu-item-146721" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146721"><a href="http://www.geeksforgeeks.org/computer-network-tutorials/">Computer Networks</a></li>\n\t<li id="menu-item-146720" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146720"><a href="http://www.geeksforgeeks.org/compiler-design-tutorials/">Compiler Design</a></li>\n\t<li id="menu-item-147831" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147831"><a href="http://www.geeksforgeeks.org/web-technology/">Web Technology</a></li>\n\t<li id="menu-item-146722" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146722"><a href="http://www.geeksforgeeks.org/computer-organization-and-architecture-tutorials/">Computer Organization &#038; Architecture</a></li>\n\t<li id="menu-item-146726" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146726"><a href="http://www.geeksforgeeks.org/digital-electronics-logic-design-tutorials/">Digital Electronics</a></li>\n\t<li id="menu-item-146727" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146727"><a href="http://www.geeksforgeeks.org/engineering-mathematics-tutorials/">Engg. Mathematics</a></li>\n\t<li id="menu-item-146730" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146730"><a href="http://www.geeksforgeeks.org/theory-of-computation-automata-tutorials/">Theory of Computation</a></li>\n\t<li id="menu-item-147512" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-147512"><a href="http://www.geeksforgeeks.org/advanced-computer-subjects-tutorials/">Advanced Topics</a></li>\n\t<li id="menu-item-146725" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146725"><a href="http://www.geeksforgeeks.org/category/geeksquiz/articles-gq/difference-gq/">What&#8217;s Difference?</a></li>\n</ul>\n</li>\n<li id="menu-item-140855" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-140855"><a href="http://quiz.geeksforgeeks.org/quiz-corner/">Quizzes \xe2\x96\xbc</a>\n<ul class="sub-menu">\n\t<li id="menu-item-146748" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146748"><a href="http://www.geeksforgeeks.org/quizzes-on-programming-languages-gq/">Languages \xe2\x96\xba</a>\n\t<ul class="sub-menu">\n\t\t<li id="menu-item-146743" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146743"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#C%20Programming%20Mock%20Tests">C</a></li>\n\t\t<li id="menu-item-146745" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146745"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#C++%20Programming%20Mock%20Tests">C++</a></li>\n\t\t<li id="menu-item-146746" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146746"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Java%20Programming%20Mock%20Tests">Java</a></li>\n\t\t<li id="menu-item-146747" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146747"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Python%20Programming%20Mock%20Tests">Python</a></li>\n\t</ul>\n</li>\n\t<li id="menu-item-146825" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-146825"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Data%20Structures%20Mock%20Tests">CS Subjectwise \xe2\x96\xba</a>\n\t<ul class="sub-menu">\n\t\t<li id="menu-item-146731" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146731"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Data%20Structures%20Mock%20Tests">Data Structures</a></li>\n\t\t<li id="menu-item-146732" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146732"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Algorithms%20Mock%20Tests">Algorithms</a></li>\n\t\t<li id="menu-item-146733" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146733"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Operating%20Systems%20Mock%20Tests">Operating Systems</a></li>\n\t\t<li id="menu-item-146734" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146734"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#DBMS%20Mock%20Tests">DBMS</a></li>\n\t\t<li id="menu-item-146735" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146735"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Compiler%20Design%20Mock%20Tests">Compiler Design</a></li>\n\t\t<li id="menu-item-146736" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146736"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Computer%20Networks%20Mock%20Tests">Computer Networks</a></li>\n\t\t<li id="menu-item-146737" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146737"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Theory%20of%20Computation%20Mock%20Tests">Theory of Computation</a></li>\n\t\t<li id="menu-item-146738" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146738"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Computer%20Organization%20and%20Architecture">Computer Organization</a></li>\n\t\t<li id="menu-item-146739" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146739"><a href="http://www.geeksforgeeks.org/software-engineering-gq/">Software Engineering</a></li>\n\t</ul>\n</li>\n\t<li id="menu-item-146740" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146740"><a href="http://www.geeksforgeeks.org/html-and-xml-gq/">HTML &#038; XML</a></li>\n\t<li id="menu-item-146741" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146741"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Engineering%20Mathematics">Engg. Mathematics</a></li>\n\t<li id="menu-item-146742" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-146742"><a href="http://www.geeksforgeeks.org/quiz-corner-gq/#Aptitude%20Mock%20Tests">Aptitude</a></li>\n</ul>\n</li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-141885" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-141885"><a href="http://www.geeksforgeeks.org/puzzles/">Puzzles</a></li>\n<li id="menu-item-141816" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-141816"><a href="http://www.geeksforgeeks.org/progeek-cup-1-0-project-competition-geeksforgeeks/">What&#8217;s New?</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n<button id="scrollTopBtn" title="Scroll to Top" type="button" class="btn btn-success">&#x25B2;</button>\r\n\t<div id="main" class="wrapper">\r\n<div class="leftSideBarParent">\r\n    <div class="leftSideBar">\r\n        <div class="menuDivForLeftbar"><div class="bar1"></div><div class="bar2"></div><div class="bar3"></div></div><span class="leftbarDataSpan" data-pid="2405" data-lid="1" data-type="post" data-termid="8"></span><div class="quickLink_S">\n<table>\n<tbody>\n\n<tr>\n<td class="quickLink-header_S"><b>Interview Preparation</td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/company-preparation/">Company Preparation</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/interview-preparation-for-software-developer/">Top Topics</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/placements-gq/">Placements</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/company-interview-corner/">Interview Corner</a></td>\n</tr>\n\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Recent Interview Experiences</a></td>\n</tr>\n\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/geeksquiz-home/">GQ Home Page</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/quiz-corner-gq/">Quiz Corner</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/lmns-gq/">LMNs</a></td>\n</tr>\n\n<tr>\n<td class="quickLink-header_S"><b>Practice Platform</b></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/recent.php?ref=home">What\'s New ?</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/ranking.php?ref=home">Leaderboard !!</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/company-tags/?ref=home">Company-wise Problems</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/topic-tags/?ref=home">Topic-wise Problems</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/subjective-page.php?ref=home">Subjective Problems</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/School/0/0/?ref=home">Difficulty Level - School</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/Basic/0/0/?ref=home">Difficulty Level - Basic</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/Easy/0/0/?ref=home">Difficulty Level - Easy</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/Medium/0/0/?ref=home">Difficulty Level - Medium</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/Hard/0/0/?ref=home">Difficulty Level - Hard</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/pickACategory.php?ref=home">How to pick a difficulty level?</a></td>\n</tr>\n\n<tr>\n<td><a href="http://practice.geeksforgeeks.org/?ref=home">Explore More...</a></td>\n</tr>\n\n\n<tr>\n<td class="quickLink-header_S"><b>Programming Languages</b></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/c/">C</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/java/">Java</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/python/">Python</a></td>\n</tr>\n\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/sql-tutorial/">SQL</a></td>\n</tr>\n\n\n<tr>\n<td class="quickLink-header_S"><b>Important Quick Links</b></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/school-programming/">School Programming</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/operating-systems/">Operating Systems</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/dbms/">DBMS</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/computer-network-tutorials/">Computer Networks</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/engineering-mathematics-tutorials/">Engineering Mathematics</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/category/design-pattern/">Design Patterns</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/category/puzzles/">Common Interview Puzzles</a></td>\n</tr>\n\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/web-technology/">Web Technology</a></td>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/category/gfact/">G-Facts</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/tag/computer-graphics/">Computer Graphics</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/tag/image-processing/">Image Processing</a></td>\n</tr>\n\n<tr>\n<td><a href="http://www.geeksforgeeks.org/category/project/">Project Ideas</a></td>\n</tr>\n\n</tbody>\n</table>\n</div>    </div>\r\n</div>\r\n\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n                        \t\t\t\t\t\t\t\r\n\t<article id="post-2405" class="post-2405 post type-post status-publish format-standard hentry category-linked-list">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Write a function to get the intersection point of two Linked Lists.</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>There are two singly linked lists in a system. By some programming error the end node of one of the linked list got linked into the second list, forming a inverted Y shaped list. Write a program to get the point where two linked list merge. <span id="more-2405"></span></p>\n<p><img class="aligncenter size-full wp-image-2753" title="Y ShapedLinked List" src="http://www.geeksforgeeks.org/wp-content/uploads/2009/10/Y-ShapedLinked-List.gif" alt="Y ShapedLinked List" width="275" height="300" /><br />\nAbove diagram shows an example with two linked list having 15 as intersection point.</p>\n<div id="practiceLinkDiv">\n<h2><a href="http://practice.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1">Recommended: Please solve it on &#8220;<b><i><u>PRACTICE</u></i></b>&#8221; first, before moving on to the solution.</a></h2>\n</div>\n<p><strong>Method 1(Simply use two loops)</strong><br />\nUse 2 nested for loops. Outer loop will be for each node of the 1st list and inner loop will be for 2nd list. In the inner loop, check if any of nodes of 2nd list is same as the current node of first linked list. Time complexity of this method will be O(mn) where m and n are the number of nodes in two lists.</p>\n<p><strong>Method 2 (Mark Visited Nodes)</strong><br />\nThis solution requires modifications to basic linked list data structure.  Have a visited flag with each node.  Traverse the first linked list and keep marking visited nodes.  Now traverse second linked list, If you see a visited node again then there is an intersection point, return the intersecting node. This solution works in O(m+n) but requires additional information with each node. A variation of this solution that doesn\xe2\x80\x99t require modification to basic data structure can be implemented using hash.  Traverse the first  linked list and  store the addresses of visited nodes in a hash. Now traverse the second linked list and if you see an address that already exists in hash then return the intersecting node.</p>\n<p><strong>Method 3(Using difference of node counts)</strong><br />\n1) Get count of the nodes in first list, let count be c1.<br />\n2) Get count of the nodes in second list, let count be c2.<br />\n3) Get the difference of counts d = abs(c1 &#8211; c2)<br />\n4) Now traverse the bigger list from the first node till d nodes so that from here onwards both the lists have equal no of nodes.<br />\n5) Then we can traverse both the lists in parallel till we come across a common node. (Note that getting a common node is done by comparing the address of the nodes)</p>\n<div class="responsive-tabs">\n<h2 class="tabtitle">C</h2>\n<div class="tabcontent">\n\n<pre class="brush: c; title: ; notranslate" title="">\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\n/* Link list node */\r\nstruct Node\r\n{\r\n  int data;\r\n  struct Node* next;\r\n};\r\n\r\n/* Function to get the counts of node in a linked list */\r\nint getCount(struct Node* head);\r\n\r\n/* function to get the intersection point of two linked\r\n   lists head1 and head2 where head1 has d more nodes than\r\n   head2 */\r\nint _getIntesectionNode(int d, struct Node* head1, struct Node* head2);\r\n\r\n/* function to get the intersection point of two linked\r\n   lists head1 and head2 */\r\nint getIntesectionNode(struct Node* head1, struct Node* head2)\r\n{\r\n  int c1 = getCount(head1);\r\n  int c2 = getCount(head2);\r\n  int d;\r\n\r\n  if(c1 &gt; c2)\r\n  {\r\n    d = c1 - c2;\r\n    return _getIntesectionNode(d, head1, head2);\r\n  }\r\n  else\r\n  {\r\n    d = c2 - c1;\r\n    return _getIntesectionNode(d, head2, head1);\r\n  }\r\n}\r\n\r\n/* function to get the intersection point of two linked\r\n   lists head1 and head2 where head1 has d more nodes than\r\n   head2 */\r\nint _getIntesectionNode(int d, struct Node* head1, struct Node* head2)\r\n{\r\n  int i;\r\n  struct Node* current1 = head1;\r\n  struct Node* current2 = head2;\r\n\r\n  for(i = 0; i &lt; d; i++)\r\n  {\r\n    if(current1 == NULL)\r\n    {  return -1; }\r\n    current1 = current1-&gt;next;\r\n  }\r\n\r\n  while(current1 !=  NULL &amp;&amp; current2 != NULL)\r\n  {\r\n    if(current1 == current2)\r\n      return current1-&gt;data;\r\n    current1= current1-&gt;next;\r\n    current2= current2-&gt;next;\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\n/* Takes head pointer of the linked list and\r\n   returns the count of nodes in the list */\r\nint getCount(struct Node* head)\r\n{\r\n  struct Node* current = head;\r\n  int count = 0;\r\n\r\n  while (current != NULL)\r\n  {\r\n    count++;\r\n    current = current-&gt;next;\r\n  }\r\n\r\n  return count;\r\n}\r\n\r\n/* IGNORE THE BELOW LINES OF CODE. THESE LINES\r\n   ARE JUST TO QUICKLY TEST THE ABOVE FUNCTION */\r\nint main()\r\n{\r\n  /*\r\n    Create two linked lists\r\n\r\n    1st 3-&gt;6-&gt;9-&gt;15-&gt;30\r\n    2nd 10-&gt;15-&gt;30\r\n\r\n    15 is the intersection point\r\n  */\r\n\r\n  struct Node* newNode;\r\n  struct Node* head1 =\r\n            (struct Node*) malloc(sizeof(struct Node));\r\n  head1-&gt;data  = 10;\r\n\r\n  struct Node* head2 =\r\n            (struct Node*) malloc(sizeof(struct Node));\r\n  head2-&gt;data  = 3;\r\n\r\n  newNode = (struct Node*) malloc (sizeof(struct Node));\r\n  newNode-&gt;data = 6;\r\n  head2-&gt;next = newNode;\r\n\r\n  newNode = (struct Node*) malloc (sizeof(struct Node));\r\n  newNode-&gt;data = 9;\r\n  head2-&gt;next-&gt;next = newNode;\r\n\r\n  newNode = (struct Node*) malloc (sizeof(struct Node));\r\n  newNode-&gt;data = 15;\r\n  head1-&gt;next = newNode;\r\n  head2-&gt;next-&gt;next-&gt;next  = newNode;\r\n\r\n  newNode = (struct Node*) malloc (sizeof(struct Node));\r\n  newNode-&gt;data = 30;\r\n  head1-&gt;next-&gt;next= newNode;\r\n\r\n  head1-&gt;next-&gt;next-&gt;next = NULL;\r\n\r\n  printf(&quot;\\n The node of intersection is %d \\n&quot;,\r\n          getIntesectionNode(head1, head2));\r\n\r\n  getchar();\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Java</h2>\n<div class="tabcontent">\n\n<pre class="brush: java; title: ; notranslate" title="">\r\n// Java program to get intersection point of two linked list\r\n\r\nclass LinkedList {\r\n\r\n    static Node head1, head2;\r\n\r\n    static class Node {\r\n\r\n        int data;\r\n        Node next;\r\n\r\n        Node(int d) {\r\n            data = d;\r\n            next = null;\r\n        }\r\n    }\r\n\r\n    /*function to get the intersection point of two linked\r\n    lists head1 and head2 */\r\n    int getNode() {\r\n        int c1 = getCount(head1);\r\n        int c2 = getCount(head2);\r\n        int d;\r\n\r\n        if (c1 &gt; c2) {\r\n            d = c1 - c2;\r\n            return _getIntesectionNode(d, head1, head2);\r\n        } else {\r\n            d = c2 - c1;\r\n            return _getIntesectionNode(d, head2, head1);\r\n        }\r\n    }\r\n\r\n    /* function to get the intersection point of two linked\r\n     lists head1 and head2 where head1 has d more nodes than\r\n     head2 */\r\n    int _getIntesectionNode(int d, Node node1, Node node2) {\r\n        int i;\r\n        Node current1 = node1;\r\n        Node current2 = node2;\r\n        for (i = 0; i &lt; d; i++) {\r\n            if (current1 == null) {\r\n                return -1;\r\n            }\r\n            current1 = current1.next;\r\n        }\r\n        while (current1 != null &amp;&amp; current2 != null) {\r\n            if (current1.data == current2.data) {\r\n                return current1.data;\r\n            }\r\n            current1 = current1.next;\r\n            current2 = current2.next;\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    /*Takes head pointer of the linked list and\r\n    returns the count of nodes in the list */\r\n    int getCount(Node node) {\r\n        Node current = node;\r\n        int count = 0;\r\n\r\n        while (current != null) {\r\n            count++;\r\n            current = current.next;\r\n        }\r\n\r\n        return count;\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        LinkedList list = new LinkedList();\r\n\r\n        // creating first linked list\r\n        list.head1 = new Node(3);\r\n        list.head1.next = new Node(6);\r\n        list.head1.next.next = new Node(15);\r\n        list.head1.next.next.next = new Node(15);\r\n        list.head1.next.next.next.next = new Node(30);\r\n\r\n        // creating second linked list\r\n        list.head2 = new Node(10);\r\n        list.head2.next = new Node(15);\r\n        list.head2.next.next = new Node(30);\r\n\r\n        System.out.println(&quot;The node of intersection is &quot; + list.getNode());\r\n\r\n    }\r\n}\r\n\r\n// This code has been contributed by Mayank Jaiswal\r\n\r\n</pre>\n</div></div>\n<p><strong>Time Complexity:</strong> O(m+n)<br />\n<strong>Auxiliary Space:</strong> O(1)</p>\n<p><strong>Method 4(Make circle in first list)</strong><br />\nThanks to <a href="http://www.geeksforgeeks.org/?p=2405#comment-264">Saravanan Man</a> for providing below solution.<br />\n1. Traverse the first linked list(count the elements) and make a circular linked list. (Remember last node so that we can break the circle later on).<br />\n2. Now view the problem as find the loop in the second linked list. So the problem is solved.<br />\n3. Since we already know the length of the loop(size of first linked list) we can traverse those many number of nodes in second list, and then start another pointer from the beginning of second list. we have to traverse until they are equal, and that is the required intersection point.<br />\n4. remove the circle from the linked list.<br />\n<strong><br />\nTime Complexity:</strong> O(m+n)<br />\n<strong>Auxiliary Space:</strong> O(1)</p>\n<p><strong>Method 5 (Reverse the first list and make equations)</strong><br />\nThanks to <a href="http://www.geeksforgeeks.org/?p=2405#comment-266">Saravanan Mani</a> for providing this method.</p>\n<pre>\r\n1) Let X be the length of the first linked list until intersection point.\r\n   Let Y be the length of the second linked list until the intersection point.\r\n   Let Z be the length of the linked list from intersection point to End of\r\n   the linked list including the intersection node.\r\n   We Have\r\n           X + Z = C1;\r\n           Y + Z = C2;\r\n2) Reverse first linked list.\r\n3) Traverse Second linked list. Let C3 be the length of second list - 1. \r\n     Now we have\r\n        X + Y = C3\r\n     We have 3 linear equations. By solving them, we get\r\n       X = (C1 + C3 \xe2\x80\x93 C2)/2;\r\n       Y = (C2 + C3 \xe2\x80\x93 C1)/2;\r\n       Z = (C1 + C2 \xe2\x80\x93 C3)/2;\r\n      WE GOT THE INTERSECTION POINT.\r\n4)  Reverse first linked list.\r\n</pre>\n<p>Advantage:  No Comparison of pointers.<br />\nDisadvantage : Modifying linked list(Reversing list).<br />\n<strong><br />\nTime complexity:</strong> O(m+n)<br />\n<strong>Auxiliary Space: </strong>O(1)</p>\n<p><strong>Method 6 (Traverse both lists and compare addresses of last nodes)</strong> This method is only to detect if there is an intersection point or not. (Thanks to NeoTheSaviour for suggesting this)</p>\n<pre>\r\n1) Traverse the list 1, store the last node address\r\n2) Traverse the list 2, store the last node address.\r\n3) If nodes stored in 1 and 2 are same then they are intersecting.\r\n</pre>\n<p>Time complexity of this method is O(m+n) and used Auxiliary space is O(1)</p>\n<p><strong>Method 7 (Use Hashing)</strong><br />\nBasically we need to find common node of two linked lists. So we hash all nodes of first list and then check second list.<br />\n1) Create an empty hash table such that node address is used as key and a binary value present/absent is used as value.<br />\n2) Traverse the first linked list and insert all nodes&#8217; addresses in hash table.<br />\n3) Traverse the second list. For every node check if it is present in hash table. If we find a node in hash table, return the node.</p>\n<div id="companyTagsDiv">\n<h3>Asked in: <a href="http://practice.geeksforgeeks.org/company/Amazon/">Amazon</a>, <a href="http://practice.geeksforgeeks.org/company/DE Shaw/">DE Shaw</a>, <a href="http://practice.geeksforgeeks.org/company/Goldman Sachs/">Goldman Sachs</a>, <a href="http://practice.geeksforgeeks.org/company/Microsoft/">Microsoft</a>, <a href="http://practice.geeksforgeeks.org/company/Zopper/">Zopper</a></h3>\n</div>\n<p></br><br />\nPlease write comments if you find any bug in the above algorithm or a better way to solve the same problem.</p>\n\r\n\t\t\t<div class="AdsParent" style="width:100%;">\r\n<span class="rectangleAd">\r\n<!--\r\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n Big Rectangle Blog Bottom \r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n-->\r\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- GfGDownLeftNew -->\r\n<ins class="adsbygoogle"\r\n     style="display:block"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="5794942435"\r\n     data-ad-format="auto"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</span>\r\n<span class="responsiveAd">\r\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- newMobile2 -->\r\n<ins class="adsbygoogle"\r\n     style="display:block"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1950485631"\r\n     data-ad-format="auto"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n</span>\r\n</div>\r\n<h1><strong><a href="http://quiz.geeksforgeeks.org/gate-corner-2/">GATE CS Corner</a>\r\n&nbsp;&nbsp;&nbsp;<a href="http://practice.geeksforgeeks.org/company-tags">Company Wise Coding Practice</a></strong></h1>\r\n\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span><div class="categoryButton"><a href="http://www.geeksforgeeks.org/category/data-structures/linked-list/" rel="category tag">Linked Lists</a></div></span> <span></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n\r\n\r\n<div style="font-size:15px; line-height:22px; margin-left:20px; color:green">\r\n\r\n<h2 style=\'font-size:20px; color: #838383\'>Recommended Posts:</h2><br/><ul>\r\n<li><a href=\'http://www.geeksforgeeks.org/write-a-recursive-function-to-print-reverse-of-a-linked-list/\'>Write a recursive function to print reverse of a Linked List</a></li><li><a href=\'http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/\'>Remove duplicates from a sorted linked list</a></li><li><a href=\'http://www.geeksforgeeks.org/remove-duplicates-from-an-unsorted-linked-list/\'>Remove duplicates from an unsorted linked list</a></li><li><a href=\'http://www.geeksforgeeks.org/union-and-intersection-of-two-linked-lists/\'>Union and Intersection of two Linked Lists</a></li><li><a href=\'http://www.geeksforgeeks.org/merge-a-linked-list-into-another-linked-list-at-alternate-positions/\'>Merge a linked list into another linked list at alternate positions</a></li>\r\n</ul><br/></div>\r\n\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/given-a-linked-list-which-is-sorted-how-will-you-insert-in-sorted-way/" rel="prev"><< Previous Post</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/write-a-recursive-function-to-print-reverse-of-a-linked-list/" rel="next">Next Post >></a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n<!--\r\n<script type="text/javascript">\r\n\t\r\n\t\t\t\tarrPost.push(\'\');\r\n\t\r\n\t\t   <?php// } ?>\r\n\r\n</script>\r\n-->\r\n\r\n\r\n\r\n<div class="plugins">\r\n<div pid="2405" ptitle="Write a function to get the intersection point of two Linked Lists." id="ratePlugin"></div>\r\n<div pid="2405" ptitle="Write a function to get the intersection point of two Linked Lists." id="markPlugin"></div>\r\n</div>\r\n<div id="author" name="GeeksforGeeks"></div>\r\n<br></br>\r\n\r\n<style type="text/css">\r\n \r\n#share-buttons img {\r\nwidth: 35px;\r\npadding: 5px;\r\nborder: 0;\r\nbox-shadow: 0;\r\ndisplay: inline;\r\n}\r\n#share-buttons a:hover {\r\n\ttext-decoration: none;\r\n}\r\n</style>\r\n\r\n\r\n<div id="share-buttons" style="display:none">\r\n   \r\n    <!-- Facebook -->\r\n    <a href="http://www.facebook.com/sharer.php?u=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/" target="_blank" title="Share on Facebook">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/facebook.png" alt="Facebook" />\r\n    </a>\r\n    \r\n    <!-- Google+ -->\r\n    <a href="https://plus.google.com/share?url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/" target="_blank" title="Share on Google">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/google.png" alt="Google" />\r\n    </a>\r\n    \r\n    <!-- LinkedIn -->\r\n    <a href="http://www.linkedin.com/shareArticle?mini=true&amp;url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/" target="_blank" title="Share on LinkedIn">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/linkedin.png" alt="LinkedIn" />\r\n    </a>\r\n    \r\n    <!-- Twitter -->\r\n    <a href="https://twitter.com/share?url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/&amp;text=Write a function to get the intersection point of two Linked Lists.&amp;hashtags=GeeksforGeeks" target="_blank" title="Share on Twitter">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/twitter.png" alt="Twitter" />\r\n    </a>\r\n\r\n    <!-- Pinterest -->\r\n    <a href="javascript:void((function()%7Bvar%20e=document.createElement(\'script\');e.setAttribute(\'type\',\'text/javascript\');e.setAttribute(\'charset\',\'UTF-8\');e.setAttribute(\'src\',\'http://assets.pinterest.com/js/pinmarklet.js?r=\'+Math.random()*99999999);document.body.appendChild(e)%7D)());" title="Share on Pinterest">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/pinterest.png" alt="Pinterest" />\r\n    </a>\r\n    \r\n    <!-- Reddit -->\r\n    <a href="http://reddit.com/submit?url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/&amp;title=Write a function to get the intersection point of two Linked Lists." target="_blank" title="Share on Reddit">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/reddit.png" alt="Reddit" />\r\n    </a>\r\n    \r\n    <!-- StumbleUpon-->\r\n    <a href="http://www.stumbleupon.com/submit?url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/&amp;title=Write a function to get the intersection point of two Linked Lists." target="_blank" title="Share on StumbleUpon">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/stumbleupon.png" alt="StumbleUpon" />\r\n    </a>\r\n    \r\n    <!-- Tumblr-->\r\n    <a href="http://www.tumblr.com/share/link?url=http://www.geeksforgeeks.org/write-a-function-to-get-the-intersection-point-of-two-linked-lists/&amp;title=Write a function to get the intersection point of two Linked Lists." target="_blank" title="Share on Tumblr">\r\n        <img src="http://www.geeksforgeeks.org/wp-content/uploads/tumblr.png" alt="Tumblr" />\r\n    </a>\r\n   \r\n</div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://ide.geeksforgeeks.org/">ide.geeksforgeeks.org</a>, generate link and share the link here.</a></p>\r\n<br/>\r\n<div style="display:flex">\r\n<button id="comment" class="action-button" style="width:45%;cursor: pointer;margin-right:10%;box-shadow: 0 2px 5px 0 rgba(0,0,0,0.4), 0 6px 20px 0 rgba(0,0,0,0);border-color: #4cb96b;border-radius: 4px;">Load Comments</button>\r\n<button id="share" class="action-button" onclick="document.getElementById(\'share-buttons\').style.display=\'block\';this.style.display=\'none\';" style="width:45%;cursor: pointer;margin-right:10%;box-shadow: 0 2px 5px 0 rgba(0,0,0,0.4), 0 6px 20px 0 rgba(0,0,0,0);border-color: #4cb96b;border-radius: 4px;">Share this post!</button>\r\n\r\n</div>\r\n\r\n<div id="disqus_thread"></div>\r\n\r\n\t\t\t\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-40" class="widget widget_text">\t\t\t<div class="textwidget"><div class="trendings_gfg_hc">\r\n    <table align="center" width="100%">\r\n        <thead>\r\n            <tr>\r\n                <th style="border:1px solid #6AA84F;background-color:#4CB96B;color:#fff;text-align: center;font-size: 16px;">Trending Content</th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/converting-string-to-number-and-vice-versa-in-c/\'>Converting string to number and vice-versa in C++</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/java-io-stringwriter-class-in-java/\'>Java.io.StringWriter class in Java</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/z-algorithm-linear-time-pattern-searching-algorithm/\'>Z algorithm (Linear time pattern searching Algorithm)</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/amazon-interview-experience-set-161-off-campus-sde-1-banglore/\'>Amazon Interview Experience | Set 161 (Off Campus for SDE-1, Banglore)</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/c-c-quiz-103-question-5/\'>C Quiz &#8211; 103 | Question 5</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/myntra-interview-experience-set-5/\'>Myntra Interview Experience | Set 5</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/jagged-array-in-java/\'>Jagged Array in Java</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/singleton-design-pattern/\'>Singleton Design Pattern | Implementation</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/bitonic-sort/\'>Bitonic Sort</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        \t  \t\t<tr>\r\n\t\t\t                <td style="border:1px solid #6AA84F;padding:2px;">\r\n\t\t\t                    <a href=\'http://www.geeksforgeeks.org/bottom-view-binary-tree/\'>Bottom View of a Binary Tree</a>\t\t\t                </td>\r\n\t\t\t            </tr>\r\n        \t        </tbody>\r\n    </table>\r\n</div>\r\n\r\n</div>\n\t\t</aside><aside id="text-41" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.geeksforgeeks.org/progeek-cup-1-0-project-competition-geeksforgeeks/" style="margin-right: 0px !important;">\r\n  <center>\r\n    <input type="button" value="ProGeek Cup 1.0" style="background-color: #4cb96b; color:white; width:100%; font-size:large; cursor:pointer;font-weight:bold;">\r\n  </center>\r\n</a></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- ResponsiveRightBarMay16 -->\r\n<ins class="adsbygoogle"\r\n     style="display:block"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="7089558833"\r\n     data-ad-format="auto"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-14" class="widget widget_text">\t\t\t<div class="textwidget"><table align="center" width="100%">\r\n    <thead>\r\n        <tr>\r\n            <th style="border:1px solid #6AA84F;background-color:#4CB96B;color:#fff;text-align: center;font-size: 16px;line-height:1.7;">\r\n                Most Visited Posts\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/a-complete-step-by-step-guide-for-placement-preparation-by-geeksforgeeks/">Step by Step Guide for Placement Preparation</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/how-to-prepare-for-acm-icpc/">How to prepare for ACM-ICPC?</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://quiz.geeksforgeeks.org/insertion-sort/">Insertion Sort</a>,\r\n                <a href="http://geeksquiz.com/binary-search/">Binary Search</a>,\r\n                <a href="http://geeksquiz.com/quick-sort/">QuickSort</a>,\r\n                <a href="http://geeksquiz.com/merge-sort/">MergeSort</a>,\r\n                <a href="http://geeksquiz.com/heap-sort/">HeapSort</a>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table></div>\n\t\t</aside><aside id="text-36" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- GfGSideBottomResponsive -->\r\n<ins class="adsbygoogle"\r\n     style="display:block"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="5749413230"\r\n     data-ad-format="auto"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-42" class="widget widget_text">\t\t\t<div class="textwidget"><!-- BuySellAds Zone Code -->\r\n<div id="bsap_1306934" class="bsarocks bsap_785bf45b162de1c5511e8baa02854e5c"></div>\r\n<!-- End BuySellAds Zone Code --></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><table align="center" width="100%">\r\n    <thead>\r\n        <tr>\r\n            <th style="border:1px solid #6AA84F;background-color:#4CB96B;color:#fff;text-align: center;font-size: 16px;line-height:1.7;">\r\n                Popular Categories\r\n            </th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/advanced-data-structures/">Advanced Data Structures</a>\r\n            </td>\r\n        </tr>\r\n\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/dynamic-programming/">Dynamic Programming</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/greedy/">Greedy Algorithms</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/backtracking/">Backtracking</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/divide-and-conquer/">Divide &amp; Conquer</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/algorithm/geometric/">Geometric Algorithms</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/searching/">Searching</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style="border:1px solid #6AA84F;padding:2px;line-height:1.7;font-size:13px;">\r\n                <a href="http://www.geeksforgeeks.org/category/algorithm/game-theory/">Game Theory</a>\r\n            </td>\r\n        </tr>\r\n\r\n    </tbody>\r\n</table></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/category/advanced-data-structure/\' class=\'tag-link-1762 tag-link-position-1\' title=\'139 topics\' style=\'font-size: 10.947368421053pt;\'>Advanced Data Structure</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-1942 tag-link-position-2\' title=\'389 topics\' style=\'font-size: 15.578947368421pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/aptitude-gq/\' class=\'tag-link-2200 tag-link-position-3\' title=\'202 topics\' style=\'font-size: 12.631578947368pt;\'>Aptitude</a>\n<a href=\'http://www.geeksforgeeks.org/tag/aptitude/\' class=\'tag-link-2159 tag-link-position-4\' title=\'202 topics\' style=\'font-size: 12.631578947368pt;\'>Aptitude</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/c-arrays/\' class=\'tag-link-3 tag-link-position-5\' title=\'362 topics\' style=\'font-size: 15.263157894737pt;\'>Arrays</a>\n<a href=\'http://www.geeksforgeeks.org/category/algorithm/bit-magic/\' class=\'tag-link-17 tag-link-position-6\' title=\'135 topics\' style=\'font-size: 10.736842105263pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/category/programming-language/c/\' class=\'tag-link-2064 tag-link-position-7\' title=\'461 topics\' style=\'font-size: 16.315789473684pt;\'>C</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-2138 tag-link-position-8\' title=\'399 topics\' style=\'font-size: 15.684210526316pt;\'>C</a>\n<a href=\'http://www.geeksforgeeks.org/category/programming-language/cpp/\' class=\'tag-link-2065 tag-link-position-9\' title=\'481 topics\' style=\'font-size: 16.526315789474pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/computer-science-quizzes-gq/cpp-gq/\' class=\'tag-link-2207 tag-link-position-10\' title=\'130 topics\' style=\'font-size: 10.631578947368pt;\'>C++ Quiz</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cpp-library/\' class=\'tag-link-1964 tag-link-position-11\' title=\'85 topics\' style=\'font-size: 8.6315789473684pt;\'>CPP-Library</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/computer-science-quizzes-gq/c-gq/\' class=\'tag-link-2206 tag-link-position-12\' title=\'274 topics\' style=\'font-size: 14pt;\'>C Quiz</a>\n<a href=\'http://www.geeksforgeeks.org/tag/data-structures/\' class=\'tag-link-2142 tag-link-position-13\' title=\'129 topics\' style=\'font-size: 10.526315789474pt;\'>Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/computer-science-quizzes-gq/data-structures-gate-gq/\' class=\'tag-link-2213 tag-link-position-14\' title=\'129 topics\' style=\'font-size: 10.526315789474pt;\'>Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/category/computer-subject/dbms/\' class=\'tag-link-2053 tag-link-position-15\' title=\'92 topics\' style=\'font-size: 9.0526315789474pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/category/algorithm/dynamic-programming/\' class=\'tag-link-1746 tag-link-position-16\' title=\'220 topics\' style=\'font-size: 12.947368421053pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/category/interview-experiences/experienced-interview-experiences/\' class=\'tag-link-1795 tag-link-position-17\' title=\'100 topics\' style=\'font-size: 9.3684210526316pt;\'>Experienced</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133 tag-link-position-18\' title=\'75 topics\' style=\'font-size: 8.1052631578947pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/category/guestblogs/\' class=\'tag-link-1710 tag-link-position-19\' title=\'185 topics\' style=\'font-size: 12.210526315789pt;\'>GBlog</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/graph/\' class=\'tag-link-2068 tag-link-position-20\' title=\'155 topics\' style=\'font-size: 11.368421052632pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/hash/\' class=\'tag-link-1756 tag-link-position-21\' title=\'96 topics\' style=\'font-size: 9.2631578947368pt;\'>Hash</a>\n<a href=\'http://www.geeksforgeeks.org/category/interview-experiences/internship-interview-experiences/\' class=\'tag-link-1794 tag-link-position-22\' title=\'105 topics\' style=\'font-size: 9.6842105263158pt;\'>Internship</a>\n<a href=\'http://www.geeksforgeeks.org/category/interview-experiences/\' class=\'tag-link-1140 tag-link-position-23\' title=\'1,579 topics\' style=\'font-size: 22pt;\'>Interview Experiences</a>\n<a href=\'http://www.geeksforgeeks.org/category/programming-language/java/\' class=\'tag-link-2058 tag-link-position-24\' title=\'552 topics\' style=\'font-size: 17.157894736842pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-2082 tag-link-position-25\' title=\'73 topics\' style=\'font-size: 8pt;\'>java-</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/computer-science-quizzes-gq/java-gq/\' class=\'tag-link-2208 tag-link-position-26\' title=\'73 topics\' style=\'font-size: 8pt;\'>Java Quiz</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/linked-list/\' class=\'tag-link-8 tag-link-position-27\' title=\'141 topics\' style=\'font-size: 10.947368421053pt;\'>Linked Lists</a>\n<a href=\'http://www.geeksforgeeks.org/category/algorithm/mathematical/\' class=\'tag-link-1753 tag-link-position-28\' title=\'464 topics\' style=\'font-size: 16.421052631579pt;\'>Mathematical</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/matrix/\' class=\'tag-link-1760 tag-link-position-29\' title=\'144 topics\' style=\'font-size: 11.052631578947pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/category/multiple-choice-question/\' class=\'tag-link-66 tag-link-position-30\' title=\'96 topics\' style=\'font-size: 9.2631578947368pt;\'>MCQ</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104 tag-link-position-31\' title=\'138 topics\' style=\'font-size: 10.842105263158pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/number-digits/\' class=\'tag-link-1911 tag-link-position-32\' title=\'78 topics\' style=\'font-size: 8.3157894736842pt;\'>number-digits</a>\n<a href=\'http://www.geeksforgeeks.org/category/program-output/\' class=\'tag-link-5 tag-link-position-33\' title=\'112 topics\' style=\'font-size: 9.8947368421053pt;\'>Program Output</a>\n<a href=\'http://www.geeksforgeeks.org/category/project/\' class=\'tag-link-1767 tag-link-position-34\' title=\'85 topics\' style=\'font-size: 8.6315789473684pt;\'>Project</a>\n<a href=\'http://www.geeksforgeeks.org/category/puzzles/\' class=\'tag-link-2063 tag-link-position-35\' title=\'102 topics\' style=\'font-size: 9.4736842105263pt;\'>Puzzles</a>\n<a href=\'http://www.geeksforgeeks.org/category/programming-language/python/\' class=\'tag-link-1789 tag-link-position-36\' title=\'247 topics\' style=\'font-size: 13.473684210526pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/category/quizzes-gq/qa-placement-quizzes-gq/\' class=\'tag-link-2204 tag-link-position-37\' title=\'274 topics\' style=\'font-size: 14pt;\'>QA - Placement Quizzes</a>\n<a href=\'http://www.geeksforgeeks.org/tag/qa-placement-quizzes/\' class=\'tag-link-2187 tag-link-position-38\' title=\'274 topics\' style=\'font-size: 14pt;\'>QA - Placement Quizzes</a>\n<a href=\'http://www.geeksforgeeks.org/category/school-programming/\' class=\'tag-link-2078 tag-link-position-39\' title=\'224 topics\' style=\'font-size: 13.052631578947pt;\'>School Programming</a>\n<a href=\'http://www.geeksforgeeks.org/category/algorithm/searching/\' class=\'tag-link-1751 tag-link-position-40\' title=\'81 topics\' style=\'font-size: 8.4210526315789pt;\'>Searching</a>\n<a href=\'http://www.geeksforgeeks.org/category/algorithm/sorting/\' class=\'tag-link-1752 tag-link-position-41\' title=\'167 topics\' style=\'font-size: 11.789473684211pt;\'>Sorting</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stl/\' class=\'tag-link-1797 tag-link-position-42\' title=\'129 topics\' style=\'font-size: 10.526315789474pt;\'>STL</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/c-strings/\' class=\'tag-link-7 tag-link-position-43\' title=\'286 topics\' style=\'font-size: 14.210526315789pt;\'>Strings</a>\n<a href=\'http://www.geeksforgeeks.org/category/technical-scripter/\' class=\'tag-link-1788 tag-link-position-44\' title=\'85 topics\' style=\'font-size: 8.6315789473684pt;\'>Technical Scripter</a>\n<a href=\'http://www.geeksforgeeks.org/category/data-structures/tree/\' class=\'tag-link-19 tag-link-position-45\' title=\'224 topics\' style=\'font-size: 13.052631578947pt;\'>Trees</a></div>\n</aside><aside id="text-43" class="widget widget_text">\t\t\t<div class="textwidget"><!-- BuySellAds Zone Code -->\r\n<div id="bsap_1304848" class="bsarocks bsap_785bf45b162de1c5511e8baa02854e5c"></div>\r\n<!-- End BuySellAds Zone Code --></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.geeksforgeeks.org/recent-comments/" style="margin-right: 0px !important;">\r\n  <center>\r\n    <input type="button" value="Recent Comments" style="background-color: #4cb96b; color:white; width:100%; font-size:large; cursor:pointer;font-weight:bold;">\r\n  </center>\r\n</a></div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo" style="padding:0; ">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n  <div class="iconic-footer" style="min-height:40px;font-size:14px;padding-bottom: 0px;line-height: 1.5;">\r\n    @geeksforgeeks, \r\n    <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a><a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>\r\n    <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp;</a>\r\n    <a href="http://www.geeksforgeeks.org/advertise-with-us/"> &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; </a>\r\n    <a href="http://www.geeksforgeeks.org/privacy-policy/">&nbsp; &nbsp; &nbsp; Privacy Policy&nbsp; &nbsp;&nbsp; </a>\r\n    <!-- adding social buttons on 07 April, 2017 -->\r\n    <a href="https://www.facebook.com/GeeksforGeeks-316764689022/timeline/" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="facebook">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_facebook_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n    <a href="https://twitter.com/geeksforgeeks" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="twitter">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_twitter_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n    <a href="https://www.linkedin.com/company-beta/1299009" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="linkedin">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_linkedin_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n    <a href="https://play.google.com/store/apps/details?id=free.programming.programming" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="play store">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_play_store_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n    <a href="https://www.microsoft.com/en-us/store/apps/geeksforgeeks-official/9nblggh4rh30" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="windows store">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_windows_store_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n    <a href="https://itunes.apple.com/us/app/geeksforgeeks/id1101205459?ls=1&mt=8" style="display: inline-block;margin-left: 10px;border:1px solid #fff;border-radius: 2px;" title="app store">\r\n      <img src="http://www.geeksforgeeks.org/wp-content/uploads/square_app_store_green.png" style="width:30px;vertical-align: middle;" />\r\n    </a>\r\n  </div>\r\n</center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore-1.0.js\'></script>\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushC.js\'></script>\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://www.geeksforgeeks.org/wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://www.geeksforgeeks.org/wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-includes/js/wp-embed.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://www.geeksforgeeks.org/wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n<script type="text/javascript">\r\n// below changes to be added in gfg.js in future.\r\n// load comment button click when page scroll to it and positioned ad in mobile view.\r\nflag=0;jQuery(window).scroll(function(){if(jQuery(\'#comment\').length !=0 ){var hT=jQuery(\'#comment\').offset().top,hH=jQuery(\'#comment\').outerHeight(),wH=jQuery(window).height(),wS=jQuery(this).scrollTop();if(wS>(hT+hH-wH-70)&&!flag){jQuery(\'#comment\').click();flag=1}}});var temp_width=jQuery(window).width();if(temp_width<468){if(jQuery(\'article\').length>1){jQuery(jQuery(\'.responsiveAd\')).insertAfter(\'article:eq(2)\');jQuery(\'.rectangleAd\').hide()}\r\nelse{jQuery(\'.responsiveAd\').hide();jQuery(\'.rectangleAd\').css(\'width\',\'\')}}\r\n\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\r\n\n<!-- Dynamic page generated in 0.130 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2017-07-08 22:06:32 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p887
sb.