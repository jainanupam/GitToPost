ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/DeleteDuplicatesFromList'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/DeleteDuplicatesFromList.java'
p11
atp12
Rp13
sS'title'
p14
VRemove duplicates from a sorted linked list
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(g22
g2
Ntp44
Rp45
(dp46
g26
I00
sg27
g0
(cbs4.element
NavigableString
p47
c__builtin__
unicode
p48
VWrite a removeDuplicates() function which takes a list sorted in non-decreasing order and deletes any duplicate nodes from the list. The list should only be traversed once. 
p49
tp50
Rp51
(dp52
g34
Nsg27
g39
sg28
g45
sg37
g45
sg31
g39
sbsg28
Nsg29
Vspan
p53
sg31
g39
sg32
Nsg33
Nsg34
g51
sg35
(dp54
Vid
p55
Vmore-5075
p56
ssg37
g42
sS'parser_class'
p57
cbs4
BeautifulSoup
p58
sS'hidden'
p59
I00
sS'contents'
p60
(lp61
sbsg28
g0
(g22
g2
Ntp62
Rp63
(dp64
g26
I00
sg27
g0
(g47
g48
VFor example if the linked list is 11->11->11->21->43->43->60 then removeDuplicates() should convert the list to 11->21->43->60. 
p65
tp66
Rp67
(dp68
g34
Nsg27
g42
sg28
Nsg37
g63
sg31
g42
sbsg28
g0
(g22
g2
Ntp69
Rp70
(dp71
g26
I00
sg27
g0
(g47
g48
V\u000aTraverse the list from the head (or start) node. While traversing, compare each node with its next node. If data of next node is same as current node then delete the next node. Before we delete a node, we need to store next pointer of the node 
p72
tp73
Rp74
(dp75
g34
g0
(g22
g2
Ntp76
Rp77
(dp78
g26
I01
sg27
g0
(g47
g48
VAlgorithm:
p79
tp80
Rp81
(dp82
g34
Nsg27
g0
(g22
g2
Ntp83
Rp84
(dp85
g26
I00
sg27
g63
sg28
g77
sg29
Vstrong
p86
sg31
g63
sg32
Nsg33
Nsg34
Nsg35
(dp87
sg37
g81
sg57
g58
sg59
I00
sg60
(lp88
g81
asbsg28
Nsg37
g77
sg31
g84
sbsg28
g74
sg29
Vbr
p89
sg31
g63
sg32
Nsg33
Nsg34
g84
sg35
(dp90
sg37
g74
sg57
g58
sg59
I00
sg60
(lp91
sbsg27
g77
sg28
Nsg37
g70
sg31
g63
sbsg28
g0
(g22
g2
Ntp92
Rp93
(dp94
g26
I00
sg27
g0
(g47
g48
V\u000a
p95
tp96
Rp97
(dp98
g34
Nsg27
g0
(g22
g2
Ntp99
Rp100
(dp101
g26
I00
sg27
g0
(g47
g48
V\u000a
p102
tp103
Rp104
(dp105
g34
g0
(g22
g2
Ntp106
Rp107
(dp108
g26
I00
sg27
g0
(g47
g48
V\u000a
p109
tp110
Rp111
(dp112
g34
Nsg27
g0
(g22
g2
Ntp113
Rp114
(dp115
g26
I00
sg27
g0
(g47
g48
V\u000a
p116
tp117
Rp118
(dp119
g34
g0
(g22
g2
Ntp120
Rp121
(dp122
g26
I01
sg27
g0
(g47
g48
V\u000aFunctions other than removeDuplicates() are just to create a linked linked list and test removeDuplicates().
p123
tp124
Rp125
(dp126
g34
g0
(g22
g2
Ntp127
Rp128
(dp129
g26
I01
sg27
g0
(g47
g48
VImplementation:
p130
tp131
Rp132
(dp133
g34
Nsg27
g0
(g22
g2
Ntp134
Rp135
(dp136
g26
I00
sg27
g70
sg28
g128
sg29
Vstrong
p137
sg31
g70
sg32
Nsg33
Nsg34
Nsg35
(dp138
sg37
g132
sg57
g58
sg59
I00
sg60
(lp139
g132
asbsg28
Nsg37
g128
sg31
g135
sbsg28
g125
sg29
Vbr
p140
sg31
g70
sg32
Nsg33
Nsg34
g135
sg35
(dp141
sg37
g125
sg57
g58
sg59
I00
sg60
(lp142
sbsg27
g128
sg28
g121
sg37
g121
sg31
g70
sbsg28
g118
sg29
Vbr
p143
sg31
g70
sg32
Nsg33
Nsg34
g125
sg35
(dp144
sg37
g118
sg57
g58
sg59
I00
sg60
(lp145
sbsg27
g121
sg28
g114
sg37
g114
sg31
g70
sbsg28
Nsg29
Vdiv
p146
sg31
g70
sg32
Nsg33
Nsg34
g118
sg35
(dp147
Vclass
p148
(lp149
Vresponsive-tabs
p150
assg37
g111
sg57
g58
sg59
I00
sg60
(lp151
g111
ag107
ag104
ag100
asbsg28
g107
sg37
g107
sg31
g114
sbsg28
g104
sg29
Vh2
p152
sg31
g114
sg32
Nsg33
Nsg34
g111
sg35
(dp153
Vclass
p154
(lp155
Vtabtitle
p156
assg37
g0
(g47
g48
VC
p157
tp158
Rp159
(dp160
g34
Nsg27
g107
sg28
Nsg37
g104
sg31
g107
sbsg57
g58
sg59
I00
sg60
(lp161
g159
asbsg27
g159
sg28
g100
sg37
g100
sg31
g114
sbsg28
Nsg29
Vdiv
p162
sg31
g114
sg32
Nsg33
Nsg34
g104
sg35
(dp163
Vclass
p164
(lp165
Vtabcontent
p166
assg37
g97
sg57
g58
sg59
I00
sg60
(lp167
g97
asbsg28
Nsg37
g93
sg31
g100
sbsg28
Nsg29
Vpre
p168
sg31
g24
sg32
Nsg33
Nsg34
g70
sg35
(dp169
Vclass
p170
(lp171
Vbrush:
p172
aVcpp;
p173
aVhighlight:
p174
aV[12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41];
p175
aVtitle:
p176
aV;
p177
aVnotranslate
p178
asVtitle
p179
V
p180
ssg37
g0
(g47
g48
V\u000a/* C Program to remove duplicates from a sorted linked list */\u000a#include<stdio.h>\u000a#include<stdlib.h>\u000a\u000a/* Link list node */\u000astruct node\u000a{\u000a    int data;\u000a    struct node* next;\u000a};\u000a\u000a/* The function removes duplicates from a sorted list */\u000avoid removeDuplicates(struct node* head)\u000a{\u000a    /* Pointer to traverse the linked list */\u000a    struct node* current = head;\u000a\u000a    /* Pointer to store the next pointer of a node to be deleted*/\u000a    struct node* next_next; \u000a  \u000a    /* do nothing if the list is empty */\u000a    if (current == NULL) \u000a       return; \u000a\u000a    /* Traverse the list till last node */\u000a    while (current->next != NULL) \u000a    {\u000a       /* Compare current node with next node */\u000a       if (current->data == current->next->data) \u000a       {\u000a           /* The sequence of steps is important*/               \u000a           next_next = current->next->next;\u000a           free(current->next);\u000a           current->next = next_next;  \u000a       }\u000a       else /* This is tricky: only advance if no deletion */\u000a       {\u000a          current = current->next; \u000a       }\u000a    }\u000a}\u000a\u000a/* UTILITY FUNCTIONS */\u000a/* Function to insert a node at the beginging of the linked list */\u000avoid push(struct node** head_ref, int new_data)\u000a{\u000a    /* allocate node */\u000a    struct node* new_node =\u000a            (struct node*) malloc(sizeof(struct node));\u000a            \u000a    /* put in the data  */\u000a    new_node->data  = new_data;\u000a                \u000a    /* link the old list off the new node */\u000a    new_node->next = (*head_ref);     \u000a        \u000a    /* move the head to point to the new node */\u000a    (*head_ref)    = new_node;\u000a}\u000a\u000a/* Function to print nodes in a given linked list */\u000avoid printList(struct node *node)\u000a{\u000a    while (node!=NULL)\u000a    {\u000a       printf("%d ", node->data);\u000a       node = node->next;\u000a    }\u000a} \u000a\u000a/* Drier program to test above functions*/\u000aint main()\u000a{\u000a    /* Start with the empty list */\u000a    struct node* head = NULL;\u000a  \u000a    /* Let us create a sorted linked list to test the functions\u000a     Created linked list will be 11->11->11->13->13->20 */\u000a    push(&head, 20);\u000a    push(&head, 13);\u000a    push(&head, 13);  \u000a    push(&head, 11);\u000a    push(&head, 11);\u000a    push(&head, 11);                                    \u000a\u000a    printf("\u005cn Linked list before duplicate removal  ");\u000a    printList(head); \u000a\u000a    /* Remove duplicates from linked list */\u000a    removeDuplicates(head); \u000a\u000a    printf("\u005cn Linked list after duplicate removal ");         \u000a    printList(head);            \u000a  \u000a    return 0;\u000a}\u000a
p181
tp182
Rp183
(dp184
g34
Nsg27
g93
sg28
Nsg37
Nsg31
g93
sbsg57
g58
sg59
I00
sg60
(lp185
g183
asbsg29
Vp
p186
sg31
g24
sg32
Nsg33
Nsg34
g63
sg35
(dp187
sg37
g135
sg57
g58
sg59
I00
sg60
(lp188
g135
ag128
ag125
ag121
ag118
ag114
asbsg29
g186
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp189
sg37
g84
sg57
g58
sg59
I00
sg60
(lp190
g84
ag77
ag74
asbsg29
g186
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp191
sg37
g67
sg57
g58
sg59
I00
sg60
(lp192
g67
asbsg29
g186
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp193
sg37
g51
sg57
g58
sg59
I00
sg60
(lp194
g51
ag45
asbsg57
Nsg59
I00
sg60
(lp195
g39
ag42
ag63
ag70
ag93
asbsS'raw_page'
p196
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Remove duplicates from a sorted linked list - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Remove duplicates from a sorted linked list - GeeksforGeeks" />\n<meta property="og:description" content="Write a removeDuplicates() function which takes a list sorted in non-decreasing order and deletes any duplicate nodes from the list. The list should only be traversed once. For example if the linked list is 11-&gt;11-&gt;11-&gt;21-&gt;43-&gt;43-&gt;60 then removeDuplicates() should convert the list to 11-&gt;21-&gt;43-&gt;60. Algorithm: Traverse the list from the head (or start) node. While traversing,\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:section" content="Linked Lists" />\n<meta property="article:published_time" content="2010-02-23T21:26:34+00:00" />\n<meta property="article:modified_time" content="2015-11-04T00:10:18+00:00" />\n<meta property="og:updated_time" content="2015-11-04T00:10:18+00:00" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-5075 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-5075" class="post-5075 post type-post status-publish format-standard hentry category-linked-list">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Remove duplicates from a sorted linked list</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Write a removeDuplicates() function which takes a list sorted in non-decreasing order and deletes any duplicate nodes from the list. The list should only be traversed once. <span id="more-5075"></span></p>\n<p>For example if the linked list is 11->11->11->21->43->43->60 then removeDuplicates() should convert the list to 11->21->43->60. </p>\n<p><strong>Algorithm:</strong><br />\nTraverse the list from the head (or start) node. While traversing, compare each node with its next node. If data of next node is same as current node then delete the next node. Before we delete a node, we need to store next pointer of the node </p>\n<p><strong>Implementation:</strong><br />\nFunctions other than removeDuplicates() are just to create a linked linked list and test removeDuplicates().<br />\n<div class="responsive-tabs">\n<h2 class="tabtitle">C</h2>\n<div class="tabcontent">\n</p>\n<pre class="brush: cpp; highlight: [12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]; title: ; notranslate" title="">\r\n/* C Program to remove duplicates from a sorted linked list */\r\n#include&lt;stdio.h&gt;\r\n#include&lt;stdlib.h&gt;\r\n\r\n/* Link list node */\r\nstruct node\r\n{\r\n    int data;\r\n    struct node* next;\r\n};\r\n\r\n/* The function removes duplicates from a sorted list */\r\nvoid removeDuplicates(struct node* head)\r\n{\r\n    /* Pointer to traverse the linked list */\r\n    struct node* current = head;\r\n\r\n    /* Pointer to store the next pointer of a node to be deleted*/\r\n    struct node* next_next; \r\n  \r\n    /* do nothing if the list is empty */\r\n    if (current == NULL) \r\n       return; \r\n\r\n    /* Traverse the list till last node */\r\n    while (current-&gt;next != NULL) \r\n    {\r\n       /* Compare current node with next node */\r\n       if (current-&gt;data == current-&gt;next-&gt;data) \r\n       {\r\n           /* The sequence of steps is important*/               \r\n           next_next = current-&gt;next-&gt;next;\r\n           free(current-&gt;next);\r\n           current-&gt;next = next_next;  \r\n       }\r\n       else /* This is tricky: only advance if no deletion */\r\n       {\r\n          current = current-&gt;next; \r\n       }\r\n    }\r\n}\r\n\r\n/* UTILITY FUNCTIONS */\r\n/* Function to insert a node at the beginging of the linked list */\r\nvoid push(struct node** head_ref, int new_data)\r\n{\r\n    /* allocate node */\r\n    struct node* new_node =\r\n            (struct node*) malloc(sizeof(struct node));\r\n            \r\n    /* put in the data  */\r\n    new_node-&gt;data  = new_data;\r\n                \r\n    /* link the old list off the new node */\r\n    new_node-&gt;next = (*head_ref);     \r\n        \r\n    /* move the head to point to the new node */\r\n    (*head_ref)    = new_node;\r\n}\r\n\r\n/* Function to print nodes in a given linked list */\r\nvoid printList(struct node *node)\r\n{\r\n    while (node!=NULL)\r\n    {\r\n       printf(&quot;%d &quot;, node-&gt;data);\r\n       node = node-&gt;next;\r\n    }\r\n} \r\n\r\n/* Drier program to test above functions*/\r\nint main()\r\n{\r\n    /* Start with the empty list */\r\n    struct node* head = NULL;\r\n  \r\n    /* Let us create a sorted linked list to test the functions\r\n     Created linked list will be 11-&gt;11-&gt;11-&gt;13-&gt;13-&gt;20 */\r\n    push(&amp;head, 20);\r\n    push(&amp;head, 13);\r\n    push(&amp;head, 13);  \r\n    push(&amp;head, 11);\r\n    push(&amp;head, 11);\r\n    push(&amp;head, 11);                                    \r\n\r\n    printf(&quot;\\n Linked list before duplicate removal  &quot;);\r\n    printList(head); \r\n\r\n    /* Remove duplicates from linked list */\r\n    removeDuplicates(head); \r\n\r\n    printf(&quot;\\n Linked list after duplicate removal &quot;);         \r\n    printList(head);            \r\n  \r\n    return 0;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Java</h2>\n<div class="tabcontent">\n\n<pre class="brush: java; highlight: [14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38]; title: ; notranslate" title="">\r\n// Java program to remove duplicates from a sorted linked list\r\nclass LinkedList\r\n{\r\n    Node head;  // head of list\r\n \r\n    /* Linked list Node*/\r\n    class Node\r\n    {\r\n        int data;\r\n        Node next;\r\n        Node(int d) {data = d; next = null; }\r\n    }\r\n\r\n    void removeDuplicates()\r\n    {\r\n        /*Another reference to head*/\r\n        Node current = head;\r\n\r\n        /* Pointer to store the next pointer of a node to be deleted*/\r\n        Node next_next;\r\n\r\n        /* do nothing if the list is empty */\r\n        if (head == null)    \r\n            return;\r\n\r\n        /* Traverse list till the last node */\r\n        while (current.next != null) {\r\n\r\n            /*Compare current node with the next node */\r\n            if (current.data == current.next.data) {\r\n                next_next = current.next.next;\r\n                current.next = null;\r\n                current.next = next_next;\r\n            }\r\n            else // advance if no deletion\r\n               current = current.next;\r\n        }\r\n    }\r\n                    \r\n    /* Utility functions */\r\n\r\n    /* Inserts a new Node at front of the list. */\r\n    public void push(int new_data)\r\n    {\r\n        /* 1 &amp; 2: Allocate the Node &amp;\r\n                  Put in the data*/\r\n        Node new_node = new Node(new_data);\r\n \r\n        /* 3. Make next of new Node as head */\r\n        new_node.next = head;\r\n \r\n        /* 4. Move the head to point to new Node */\r\n        head = new_node;\r\n    }\r\n\r\n    /* Function to print linked list */\r\n     void printList()\r\n     {\r\n         Node temp = head;\r\n         while (temp != null)\r\n         {\r\n            System.out.print(temp.data+&quot; &quot;);\r\n            temp = temp.next;\r\n         }  \r\n         System.out.println();\r\n     }\r\n\r\n     /* Drier program to test above functions */\r\n    public static void main(String args[])\r\n    {\r\n        LinkedList llist = new LinkedList();\r\n        llist.push(20);\r\n        llist.push(13);\r\n        llist.push(13);\r\n        llist.push(11);\r\n        llist.push(11);\r\n        llist.push(11);\r\n        \r\n        System.out.println(&quot;List before removal of duplicates&quot;);\r\n        llist.printList();\r\n        \r\n        llist.removeDuplicates();\r\n        \r\n        System.out.println(&quot;List after removal of elements&quot;);\r\n        llist.printList();\r\n    }\r\n} \r\n/* This code is contributed by Rajat Mishra */    \r\n</pre>\n<p></div></div><br />\nOutput:\n<pre>\r\n Linked list before duplicate removal 11 11 11 13 13 20 \r\n Linked list after duplicate removal 11 13 20 </pre>\n<p><strong><br />\nTime Complexity:</strong> O(n) where n is number of nodes in the given linked list.</p>\n<p><strong>References:</strong><br />\n<a href="http://cslibrary.stanford.edu/105/LinkedListProblems.pdf">cslibrary.stanford.edu/105/LinkedListProblems.pdf</a></p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="5075 http://geeksforgeeks.org/?p=5075">23 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/linked-list/" rel="category tag">Linked Lists</a></span> <span></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/merge-two-sorted-linked-lists-such-that-merged-list-is-in-reverse-order/" title="Merge two sorted linked lists such that merged list is in reverse order">Merge two sorted linked lists such that merged list is in reverse order</a></li><li><a href="http://www.geeksforgeeks.org/compare-two-strings-represented-as-linked-lists/" title="Compare two strings represented as linked lists">Compare two strings represented as linked lists</a></li><li><a href="http://www.geeksforgeeks.org/rearrange-a-given-linked-list-in-place/" title="Rearrange a given linked list in-place.">Rearrange a given linked list in-place.</a></li><li><a href="http://www.geeksforgeeks.org/how-to-sort-a-linked-list-that-is-sorted-alternating-ascending-and-descending-orders/" title="Sort a linked list that is sorted alternating ascending and descending orders?">Sort a linked list that is sorted alternating ascending and descending orders?</a></li><li><a href="http://www.geeksforgeeks.org/select-a-random-node-from-a-singly-linked-list/" title="Select a Random Node from a Singly Linked List">Select a Random Node from a Singly Linked List</a></li><li><a href="http://www.geeksforgeeks.org/merge-sort-for-doubly-linked-list/" title="Merge Sort for Doubly Linked List">Merge Sort for Doubly Linked List</a></li><li><a href="http://www.geeksforgeeks.org/point-to-next-higher-value-node-in-a-linked-list-with-an-arbitrary-pointer/" title="Point to next higher value node in a linked list with an arbitrary pointer">Point to next higher value node in a linked list with an arbitrary pointer</a></li><li><a href="http://www.geeksforgeeks.org/swap-nodes-in-a-linked-list-without-swapping-data/" title="Swap nodes in a linked list without swapping data">Swap nodes in a linked list without swapping data</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/write-a-recursive-function-to-print-reverse-of-a-linked-list/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/remove-duplicates-from-an-unsorted-linked-list/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="5075" ptitle="Remove duplicates from a sorted linked list" id="ratePlugin"></div>\r\n<div pid="5075" ptitle="Remove duplicates from a sorted linked list" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-36260">\r\n        <div id="dsq-comment-header-36260" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36260">\r\n                <span id="dsq-author-user-36260">v3gA</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36260" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36260" class="dsq-comment-message"><p>One can use a recursive version as well. <a href="http://ideone.com/4UeBkp" rel="nofollow">http://ideone.com/4UeBkp</a><br />\nTime complexity : O(n)<br />\nAuxiliary space: O(1) (No stack space taken with tail call optimization)</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-35727">\r\n        <div id="dsq-comment-header-35727" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35727">\r\n                <span id="dsq-author-user-35727">Aman</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35727" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35727" class="dsq-comment-message"><p>Solution with less number of variables:</p>\n<p>void removeDuplicates(Node* head)</p>\n<p>{</p>\n<p>    while(head-&gt;next  != NULL)</p>\n<p>    {</p>\n<p>        if(head-&gt;data == head-&gt;next-&gt;data)</p>\n<p>        {</p>\n<p>            Node* temp = head-&gt;next;</p>\n<p>            head-&gt;next = head-&gt;next-&gt;next;</p>\n<p>            temp = NULL;</p>\n<p>            }</p>\n<p>            else</p>\n<p>                head = head-&gt;next;</p>\n<p>        }</p>\n<p>    }</p>\n<p>As head pointer is not required to change in this case it can be passed by value.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-32458">\r\n        <div id="dsq-comment-header-32458" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32458">\r\n                <span id="dsq-author-user-32458">Kunal Arora</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32458" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32458" class="dsq-comment-message"><p>We can even use hash table to delete duplicate entries in linked list..<br />\n1.) We will map every value of linked list to hash table.<br />\n2.) While mapping we can compare if the two values hash to same location in       hash table,then we get the address of the two values in linked list and delete one of them.<br />\n3.)Arrange pointers of the linked list .</p>\n<p>Advantage:if there are millions and more elements and few of them are duplicated then it is much optimized then above solution.<br />\nDisadvantage:extra space for hash table implementation<br />\n@GeeksforGeeks please correct me if i am wrong&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-34479">\r\n        <div id="dsq-comment-header-34479" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34479">\r\n                <span id="dsq-author-user-34479">Jonathan Chen</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34479" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34479" class="dsq-comment-message"><p>How is it more optimized? I don&#8217;t think it is. </p>\n<p>The original strategy traverses the list only once. In order to remove duplicates in general, you have to look at every item at least once. </p>\n<p>Your strategy goes through every element once as well. However, the downside is that you also use an auxiliary hashtable which is worse in terms of space complexity.</p>\n<p>If there are millions more elements, your strategy has to traverse through every single one of them, just like the above approach does.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-34549">\r\n        <div id="dsq-comment-header-34549" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34549">\r\n                <span id="dsq-author-user-34549">danny</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34549" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34549" class="dsq-comment-message"><p>Yes, you are write It is not much optimized then above algorithm but it&#8217;s another way of doing it and I even mentioned this disadvantage in my post&#8230;. but it can come in handy when linked list is not sorted .</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-32290">\r\n        <div id="dsq-comment-header-32290" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32290">\r\n                <span id="dsq-author-user-32290">Himanshu Dagar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32290" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32290" class="dsq-comment-message"><p>can refer to the below code also</p>\n<p><a href="http://ideone.com/BOzFhK" rel="nofollow">http://ideone.com/BOzFhK</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-30889">\r\n        <div id="dsq-comment-header-30889" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30889">\r\n                <span id="dsq-author-user-30889">setu</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30889" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30889" class="dsq-comment-message"><p>If there are millions of data in it and one number is duplicate somewhere in middle then how we will traverse it one by one then would take lot of time while compilation. please provide a solution for it</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29884">\r\n        <div id="dsq-comment-header-29884" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29884">\r\n                <span id="dsq-author-user-29884">neo</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29884" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29884" class="dsq-comment-message"><p>@GeeksforGeeks team the condition in the while statement should contain current!=null also because we are doing current=current-&gt;next in else part ,so if current is null then current-&gt;next in while condition will cause seg fault.please correct me if i am wrong</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-29912">\r\n        <div id="dsq-comment-header-29912" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29912">\r\n                <span id="dsq-author-user-29912">Jayanth</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29912" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29912" class="dsq-comment-message"><p>I dont think it is necessary as when &#8220;current-&gt;next&#8221; itself is not null current cannot be null&#8230;So i dont think that check is necessary&#8230;in fact that check is implied&#8230;can u post some test cases where it might fail&#8230;may be i am not seeing something u hav&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-2" id="dsq-comment-29913">\r\n        <div id="dsq-comment-header-29913" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29913">\r\n                <span id="dsq-author-user-29913">Jayanth</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29913" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29913" class="dsq-comment-message"><p>I dont think it is necessary as when &#8220;current-&gt;next&#8221; itself is not null current cannot be null&#8230;So i dont think that check is necessary&#8230;in fact that check is implied&#8230;can u post some test cases where it might fail&#8230;may be i am not seeing something u hav&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-27723">\r\n        <div id="dsq-comment-header-27723" class="dsq-comment-header">\r\n            <cite id="dsq-cite-27723">\r\n                <span id="dsq-author-user-27723">ankit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-27723" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-27723" class="dsq-comment-message"><p><code></p>\n<p>struct treeNode * removeDuplicateFrmOrderedLinkList(struct  treeNode* root)<br />\n{<br />\n    struct treeNode *next=root;<br />\n    struct treeNode *prev=NULL;</p>\n<p>    while(next!=NULL)<br />\n    {<br />\n        prev=next;<br />\n        next=next-&gt;next;</p>\n<p>        while(next!=NULL &amp;&amp; next-&gt;val==prev-&gt;val)<br />\n        {<br />\n            struct treeNode *current=next;<br />\n            next=next-&gt;next;<br />\n            free(current);<br />\n        }<br />\n        prev-&gt;next=next;<br />\n    }</p>\n<p>    return root;</p>\n<p>}</p>\n<p></code></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-21707">\r\n        <div id="dsq-comment-header-21707" class="dsq-comment-header">\r\n            <cite id="dsq-cite-21707">\r\n                <span id="dsq-author-user-21707">Adarsh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-21707" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-21707" class="dsq-comment-message"><pre> <code language="C">\n#include &lt;stdio.h&gt;\n#include &lt;string.h&gt;\n\ntypedef struct node\n{\n    int data;\n    struct node *next;\n}node;\n\n\nvoid insert(node **head_ref, int val)\n{\n    node *curr;\n    node *temp;\n    temp = (node *)malloc(sizeof(node));\n    temp-&gt;data = val;\n    temp-&gt;next = NULL;\n    curr = *head_ref;\n    if (curr == NULL)\n    {\n        *head_ref = temp;\n        return;\n    }\n    else\n    {\n        while(curr-&gt;next != NULL)\n        {\n            curr = curr-&gt;next;\n        }\n        curr-&gt;next = temp;\n        return;\n    }\n\n}\n\n\nvoid display(node **head_ref)\n{\n    node *temp = NULL;\n    temp = *head_ref;\n    if(temp == NULL)\n    {\n        printf(&quot;Sorry list is empty&quot;);\n        return;\n    }\n    else\n    {\n        while(temp != NULL)\n        {\n            printf(&quot;The value is: %d\\n&quot;,temp-&gt;data);\n            temp = temp-&gt;next;\n        }\n    return;\n    }\n}\n\n\nint hashtab(int *hash_ref,int val)\n{\n    int key;\n    key = val%7;\n    if(hash_ref[key] == 0)\n    {\n        hash_ref[key] = val;\n        return 0;\n    }\n    else\n    {\n        while(hash_ref[key] != 0)\n        {\n            if(hash_ref[key] == val)\n                return 1;\n            if(hash_ref[key] == 0)\n                hash_ref[key] = val;\n            key = key+1;\n            return 0;\n        }\n    }\n}\nvoid remrep(node **head_ref)\n{\n    node *temp = *head_ref;\n    node *prev = *head_ref;\n    int ret;\n    int i,j;\n    int hash[10];\n    for(i = 0;i &lt;10; i++)\n    {\n        hash[i] = 0;   \n    }\n    for(i = 0;i &lt;10; i++)\n    {\n        \n            printf(&quot;the hash is:%d.\\n&quot;,hash[i]);\n    }\n    if(NULL == temp)\n    {\n        printf(&quot;The list is empty.\\n&quot;);\n        return;\n    }\n    else\n    {\n        while(temp!=NULL)\n        {\n            ret = hashtab(hash,temp-&gt;data);\n            if(ret == 1)\n            {\n                printf(&quot;Repeat is occur.\\n&quot;);\n                prev-&gt;next = temp-&gt;next;\n                if(temp-&gt;next != NULL)\n                    temp = temp-&gt;next;\n            }\n            printf(&quot;What.\\n&quot;);\n            prev = temp;\n            temp= temp-&gt;next;\n            //printf(&quot;What.\\n&quot;);\n        }\n        printf(&quot;In the else.\\n&quot;);\n    }\n    return;\n\n}\n\n\n\nmain()\n{\n    node *head = NULL;\n    insert(&amp;head, 1);\n    insert(&amp;head, 4);\n    insert(&amp;head, 1);\n    insert(&amp;head, 12);\n    insert(&amp;head, 1);\n    display(&amp;head);\n    remrep(&amp;head);\n    display(&amp;head);\n\n}\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-ultimate_coder even thread-even depth-1" id="dsq-comment-19183">\r\n        <div id="dsq-comment-header-19183" class="dsq-comment-header">\r\n            <cite id="dsq-cite-19183">\r\n                <span id="dsq-author-user-19183">ultimate_coder</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-19183" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-19183" class="dsq-comment-message"><pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-19230">\r\n        <div id="dsq-comment-header-19230" class="dsq-comment-header">\r\n            <cite id="dsq-cite-19230">\r\n                <span id="dsq-author-user-19230">trilok</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-19230" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-19230" class="dsq-comment-message"><p>/* The function removes duplicates from a sorted list */<br />\nvoid removeDuplicates(struct node* head)<br />\n{<br />\n  /* Pointer to traverse the linked list */<br />\n  struct node* current = head;</p>\n<p>  /* Pointer to store the next pointer of a node to be deleted*/<br />\n  struct node* dup_node;</p>\n<p>  /* do nothing if the list is empty */<br />\n  if(current == NULL)<br />\n     return;</p>\n<p>  /* Traverse the list till last node */<br />\n  while(current-&gt;next != NULL)<br />\n  {<br />\n   /* Compare current node with next node till duplicates exist*/<br />\n    while( (current-&gt;next != NULL) &amp;&amp; (current-&gt;data == current-&gt;next-&gt;data) )<br />\n    {<br />\n       /*The sequence of steps is important*/<br />\n      dup_node = current-&gt;next;<br />\n      current-&gt;next = dup_node-&gt;next;<br />\n      free(dup_node);<br />\n    }<br />\n   current = current-&gt;next;<br />\n  }<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-18562">\r\n        <div id="dsq-comment-header-18562" class="dsq-comment-header">\r\n            <cite id="dsq-cite-18562">\r\n                <span id="dsq-author-user-18562">Ujjwal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-18562" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-18562" class="dsq-comment-message"><p>How about using 2 pointers to solve this..!!<br />\n-Both point to head initially.<br />\n-Advance 2nd pointer, if same data, go on advancing 2nd pointer until we get node with different data. Once we get that node, make 1st_node-&gt;next = 2nd_node;<br />\n1st_node = 2nd_node;</p>\n<p>Repeat this till we reach the end of the list..<br />\nCorrect me if i m wrong.. <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-22030">\r\n        <div id="dsq-comment-header-22030" class="dsq-comment-header">\r\n            <cite id="dsq-cite-22030">\r\nhttp://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/                <span id="dsq-author-user-22030">Deepak</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-22030" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-22030" class="dsq-comment-message"><p>Your code will remove duplicate nodes but it has wastage of space because you didn&#8217;t free those nodes which have duplicate values.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-17329">\r\n        <div id="dsq-comment-header-17329" class="dsq-comment-header">\r\n            <cite id="dsq-cite-17329">\r\n                <span id="dsq-author-user-17329">Pranav</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-17329" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-17329" class="dsq-comment-message"><pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\nvoid removeDuplicates(struct node* head)\n{\n  /* Pointer to traverse the linked list */\n  struct node* p = head;\n  struct node* t=NULL;\n  while(p)\n  {\n     t=p;\n     if(!p-&gt;next)\n        return;\n     p=p-&gt;next;\n     if( t-&gt;data == p-&gt;data )\n     {\n        t-&gt;next = p-&gt;next;\n        free(p);\n        p=t;\n     }\n  }\n}\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-15266">\r\n        <div id="dsq-comment-header-15266" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15266">\r\nhttp://mystuffs.co.nr                <span id="dsq-author-user-15266">Sunny</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15266" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15266" class="dsq-comment-message"><p>Similar code,but instead of next used prev.</p>\n<p>#include &lt;iostream&gt;<br />\n#include &lt;stdlib.h&gt;<br />\nusing namespace  std;</p>\n<p>typedef struct link<br />\n{<br />\n\tint x;<br />\n\tstruct link* next;<br />\n}node;</p>\n<p>node* head;<br />\nvoid add(int a)<br />\n{<br />\n\tnode* temp=new node;//(node*)malloc(sizeof(node));<br />\ntemp-&gt;x=a;<br />\ntemp-&gt;next=head;<br />\nhead=temp;<br />\n}</p>\n<p>void end(int a)<br />\n{<br />\nnode* cur,*temp;<br />\n//node*<br />\ntemp=new node;//(node*)malloc(sizeof(node));<br />\ntemp-&gt;x=a;<br />\ntemp-&gt;next=0;</p>\n<p>cur=head;<br />\nif(head==0)<br />\n{<br />\nhead=temp;<br />\nreturn;<br />\n}<br />\nwhile(cur-&gt;next!=0)<br />\n{cur=cur-&gt;next;}</p>\n<p>cur-&gt;next=temp;<br />\n}</p>\n<p>void display()<br />\n{<br />\n\tnode* cur;<br />\n\tcur=head;<br />\ncout&lt;&lt;endl;<br />\n\twhile(cur!=0)<br />\n\t{<br />\n\t\tcout&lt;&lt;cur-&gt;x&lt;&lt;&quot; &quot;;<br />\n\t\tcur=cur-&gt;next;<br />\n\t}<br />\n}</p>\n<p>void del(int a)<br />\n{<br />\nnode * cur,*prev;<br />\ncur=prev=head;</p>\n<p>while(cur!=0)<br />\n{<br />\nif(cur-&gt;x==a)<br />\n{</p>\n<p>if(cur==head)<br />\n{head=cur-&gt;next;<br />\ndelete cur; //free(cur);<br />\nreturn;<br />\n}</p>\n<p>else if(cur-&gt;next==0)<br />\n{<br />\nprev-&gt;next=0;<br />\ndelete cur;//free(cur);<br />\nreturn;<br />\n}</p>\n<p>prev-&gt;next=cur-&gt;next;<br />\nbreak;<br />\n}<br />\nprev=cur;<br />\ncur=cur-&gt;next;<br />\n}</p>\n<p>delete cur;//free(cur);<br />\n}</p>\n<p>void dup()<br />\n{<br />\nnode *cur,*prev;<br />\nprev=cur=head;<br />\nwhile(cur!=0)<br />\n{<br />\nif(prev-&gt;x==cur-&gt;x)<br />\ndel(cur-&gt;x);<br />\nprev=cur;<br />\ncur=cur-&gt;next;<br />\n}</p>\n<p>}</p>\n<p>int main()<br />\n{</p>\n<p>/*int n,ch;<br />\ndo<br />\n{<br />\ncout&lt;&lt;&quot;ADD infront(1)/ADD end(2)::&quot;;<br />\ncin&gt;&gt;ch;<br />\nif(ch!=1 &amp;&amp; ch!=2) {cout&lt;&lt;&quot;bye bye!&quot;&lt;&lt;endl;break;}<br />\ncout&lt;&lt;&quot;enter data(in sorted format)::&quot;;<br />\ncin&gt;&gt;n;<br />\nif(ch==1) add(n);<br />\nelse if(ch==2) end(n);</p>\n<p>}while(true);<br />\n*/<br />\nend(11);<br />\nend(11);<br />\nend(11);<br />\nend(21);<br />\nend(43);<br />\nend(43);<br />\nend(60);</p>\n<p>display();<br />\ndup();<br />\ndisplay();</p>\n<p>return 0;<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-9955">\r\n        <div id="dsq-comment-header-9955" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9955">\r\n                <span id="dsq-author-user-9955">Kunaal Ahuja</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9955" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9955" class="dsq-comment-message"><p>This code removes duplicates only if they occur in succession.Otherwise it won&#8217;t work.</p>\n<p>for eg.<br />\n12 2 7 9 12 2 9<br />\nfor these set of inputs the code won&#8217;t work</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-13683">\r\n        <div id="dsq-comment-header-13683" class="dsq-comment-header">\r\n            <cite id="dsq-cite-13683">\r\n                <span id="dsq-author-user-13683">hARRY</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-13683" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-13683" class="dsq-comment-message"><p>Hello read the problem statement carefully!!</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-6458">\r\n        <div id="dsq-comment-header-6458" class="dsq-comment-header">\r\n            <cite id="dsq-cite-6458">\r\n                <span id="dsq-author-user-6458">Tim</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-6458" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-6458" class="dsq-comment-message"><pre> <code language="C">\nint RemoveDuplicates(linklist l){ //array as a helper to store the pointers\n     linklist p = l-&gt;next;\n     linklist a[100] = {0};\n     a[0] = p;\n     int i = 0;\n     int j = 0;\n     \n     while(p != NULL){\n           p = p-&gt;next;\n           if (p == NULL) break;\n           \n           while(j &gt;0 || j == 0 ){\n                 if(p-&gt;data == a[j]-&gt;data)\n                    break;\n                 j--;\n           }\n           \n           if (j &lt; 0){ \n              i++;\n              a[i] = p;\n           }\n           \n           j = i;\n     }\n     \n     i = 0;\n\n     while (a[i] != 0){\n           a[i]-&gt;next = a[i+1];\n           ++i;\n     }\n     \n     l-&gt;next = a[0];\n     return 0;\n\n}</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-4086">\r\n        <div id="dsq-comment-header-4086" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4086">\r\n                <span id="dsq-author-user-4086">sourabhjakhar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4086" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4086" class="dsq-comment-message"><p>this code do not remove the dulpicat if present in the last node</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-shekhu even thread-odd thread-alt depth-1" id="dsq-comment-1347">\r\n        <div id="dsq-comment-header-1347" class="dsq-comment-header">\r\n            <cite id="dsq-cite-1347">\r\n                <span id="dsq-author-user-1347">Shekhu</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-1347" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-1347" class="dsq-comment-message"><p>Java code:</p>\n<p>public class ListNode<br />\n{<br />\n   int data;<br />\n   ListNode next;<br />\n}</p>\n<p>public removeDuplicatesSorted( ListNode p )<br />\n{<br />\n  while( p != null )<br />\n  {<br />\n     while( p.next != null &amp;&amp; p.data == p.next.data )<br />\n        p.next = p.next.next;<br />\n     p = p.next;<br />\n  }<br />\n  // this pair of loops is linear: in each while loop iteration we either<br />\n  // (a) delete a node or (b) move to the next node.<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/remove-duplicates-from-a-sorted-linked-list/\';\r\nvar disqus_identifier = \'5075 http://geeksforgeeks.org/?p=5075\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Remove duplicates from a sorted linked list";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(403)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(80)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,050)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(13)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.941176470588pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.838235294118pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.661764705882pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'253 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.470588235294pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.220588235294pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 17.058823529412pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.485294117647pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.367647058824pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.352941176471pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.382352941176pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.382352941176pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'61 topics\' style=\'font-size: 15.720588235294pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.544117647059pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.676470588235pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.676470588235pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.705882352941pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 12.014705882353pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.5pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9558823529412pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.321 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-02-29 04:53:21 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p197
sb.