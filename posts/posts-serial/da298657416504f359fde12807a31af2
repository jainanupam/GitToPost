ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/MapColoring'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/MapColoring.java'
p11
atp12
Rp13
sS'title'
p14
VBacktracking | Set 5 (m Coloring Problem)
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(g22
g2
Ntp44
Rp45
(dp46
g26
I00
sg27
g0
(cbs4.element
NavigableString
p47
c__builtin__
unicode
p48
VGiven an undirected graph and a number m, determine if the graph can be colored with at most m colors such that no two adjacent vertices of the graph are colored with same color. Here coloring of a graph means assignment of colors to all vertices. 
p49
tp50
Rp51
(dp52
g34
Nsg27
g39
sg28
g45
sg37
g45
sg31
g39
sbsg28
Nsg29
Vspan
p53
sg31
g39
sg32
Nsg33
Nsg34
g51
sg35
(dp54
Vid
p55
Vmore-19042
p56
ssg37
g42
sS'parser_class'
p57
cbs4
BeautifulSoup
p58
sS'hidden'
p59
I00
sS'contents'
p60
(lp61
sbsg28
g0
(g22
g2
Ntp62
Rp63
(dp64
g26
I00
sg27
g0
(g47
g48
V\u000a2) An integer m which is maximum number of colors that can be used.
p65
tp66
Rp67
(dp68
g34
g0
(g22
g2
Ntp69
Rp70
(dp71
g26
I01
sg27
g0
(g47
g48
V\u000a1) A 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.
p72
tp73
Rp74
(dp75
g34
g0
(g22
g2
Ntp76
Rp77
(dp78
g26
I01
sg27
g0
(g47
g48
VInput:
p79
tp80
Rp81
(dp82
g34
Nsg27
g0
(g22
g2
Ntp83
Rp84
(dp85
g26
I00
sg27
g42
sg28
g77
sg29
Vem
p86
sg31
g42
sg32
Nsg33
Nsg34
Nsg35
(dp87
sg37
g81
sg57
g58
sg59
I00
sg60
(lp88
g81
asbsg28
Nsg37
g77
sg31
g84
sbsg28
g74
sg29
Vbr
p89
sg31
g42
sg32
Nsg33
Nsg34
g84
sg35
(dp90
sg37
g74
sg57
g58
sg59
I00
sg60
(lp91
sbsg27
g77
sg28
g70
sg37
g70
sg31
g42
sbsg28
g67
sg29
Vbr
p92
sg31
g42
sg32
Nsg33
Nsg34
g74
sg35
(dp93
sg37
g67
sg57
g58
sg59
I00
sg60
(lp94
sbsg27
g70
sg28
Nsg37
g63
sg31
g42
sbsg28
g0
(g22
g2
Ntp95
Rp96
(dp97
g26
I00
sg27
g0
(g47
g48
V\u000aAn array color[V] that should have numbers from 1 to m. color[i] should represent the color assigned to the ith vertex. The code should also return false if the graph cannot be colored with m colors.
p98
tp99
Rp100
(dp101
g34
g0
(g22
g2
Ntp102
Rp103
(dp104
g26
I01
sg27
g0
(g47
g48
VOutput:
p105
tp106
Rp107
(dp108
g34
Nsg27
g0
(g22
g2
Ntp109
Rp110
(dp111
g26
I00
sg27
g63
sg28
g103
sg29
Vem
p112
sg31
g63
sg32
Nsg33
Nsg34
Nsg35
(dp113
sg37
g107
sg57
g58
sg59
I00
sg60
(lp114
g107
asbsg28
Nsg37
g103
sg31
g110
sbsg28
g100
sg29
Vbr
p115
sg31
g63
sg32
Nsg33
Nsg34
g110
sg35
(dp116
sg37
g100
sg57
g58
sg59
I00
sg60
(lp117
sbsg27
g103
sg28
Nsg37
g96
sg31
g63
sbsg28
g0
(g22
g2
Ntp118
Rp119
(dp120
g26
I00
sg27
g0
(g22
g2
Ntp121
Rp122
(dp123
g26
I01
sg27
g0
(g22
g2
Ntp124
Rp125
(dp126
g26
I00
sg27
g0
(g47
g48
V\u000a
p127
tp128
Rp129
(dp130
g34
g0
(g22
g2
Ntp131
Rp132
(dp133
g26
I01
sg27
g0
(g47
g48
V) that can be colored with 3 colors.
p134
tp135
Rp136
(dp137
g34
g0
(g22
g2
Ntp138
Rp139
(dp140
g26
I00
sg27
g0
(g47
g48
VFollowing is an example graph (from 
p141
tp142
Rp143
(dp144
g34
Nsg27
g96
sg28
g139
sg37
g139
sg31
g96
sbsg28
g136
sg29
Va
p145
sg31
g96
sg32
Nsg33
Nsg34
g143
sg35
(dp146
Vhref
p147
Vhttp://en.wikipedia.org/wiki/Graph_coloring
p148
ssg37
g0
(g47
g48
VWiki page 
p149
tp150
Rp151
(dp152
g34
Nsg27
g139
sg28
Nsg37
g136
sg31
g139
sbsg57
g58
sg59
I00
sg60
(lp153
g151
asbsg27
g151
sg28
g132
sg37
g132
sg31
g96
sbsg28
g129
sg29
Vbr
p154
sg31
g96
sg32
Nsg33
Nsg34
g136
sg35
(dp155
sg37
g129
sg57
g58
sg59
I00
sg60
(lp156
sbsg27
g132
sg28
g125
sg37
g125
sg31
g96
sbsg28
Nsg29
g145
sg31
g96
sg32
Nsg33
Nsg34
g129
sg35
(dp157
Vhref
p158
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/graph_col.png
p159
ssg37
g122
sg57
g58
sg59
I00
sg60
(lp160
g122
asbsg28
Nsg29
Vimg
p161
sg31
g125
sg32
Nsg33
Nsg34
Nsg35
(dp162
Vsrc
p163
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/graph_col.png
p164
sVtitle
p165
Vgraph_col
p166
sVheight
p167
V211
p168
sVwidth
p169
V220
p170
sValt
p171
V
p172
sVclass
p173
(lp174
Valigncenter
p175
aVsize-full
p176
aVwp-image-19049
p177
assg37
g119
sg57
g58
sg59
I00
sg60
(lp178
sbsg28
g0
(g22
g2
Ntp179
Rp180
(dp181
g26
I00
sg27
g0
(g47
g48
V\u000aGenerate all possible configurations of colors and print a configuration that satisfies the given constraints.
p182
tp183
Rp184
(dp185
g34
g0
(g22
g2
Ntp186
Rp187
(dp188
g26
I01
sg27
g0
(g47
g48
VNaive Algorithm
p189
tp190
Rp191
(dp192
g34
Nsg27
g0
(g22
g2
Ntp193
Rp194
(dp195
g26
I00
sg27
g119
sg28
g187
sg29
Vstrong
p196
sg31
g119
sg32
Nsg33
Nsg34
Nsg35
(dp197
sg37
g191
sg57
g58
sg59
I00
sg60
(lp198
g191
asbsg28
Nsg37
g187
sg31
g194
sbsg28
g184
sg29
Vbr
p199
sg31
g119
sg32
Nsg33
Nsg34
g194
sg35
(dp200
sg37
g184
sg57
g58
sg59
I00
sg60
(lp201
sbsg27
g187
sg28
Nsg37
g180
sg31
g119
sbsg28
g0
(g22
g2
Ntp202
Rp203
(dp204
g26
I00
sg27
g0
(g47
g48
V\u000awhile there are untried conflagrations\u000a{\u000a   generate the next configuration\u000a   if no adjacent vertices are colored with same color\u000a   {\u000a      print this configuration;\u000a   }\u000a}\u000a
p205
tp206
Rp207
(dp208
g34
Nsg27
g180
sg28
Nsg37
g203
sg31
g180
sbsg28
g0
(g22
g2
Ntp209
Rp210
(dp211
g26
I00
sg27
g0
(g47
g48
VThere will be V^m configurations of colors.
p212
tp213
Rp214
(dp215
g34
Nsg27
g203
sg28
Nsg37
g210
sg31
g203
sbsg28
g0
(g22
g2
Ntp216
Rp217
(dp218
g26
I00
sg27
g0
(g47
g48
V\u000aThe idea is to assign colors one by one to different vertices, starting from the vertex 0. Before assigning a color, we check for safety by considering already assigned colors to the adjacent vertices. If we find a color assignment which is safe, we mark the color assignment as part of solution. If we do not a find color due to clashes then we backtrack and return false.
p219
tp220
Rp221
(dp222
g34
g0
(g22
g2
Ntp223
Rp224
(dp225
g26
I01
sg27
g0
(g47
g48
VBacktracking Algorithm
p226
tp227
Rp228
(dp229
g34
Nsg27
g0
(g22
g2
Ntp230
Rp231
(dp232
g26
I00
sg27
g210
sg28
g224
sg29
Vstrong
p233
sg31
g210
sg32
Nsg33
Nsg34
Nsg35
(dp234
sg37
g228
sg57
g58
sg59
I00
sg60
(lp235
g228
asbsg28
Nsg37
g224
sg31
g231
sbsg28
g221
sg29
Vbr
p236
sg31
g210
sg32
Nsg33
Nsg34
g231
sg35
(dp237
sg37
g221
sg57
g58
sg59
I00
sg60
(lp238
sbsg27
g224
sg28
Nsg37
g217
sg31
g210
sbsg28
Nsg29
Vp
p239
sg31
g24
sg32
Nsg33
Nsg34
g210
sg35
(dp240
sg37
g0
(g22
g2
Ntp241
Rp242
(dp243
g26
I00
sg27
g217
sg28
g0
(g22
g2
Ntp244
Rp245
(dp246
g26
I01
sg27
g0
(g47
g48
VImplementation of Backtracking solution
p247
tp248
Rp249
(dp250
g34
Nsg27
g242
sg28
Nsg37
g245
sg31
g242
sbsg28
g0
(g47
g48
V\u000a
p251
tp252
Rp253
(dp254
g34
g245
sg27
g245
sg28
g0
(g22
g2
Ntp255
Rp256
(dp257
g26
I00
sg27
g253
sg28
Nsg29
Vdiv
p258
sg31
g217
sg32
Nsg33
Nsg34
g253
sg35
(dp259
Vclass
p260
(lp261
Vresponsive-tabs
p262
assg37
g0
(g47
g48
V\u000a
p263
tp264
Rp265
(dp266
g34
Nsg27
g256
sg28
g0
(g22
g2
Ntp267
Rp268
(dp269
g26
I00
sg27
g265
sg28
g0
(g47
g48
V\u000a
p270
tp271
Rp272
(dp273
g34
g268
sg27
g0
(g47
g48
VC/C++
p274
tp275
Rp276
(dp277
g34
Nsg27
g268
sg28
Nsg37
g272
sg31
g268
sbsg28
g0
(g22
g2
Ntp278
Rp279
(dp280
g26
I00
sg27
g272
sg28
Nsg29
Vdiv
p281
sg31
g256
sg32
Nsg33
Nsg34
g272
sg35
(dp282
Vclass
p283
(lp284
Vtabcontent
p285
assg37
g0
(g47
g48
V\u000a
p286
tp287
Rp288
(dp289
g34
Nsg27
g279
sg28
Nsg37
Nsg31
g279
sbsg57
g58
sg59
I00
sg60
(lp290
g288
asbsg37
g279
sg31
g256
sbsg29
Vh2
p291
sg31
g256
sg32
Nsg33
Nsg34
g265
sg35
(dp292
Vclass
p293
(lp294
Vtabtitle
p295
assg37
g276
sg57
g58
sg59
I00
sg60
(lp296
g276
asbsg37
g268
sg31
g256
sbsg57
g58
sg59
I00
sg60
(lp297
g265
ag268
ag272
ag279
asbsg37
g256
sg31
g217
sbsg29
Vbr
p298
sg31
g217
sg32
Nsg33
Nsg34
g242
sg35
(dp299
sg37
g253
sg57
g58
sg59
I00
sg60
(lp300
sbsg29
Vstrong
p301
sg31
g217
sg32
Nsg33
Nsg34
Nsg35
(dp302
sg37
g249
sg57
g58
sg59
I00
sg60
(lp303
g249
asbsg57
g58
sg59
I00
sg60
(lp304
g242
ag245
ag253
ag256
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g203
sg35
(dp305
sg37
g231
sg57
g58
sg59
I00
sg60
(lp306
g231
ag224
ag221
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g180
sg35
(dp307
sg37
g214
sg57
g58
sg59
I00
sg60
(lp308
g214
asbsg29
Vpre
p309
sg31
g24
sg32
Nsg33
Nsg34
g119
sg35
(dp310
sg37
g207
sg57
g58
sg59
I00
sg60
(lp311
g207
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g96
sg35
(dp312
sg37
g194
sg57
g58
sg59
I00
sg60
(lp313
g194
ag187
ag184
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g63
sg35
(dp314
sg37
g143
sg57
g58
sg59
I00
sg60
(lp315
g143
ag139
ag136
ag132
ag129
ag125
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp316
sg37
g110
sg57
g58
sg59
I00
sg60
(lp317
g110
ag103
ag100
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp318
sg37
g84
sg57
g58
sg59
I00
sg60
(lp319
g84
ag77
ag74
ag70
ag67
asbsg29
g239
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp320
sg37
g51
sg57
g58
sg59
I00
sg60
(lp321
g51
ag45
asbsg57
Nsg59
I00
sg60
(lp322
g39
ag42
ag63
ag96
ag119
ag180
ag203
ag210
ag217
asbsS'raw_page'
p323
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Backtracking | Set 5 (m Coloring Problem) - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Backtracking | Set 5 (m Coloring Problem) - GeeksforGeeks" />\n<meta property="og:description" content="Given an undirected graph and a number m, determine if the graph can be colored with at most m colors such that no two adjacent vertices of the graph are colored with same color. Here coloring of a graph means assignment of colors to all vertices. Input: 1) A 2D array graph[V][V] where V is\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Backtracking" />\n<meta property="article:section" content="Backtracking" />\n<meta property="article:published_time" content="2012-05-01T15:01:57+00:00" />\n<meta property="article:modified_time" content="2015-10-29T21:41:17+00:00" />\n<meta property="og:updated_time" content="2015-10-29T21:41:17+00:00" />\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/graph_col.png" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-19042 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-19042" class="post-19042 post type-post status-publish format-standard hentry category-backtracking tag-backtracking">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Backtracking | Set 5 (m Coloring Problem)</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Given an undirected graph and a number m, determine if the graph can be colored with at most m colors such that no two adjacent vertices of the graph are colored with same color. Here coloring of a graph means assignment of colors to all vertices. <span id="more-19042"></span></p>\n<p><em>Input:</em><br />\n1) A 2D array graph[V][V] where V is the number of vertices in graph and graph[V][V] is adjacency matrix representation of the graph. A value graph[i][j] is 1 if there is a direct edge from i to j, otherwise graph[i][j] is 0.<br />\n2) An integer m which is maximum number of colors that can be used.</p>\n<p><em>Output:</em><br />\nAn array color[V] that should have numbers from 1 to m. color[i] should represent the color assigned to the ith vertex. The code should also return false if the graph cannot be colored with m colors.</p>\n<p>Following is an example graph (from <a href="http://en.wikipedia.org/wiki/Graph_coloring">Wiki page </a>) that can be colored with 3 colors.<br />\n<a href="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/graph_col.png"><img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/graph_col.png" alt="" title="graph_col" width="220" height="211" class="aligncenter size-full wp-image-19049" /></a></p>\n<p><strong>Naive Algorithm</strong><br />\nGenerate all possible configurations of colors and print a configuration that satisfies the given constraints.</p>\n<pre>\r\nwhile there are untried conflagrations\r\n{\r\n   generate the next configuration\r\n   if no adjacent vertices are colored with same color\r\n   {\r\n      print this configuration;\r\n   }\r\n}\r\n</pre>\n<p>There will be V^m configurations of colors.</p>\n<p><strong>Backtracking Algorithm</strong><br />\nThe idea is to assign colors one by one to different vertices, starting from the vertex 0. Before assigning a color, we check for safety by considering already assigned colors to the adjacent vertices. If we find a color assignment which is safe, we mark the color assignment as part of solution. If we do not a find color due to clashes then we backtrack and return false.</p>\n<p><strong>Implementation of Backtracking solution</strong><br />\n<div class="responsive-tabs">\n<h2 class="tabtitle">C/C++</h2>\n<div class="tabcontent">\n</p>\n<pre class="brush: cpp; highlight: [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72]; title: ; notranslate" title="">\r\n#include&lt;stdio.h&gt;\r\n\r\n// Number of vertices in the graph\r\n#define V 4\r\n\r\nvoid printSolution(int color[]);\r\n\r\n/* A utility function to check if the current color assignment\r\n   is safe for vertex v */\r\nbool isSafe (int v, bool graph[V][V], int color[], int c)\r\n{\r\n    for (int i = 0; i &lt; V; i++)\r\n        if (graph[v][i] &amp;&amp; c == color[i])\r\n            return false;\r\n    return true;\r\n}\r\n\r\n/* A recursive utility function to solve m coloring problem */\r\nbool graphColoringUtil(bool graph[V][V], int m, int color[], int v)\r\n{\r\n    /* base case: If all vertices are assigned a color then\r\n       return true */\r\n    if (v == V)\r\n        return true;\r\n\r\n    /* Consider this vertex v and try different colors */\r\n    for (int c = 1; c &lt;= m; c++)\r\n    {\r\n        /* Check if assignment of color c to v is fine*/\r\n        if (isSafe(v, graph, color, c))\r\n        {\r\n           color[v] = c;\r\n\r\n           /* recur to assign colors to rest of the vertices */\r\n           if (graphColoringUtil (graph, m, color, v+1) == true)\r\n             return true;\r\n\r\n            /* If assigning color c doesn\'t lead to a solution\r\n               then remove it */\r\n           color[v] = 0;\r\n        }\r\n    }\r\n\r\n    /* If no color can be assigned to this vertex then return false */\r\n    return false;\r\n}\r\n\r\n/* This function solves the m Coloring problem using Backtracking.\r\n  It mainly uses graphColoringUtil() to solve the problem. It returns\r\n  false if the m colors cannot be assigned, otherwise return true and\r\n  prints assignments of colors to all vertices. Please note that there\r\n  may be more than one solutions, this function prints one of the\r\n  feasible solutions.*/\r\nbool graphColoring(bool graph[V][V], int m)\r\n{\r\n    // Initialize all color values as 0. This initialization is needed\r\n    // correct functioning of isSafe()\r\n    int *color = new int[V];\r\n    for (int i = 0; i &lt; V; i++)\r\n       color[i] = 0;\r\n\r\n    // Call graphColoringUtil() for vertex 0\r\n    if (graphColoringUtil(graph, m, color, 0) == false)\r\n    {\r\n      printf(&quot;Solution does not exist&quot;);\r\n      return false;\r\n    }\r\n\r\n    // Print the solution\r\n    printSolution(color);\r\n    return true;\r\n}\r\n\r\n/* A utility function to print solution */\r\nvoid printSolution(int color[])\r\n{\r\n    printf(&quot;Solution Exists:&quot;\r\n            &quot; Following are the assigned colors \\n&quot;);\r\n    for (int i = 0; i &lt; V; i++)\r\n      printf(&quot; %d &quot;, color[i]);\r\n    printf(&quot;\\n&quot;);\r\n}\r\n\r\n// driver program to test above function\r\nint main()\r\n{\r\n    /* Create following graph and test whether it is 3 colorable\r\n      (3)---(2)\r\n       |   / |\r\n       |  /  |\r\n       | /   |\r\n      (0)---(1)\r\n    */\r\n    bool graph[V][V] = {{0, 1, 1, 1},\r\n        {1, 0, 1, 0},\r\n        {1, 1, 0, 1},\r\n        {1, 0, 1, 0},\r\n    };\r\n    int m = 3; // Number of colors\r\n    graphColoring (graph, m);\r\n    return 0;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Java</h2>\n<div class="tabcontent">\n\n<pre class="brush: java; highlight: [18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82]; title: ; notranslate" title="">\r\n/* Java program for solution of M Coloring problem\r\n   using backtracking */\r\npublic class mColoringProblem {\r\n    final int V = 4;\r\n    int color[];\r\n\r\n    /* A utility function to check if the current\r\n       color assignment is safe for vertex v */\r\n    boolean isSafe(int v, int graph[][], int color[],\r\n                   int c)\r\n    {\r\n        for (int i = 0; i &lt; V; i++)\r\n            if (graph[v][i] == 1 &amp;&amp; c == color[i])\r\n                return false;\r\n        return true;\r\n    }\r\n\r\n    /* A recursive utility function to solve m\r\n       coloring  problem */\r\n    boolean graphColoringUtil(int graph[][], int m,\r\n                              int color[], int v)\r\n    {\r\n        /* base case: If all vertices are assigned\r\n           a color then return true */\r\n        if (v == V)\r\n            return true;\r\n\r\n        /* Consider this vertex v and try different\r\n           colors */\r\n        for (int c = 1; c &lt;= m; c++)\r\n        {\r\n            /* Check if assignment of color c to v\r\n               is fine*/\r\n            if (isSafe(v, graph, color, c))\r\n            {\r\n                color[v] = c;\r\n\r\n                /* recur to assign colors to rest\r\n                   of the vertices */\r\n                if (graphColoringUtil(graph, m,\r\n                                      color, v + 1))\r\n                    return true;\r\n\r\n                /* If assigning color c doesn\'t lead\r\n                   to a solution then remove it */\r\n                color[v] = 0;\r\n            }\r\n        }\r\n\r\n        /* If no color can be assigned to this vertex\r\n           then return false */\r\n        return false;\r\n    }\r\n\r\n    /* This function solves the m Coloring problem using\r\n       Backtracking. It mainly uses graphColoringUtil()\r\n       to solve the problem. It returns false if the m\r\n       colors cannot be assigned, otherwise return true\r\n       and  prints assignments of colors to all vertices.\r\n       Please note that there  may be more than one\r\n       solutions, this function prints one of the\r\n       feasible solutions.*/\r\n    boolean graphColoring(int graph[][], int m)\r\n    {\r\n        // Initialize all color values as 0. This\r\n        // initialization is needed correct functioning\r\n        // of isSafe()\r\n        color = new int[V];\r\n        for (int i = 0; i &lt; V; i++)\r\n            color[i] = 0;\r\n\r\n        // Call graphColoringUtil() for vertex 0\r\n        if (!graphColoringUtil(graph, m, color, 0))\r\n        {\r\n            System.out.println(&quot;Solution does not exist&quot;);\r\n            return false;\r\n        }\r\n\r\n        // Print the solution\r\n        printSolution(color);\r\n        return true;\r\n    }\r\n\r\n    /* A utility function to print solution */\r\n    void printSolution(int color[])\r\n    {\r\n        System.out.println(&quot;Solution Exists: Following&quot; +\r\n                           &quot; are the assigned colors&quot;);\r\n        for (int i = 0; i &lt; V; i++)\r\n            System.out.print(&quot; &quot; + color[i] + &quot; &quot;);\r\n        System.out.println();\r\n    }\r\n\r\n    // driver program to test above function\r\n    public static void main(String args[])\r\n    {\r\n        mColoringProblem Coloring = new mColoringProblem();\r\n        /* Create following graph and test whether it is\r\n           3 colorable\r\n          (3)---(2)\r\n           |   / |\r\n           |  /  |\r\n           | /   |\r\n          (0)---(1)\r\n        */\r\n        int graph[][] = {{0, 1, 1, 1},\r\n            {1, 0, 1, 0},\r\n            {1, 1, 0, 1},\r\n            {1, 0, 1, 0},\r\n        };\r\n        int m = 3; // Number of colors\r\n        Coloring.graphColoring(graph, m);\r\n    }\r\n}\r\n// This code is contributed by Abhishek Shankhadhar\r\n</pre>\n<p></div></div><br />\nOutput:\n<pre>\r\nSolution Exists: Following are the assigned colors\r\n 1  2  3  2\r\n</pre>\n<p><strong>References:</strong><br />\n<a href="http://en.wikipedia.org/wiki/Graph_coloring">http://en.wikipedia.org/wiki/Graph_coloring</a></p>\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="19042 http://www.geeksforgeeks.org/?p=19042">12 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/backtracking/" rel="category tag">Backtracking</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/backtracking/" rel="tag">Backtracking</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/fill-two-instances-numbers-1-n-specific-way/" title="Fill two instances of all numbers from 1 to n in a specific way">Fill two instances of all numbers from 1 to n in a specific way</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-8-solving-cryptarithmetic-puzzles/" title="Backtracking | Set 8 (Solving Cryptarithmetic Puzzles)">Backtracking | Set 8 (Solving Cryptarithmetic Puzzles)</a></li><li><a href="http://www.geeksforgeeks.org/print-all-possible-paths-from-top-left-to-bottom-right-of-a-mxn-matrix/" title="Print all possible paths from top left to bottom right of a mXn matrix">Print all possible paths from top left to bottom right of a mXn matrix</a></li><li><a href="http://www.geeksforgeeks.org/tug-of-war/" title="Tug of War">Tug of War</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" title="Backtracking | Set 7 (Sudoku)">Backtracking | Set 7 (Sudoku)</a></li><li><a href="http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/" title="Backtracking | Set 4 (Subset Sum)">Backtracking | Set 4 (Subset Sum)</a></li><li><a href="http://www.geeksforgeeks.org/backtracking-set-3-n-queen-problem/" title="Backtracking | Set 3 (N Queen Problem)">Backtracking | Set 3 (N Queen Problem)</a></li><li><a href="http://www.geeksforgeeks.org/backttracking-set-2-rat-in-a-maze/" title="Backtracking | Set 2 (Rat in a Maze)">Backtracking | Set 2 (Rat in a Maze)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/backttracking-set-4-subset-sum/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/backtracking-set-7-suduku/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="19042" ptitle="Backtracking | Set 5 (m Coloring Problem)" id="ratePlugin"></div>\r\n<div pid="19042" ptitle="Backtracking | Set 5 (m Coloring Problem)" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-32375">\r\n        <div id="dsq-comment-header-32375" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32375">\r\n                <span id="dsq-author-user-32375">sr7</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32375" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32375" class="dsq-comment-message"><p>you can further bring down the complexity by avoiding the check for each color . Since the no of colors can go upto N and no of vertices is N .</p>\n<p>Checking for each color will take O(n^2) time . Instead </p>\n<p>I assume the base color (uncolored node) is -1 . Colors start from 0.</p>\n<p>I will check all the adjacent nodes of the given vertex in O(n) time .</p>\n<p>If  i th node is adjacent to vertex v and color[i]&gt;=0 (colored node) , then temp[color[i]] = 1 (temp[i]  if set , indicates that the color is in use by one of its adjacent nodes) , finally I will search the &#8216;temp&#8217; array starting from i =0,</p>\n<p>if temp[i]!=1, then that is the least color not used by any of the adjacent nodes, then color[v] is made i ; It takes O(n) on the whole, instead of O(n^2).</p>\n<p>            int temp[V];</p>\n<p>            //Initialize all temp values to zero</p>\n<p>for (i=0;i&lt;V;i++) temp[i] = 0;</p>\n<p>for (i=0;i=0) //Node i is adjacent and colored</p>\n<p>  temp[color[i]]=1;</p>\n<p> for (i=0; i&lt;m ; i++) { //Only 0 to m-1 colors are allowed</p>\n<p>    if (!temp[i]) {<br />\n   color[v] = i;<br />\n   if (graphColoringUtil(graph,m,color,v+1)) return true;</p>\n<p> color[v] = -1; // backtrack<br />\n}<br />\nreturn true;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-pavi-8081 odd alt thread-odd thread-alt depth-1" id="dsq-comment-22275">\r\n        <div id="dsq-comment-header-22275" class="dsq-comment-header">\r\n            <cite id="dsq-cite-22275">\r\n                <span id="dsq-author-user-22275">pavi.8081</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-22275" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-22275" class="dsq-comment-message"><p>Can we modify this algorithm to find the min. number of colors to color the graph nodes. I think we can but haven&#8217;t tried though.</p>\n<p>If we can do so then the modified algorithm can be used to solve problems like: find the minimum number of party halls required to organize parties with given starting and finishing times.</p>\n<p>Please comment&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-9666">\r\n        <div id="dsq-comment-header-9666" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9666">\r\n                <span id="dsq-author-user-9666">soupboy</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9666" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9666" class="dsq-comment-message"><p>Hi, shouldn&#8217;t the brute force algorithm&#8217;s complexity be m^V and not V^m as written above ?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-10909">\r\n        <div id="dsq-comment-header-10909" class="dsq-comment-header">\r\n            <cite id="dsq-cite-10909">\r\n                <span id="dsq-author-user-10909">coolguy</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-10909" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-10909" class="dsq-comment-message"><p>You can understand graph coloring using backtracking by watching this video<br />\nyoutu.be/Cl3A_9hokjU</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8422">\r\n        <div id="dsq-comment-header-8422" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8422">\r\n                <span id="dsq-author-user-8422">Rohit Raj</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8422" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8422" class="dsq-comment-message"><p>bool isSafe (int v, bool graph[V][V], int color[], int c)<br />\n{<br />\n    for (int i = 0; i &lt; V; i++)<br />\n        if (graph[v][i] &amp;&amp; c == color[i])<br />\n            return false;<br />\n    return true;<br />\n}</p>\n<p>as the problem statement says that if (i == j ) then also the graph[i][j] = 1; so shouldn&#039;t we check for this condition in this function?<br />\ni.e if(graph[v][i] &amp;&amp; c == color[i] &amp;&amp; v != i).</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-8423">\r\n        <div id="dsq-comment-header-8423" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8423">\r\n                <span id="dsq-author-user-8423">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8423" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8423" class="dsq-comment-message"><p>@Rohit Raj</p>\n<p>We don&#8217;t need to check for this as we assign a color c only after isSafe() returns true. Before calling isSafe(), we assign the color value as 0 which is not a valid value.  When we call isSafe(), the value of c will be greater than 0 and value of color[v] will be 0. So color[v] will never be equal to c. I hope this clarifies your doubt.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-8306">\r\n        <div id="dsq-comment-header-8306" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8306">\r\n                <span id="dsq-author-user-8306">gautam</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8306" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8306" class="dsq-comment-message"><p>Can be use some dynamic programming to reduce complexity</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8272">\r\n        <div id="dsq-comment-header-8272" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8272">\r\n                <span id="dsq-author-user-8272">Venki</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8272" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8272" class="dsq-comment-message"><p>There is small bug in the code. The colour vector should be of size V in lieu of m. In the current code, the program tries to access elements past the buffer end (while checking validity of colour assignment).</p>\n<p>What is the worst case complexity? O(V * m V) as we are exploring all configurations and doing O(V) work at each call.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-8273">\r\n        <div id="dsq-comment-header-8273" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8273">\r\n                <span id="dsq-author-user-8273">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8273" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8273" class="dsq-comment-message"><p>@Venki: Thanks for pointing this out. This has been fixed. Yes, the worst case complexity will be O( V * (m^V) ) as we may have to try all configurations in worst case.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8268">\r\n        <div id="dsq-comment-header-8268" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8268">\r\n                <span id="dsq-author-user-8268">Guddu sharma</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8268" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8268" class="dsq-comment-message"><p>What is the need of following if condition:<br />\nif (graphColoringUtil (graph, m, color, v+1) == true)<br />\n             return true;</p>\n<p>I think when all the vertices have been assigned color,the first condition if(v==V) return true,which is sufficient.</p>\n<p>Please comment if i have understood something wrong..</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-8269">\r\n        <div id="dsq-comment-header-8269" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8269">\r\n                <span id="dsq-author-user-8269">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8269" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8269" class="dsq-comment-message"><p>@Guddu sharma: The statement serves two purposes:<br />\n1) It calls the function recursively for the other vertices.<br />\n2) It returns true as soon as one of the color assignments lead to a solution. So that other colors are not checked as soon as a color assignment works.</p>\n<p>Also, just putting following line is not sufficient. We need to forward the result of this function call to parent calls. </p>\n<pre> <code language="C">\n    if (v == V)\n        return true;\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-2" id="dsq-comment-8270">\r\n        <div id="dsq-comment-header-8270" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8270">\r\n                <span id="dsq-author-user-8270">Venki</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8270" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8270" class="dsq-comment-message"><p>@Guddu sharma, We need to find *one* feasible solution. The condition if(v==V) is recursion base case to end infinite recursion. When we reach the end branch in the state space tree and still not found solution, we need to backtrack to one level upper and restore the state.</p>\n<p>Similarly, if the current assignment is safe, (means the branch generated in the tree can be part of solution state), we recur to next level for next feasible color.</p>\n<p>The condition</p>\n<pre> <code language="C">\n/* recur to assign colors to rest of the vertices */\nif (graphColoringUtil (graph, m, color, v+1) == true)\n    return true;\n</code> </pre>\n<p>checks next color. If this next color reaches last color, we are done which will be returned at the if condition</p>\n<pre> <code language="C">\nif (v == V)\n        return true;\n</code> </pre>\n<p>Try to draw the state space tree for small values of V and m, you can easily understand the backtracking procedure.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/backttracking-set-5-m-coloring-problem/\';\r\nvar disqus_identifier = \'19042 http://www.geeksforgeeks.org/?p=19042\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Backtracking | Set 5 (m Coloring Problem)";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(406)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(81)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(57)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'62 topics\' style=\'font-size: 15.766423357664pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushJava.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.407 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-02 14:27:18 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p324
sb.