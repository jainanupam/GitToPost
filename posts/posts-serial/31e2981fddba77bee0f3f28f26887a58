ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/CycleDetectionInUndirectedGraph'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/CycleDetectionInUndirectedGraph.java'
p11
atp12
Rp13
sS'title'
p14
VDetect cycle in an undirected graph
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/detect-cycle-undirected-graph/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(cbs4.element
NavigableString
p44
c__builtin__
unicode
p45
Vto detect cycle in an undirected graph in O(V+E) time.  We do a DFS traversal of the given graph.  For every visited vertex \u2018v\u2019, if there is an adjacent \u2018u\u2019 such that u is already visited and u is not parent of v, then there is a cycle in graph.  If we don\u2019t find such an adjacent for any vertex, we say that there is no cycle.  The assumption of this approach is that there are no parallel edges between any two vertices.
p46
tp47
Rp48
(dp49
g34
g0
(g22
g2
Ntp50
Rp51
(dp52
g26
I00
sg27
g0
(g44
g45
V  The time complexity of the union-find algorithm is O(ELogV).  Like directed graphs, we can use 
p53
tp54
Rp55
(dp56
g34
g0
(g22
g2
Ntp57
Rp58
(dp59
g26
I00
sg27
g0
(g44
g45
V. We have also discussed a 
p60
tp61
Rp62
(dp63
g34
g0
(g22
g2
Ntp64
Rp65
(dp66
g26
I00
sg27
g0
(g44
g45
V\u000aWe have discussed 
p67
tp68
Rp69
(dp70
g34
g0
(g22
g2
Ntp71
Rp72
(dp73
g26
I01
sg27
g0
(g22
g2
Ntp74
Rp75
(dp76
g26
I01
sg27
g0
(g22
g2
Ntp77
Rp78
(dp79
g26
I00
sg27
g0
(g44
g45
V\u000a
p80
tp81
Rp82
(dp83
g34
g0
(g22
g2
Ntp84
Rp85
(dp86
g26
I01
sg27
g0
(g22
g2
Ntp87
Rp88
(dp89
g26
I00
sg27
g0
(g44
g45
VGiven an undirected graph, how to check if there is a cycle in the graph? For example, the following graph has a cycle 1-0-2-1.
p90
tp91
Rp92
(dp93
g34
Nsg27
g39
sg28
g88
sg37
g88
sg31
g39
sbsg28
g85
sg29
Vspan
p94
sg31
g39
sg32
Nsg33
Nsg34
g92
sg35
(dp95
Vid
p96
Vmore-123438
p97
ssg37
g85
sS'parser_class'
p98
cbs4
BeautifulSoup
p99
sS'hidden'
p100
I00
sS'contents'
p101
(lp102
sbsg28
g82
sg29
Vbr
p103
sg31
g39
sg32
Nsg33
Nsg34
g88
sg35
(dp104
sg37
g82
sg98
g99
sg100
I00
sg101
(lp105
sbsg27
g85
sg28
g78
sg37
g78
sg31
g39
sbsg28
g72
sg29
Va
p106
sg31
g39
sg32
Nsg33
Nsg34
g82
sg35
(dp107
Vhref
p108
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/cycleGraph.png
p109
ssg37
g75
sg98
g99
sg100
I00
sg101
(lp110
g75
asbsg28
Nsg29
Vimg
p111
sg31
g78
sg32
Nsg33
Nsg34
Nsg35
(dp112
Vsrc
p113
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/cycleGraph-300x156.png
p114
sValt
p115
VcycleGraph
p116
sVheight
p117
V156
p118
sVclass
p119
(lp120
Valigncenter
p121
aVsize-medium
p122
aVwp-image-123485
p123
asVwidth
p124
V300
p125
ssg37
g72
sg98
g99
sg100
I00
sg101
(lp126
sbsg28
g69
sg29
Vbr
p127
sg31
g39
sg32
Nsg33
Nsg34
g78
sg35
(dp128
sg37
g69
sg98
g99
sg100
I00
sg101
(lp129
sbsg27
g72
sg28
g65
sg37
g65
sg31
g39
sbsg28
g62
sg29
g106
sg31
g39
sg32
Nsg33
Nsg34
g69
sg35
(dp130
Vhref
p131
Vhttp://www.geeksforgeeks.org/detect-cycle-in-a-graph/
p132
sVtarget
p133
V_blank
p134
ssg37
g0
(g44
g45
Vcycle detection for directed graph
p135
tp136
Rp137
(dp138
g34
Nsg27
g65
sg28
Nsg37
g62
sg31
g65
sbsg98
g99
sg100
I00
sg101
(lp139
g137
asbsg27
g137
sg28
g58
sg37
g58
sg31
g39
sbsg28
g55
sg29
g106
sg31
g39
sg32
Nsg33
Nsg34
g62
sg35
(dp140
Vhref
p141
Vhttp://www.geeksforgeeks.org/union-find/
p142
sVtarget
p143
V_blank
p144
ssg37
g0
(g44
g45
Vunion-find algorithm for cycle detection in undirected graphs.
p145
tp146
Rp147
(dp148
g34
Nsg27
g58
sg28
Nsg37
g55
sg31
g58
sbsg98
g99
sg100
I00
sg101
(lp149
g147
asbsg27
g147
sg28
g51
sg37
g51
sg31
g39
sbsg28
g48
sg29
g106
sg31
g39
sg32
Nsg33
Nsg34
g55
sg35
(dp150
Vhref
p151
Vhttp://www.geeksforgeeks.org/depth-first-traversal-for-a-graph/
p152
sVtarget
p153
V_blank
p154
ssg37
g0
(g44
g45
VDFS 
p155
tp156
Rp157
(dp158
g34
Nsg27
g51
sg28
Nsg37
g48
sg31
g51
sbsg98
g99
sg100
I00
sg101
(lp159
g157
asbsg27
g157
sg28
Nsg37
g42
sg31
g39
sbsg28
g0
(g22
g2
Ntp160
Rp161
(dp162
g26
I00
sg27
g0
(g44
g45
V\u000a
p163
tp164
Rp165
(dp166
g34
g0
(g22
g2
Ntp167
Rp168
(dp169
g26
I00
sg27
g0
(g44
g45
V\u000a
p170
tp171
Rp172
(dp173
g34
Nsg27
g0
(g22
g2
Ntp174
Rp175
(dp176
g26
I00
sg27
g0
(g44
g45
V\u000a
p177
tp178
Rp179
(dp180
g34
g0
(g22
g2
Ntp181
Rp182
(dp183
g26
I00
sg27
g0
(g44
g45
V\u000a
p184
tp185
Rp186
(dp187
g34
g0
(g22
g2
Ntp188
Rp189
(dp190
g26
I00
sg27
g0
(g44
g45
V\u000a
p191
tp192
Rp193
(dp194
g34
Nsg27
g0
(g22
g2
Ntp195
Rp196
(dp197
g26
I00
sg27
g0
(g44
g45
V\u000a
p198
tp199
Rp200
(dp201
g34
g0
(g22
g2
Ntp202
Rp203
(dp204
g26
I00
sg27
g0
(g44
g45
V\u000a
p205
tp206
Rp207
(dp208
g34
Nsg27
g42
sg28
g203
sg37
g203
sg31
g42
sbsg28
g200
sg29
Vh2
p209
sg31
g42
sg32
Nsg33
Nsg34
g207
sg35
(dp210
Vclass
p211
(lp212
Vtabtitle
p213
assg37
g0
(g44
g45
VC++
p214
tp215
Rp216
(dp217
g34
Nsg27
g203
sg28
Nsg37
g200
sg31
g203
sbsg98
g99
sg100
I00
sg101
(lp218
g216
asbsg27
g216
sg28
g196
sg37
g196
sg31
g42
sbsg28
g182
sg29
Vdiv
p219
sg31
g42
sg32
Nsg33
Nsg34
g200
sg35
(dp220
Vclass
p221
(lp222
Vtabcontent
p223
assg37
g193
sg98
g99
sg100
I00
sg101
(lp224
g193
ag189
ag186
asbsg28
g189
sg37
g189
sg31
g196
sbsg28
g186
sg29
Vpre
p225
sg31
g196
sg32
Nsg33
Nsg34
g193
sg35
(dp226
Vclass
p227
(lp228
Vbrush:
p229
aVcpp;
p230
aVhighlight:
p231
aV[31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74];
p232
aVtitle:
p233
aV;
p234
aVnotranslate
p235
asVtitle
p236
V
p237
ssg37
g0
(g44
g45
V\u000a// A C++ Program to detect cycle in an undirected graph\u000a#include<iostream>\u000a#include <list>\u000a#include <limits.h>\u000ausing namespace std;\u000a\u000a// Class for an undirected graph\u000aclass Graph\u000a{\u000a    int V;    // No. of vertices\u000a    list<int> *adj;    // Pointer to an array containing adjacency lists\u000a    bool isCyclicUtil(int v, bool visited[], int parent);\u000apublic:\u000a    Graph(int V);   // Constructor\u000a    void addEdge(int v, int w);   // to add an edge to graph\u000a    bool isCyclic();   // returns true if there is a cycle\u000a};\u000a\u000aGraph::Graph(int V)\u000a{\u000a    this->V = V;\u000a    adj = new list<int>[V];\u000a}\u000a\u000avoid Graph::addEdge(int v, int w)\u000a{\u000a    adj[v].push_back(w); // Add w to v\u2019s list.\u000a    adj[w].push_back(v); // Add v to w\u2019s list.\u000a}\u000a\u000a// A recursive function that uses visited[] and parent to detect\u000a// cycle in subgraph reachable from vertex v.\u000abool Graph::isCyclicUtil(int v, bool visited[], int parent)\u000a{\u000a    // Mark the current node as visited\u000a    visited[v] = true;\u000a\u000a    // Recur for all the vertices adjacent to this vertex\u000a    list<int>::iterator i;\u000a    for (i = adj[v].begin(); i != adj[v].end(); ++i)\u000a    {\u000a        // If an adjacent is not visited, then recur for that adjacent\u000a        if (!visited[*i])\u000a        {\u000a           if (isCyclicUtil(*i, visited, v))\u000a              return true;\u000a        }\u000a\u000a        // If an adjacent is visited and not parent of current vertex,\u000a        // then there is a cycle.\u000a        else if (*i != parent)\u000a           return true;\u000a    }\u000a    return false;\u000a}\u000a\u000a// Returns true if the graph contains a cycle, else false.\u000abool Graph::isCyclic()\u000a{\u000a    // Mark all the vertices as not visited and not part of recursion\u000a    // stack\u000a    bool *visited = new bool[V];\u000a    for (int i = 0; i < V; i++)\u000a        visited[i] = false;\u000a\u000a    // Call the recursive helper function to detect cycle in different\u000a    // DFS trees\u000a    for (int u = 0; u < V; u++)\u000a        if (!visited[u]) // Don't recur for u if it is already visited\u000a          if (isCyclicUtil(u, visited, -1))\u000a             return true;\u000a\u000a    return false;\u000a}\u000a\u000a// Driver program to test above functions\u000aint main()\u000a{\u000a    Graph g1(5);\u000a    g1.addEdge(1, 0);\u000a    g1.addEdge(0, 2);\u000a    g1.addEdge(2, 0);\u000a    g1.addEdge(0, 3);\u000a    g1.addEdge(3, 4);\u000a    g1.isCyclic()? cout << "Graph contains cycle\u005cn":\u000a                   cout << "Graph doesn't contain cycle\u005cn";\u000a\u000a    Graph g2(3);\u000a    g2.addEdge(0, 1);\u000a    g2.addEdge(1, 2);\u000a    g2.isCyclic()? cout << "Graph contains cycle\u005cn":\u000a                   cout << "Graph doesn't contain cycle\u005cn";\u000a\u000a    return 0;\u000a}\u000a
p238
tp239
Rp240
(dp241
g34
Nsg27
g189
sg28
Nsg37
g186
sg31
g189
sbsg98
g99
sg100
I00
sg101
(lp242
g240
asbsg27
g240
sg28
Nsg37
g182
sg31
g196
sbsg28
g179
sg29
Vh2
p243
sg31
g42
sg32
Nsg33
Nsg34
g196
sg35
(dp244
Vclass
p245
(lp246
Vtabtitle
p247
assg37
g0
(g44
g45
VJava
p248
tp249
Rp250
(dp251
g34
Nsg27
g182
sg28
Nsg37
g179
sg31
g182
sbsg98
g99
sg100
I00
sg101
(lp252
g250
asbsg27
g250
sg28
g175
sg37
g175
sg31
g42
sbsg28
Nsg29
Vdiv
p253
sg31
g42
sg32
Nsg33
Nsg34
g179
sg35
(dp254
Vclass
p255
(lp256
Vtabcontent
p257
assg37
g172
sg98
g99
sg100
I00
sg101
(lp258
g172
ag168
ag165
asbsg28
g168
sg37
g168
sg31
g175
sbsg28
g165
sg29
Vpre
p259
sg31
g175
sg32
Nsg33
Nsg34
g172
sg35
(dp260
Vclass
p261
(lp262
Vbrush:
p263
aVcpp;
p264
aVhighlight:
p265
aV[26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73];
p266
aVtitle:
p267
ag234
aVnotranslate
p268
asVtitle
p269
g237
ssg37
g0
(g44
g45
V\u000a// A Java Program to detect cycle in an undirected graph\u000aimport java.io.*;\u000aimport java.util.*;\u000a\u000a// This class represents a directed graph using adjacency list\u000a// representation\u000aclass Graph\u000a{\u000a    private int V;   // No. of vertices\u000a    private LinkedList<Integer> adj[]; // Adjacency List Represntation\u000a\u000a    // Constructor\u000a    Graph(int v) {\u000a        V = v;\u000a        adj = new LinkedList[v];\u000a        for(int i=0; i<v; ++i)\u000a            adj[i] = new LinkedList();\u000a    }\u000a\u000a    // Function to add an edge into the graph\u000a    void addEdge(int v,int w) {\u000a        adj[v].add(w);\u000a        adj[w].add(v);\u000a    }\u000a\u000a    // A recursive function that uses visited[] and parent to detect\u000a    // cycle in subgraph reachable from vertex v.\u000a    Boolean isCyclicUtil(int v, Boolean visited[], int parent)\u000a    {\u000a        // Mark the current node as visited\u000a        visited[v] = true;\u000a        Integer i;\u000a\u000a        // Recur for all the vertices adjacent to this vertex\u000a        Iterator<Integer> it = adj[v].iterator();\u000a        while (it.hasNext())\u000a        {\u000a            i = it.next();\u000a\u000a            // If an adjacent is not visited, then recur for that\u000a            // adjacent\u000a            if (!visited[i])\u000a            {\u000a                if (isCyclicUtil(i, visited, v))\u000a                    return true;\u000a            }\u000a\u000a            // If an adjacent is visited and not parent of current\u000a            // vertex, then there is a cycle.\u000a            else if (i != parent)\u000a                return true;\u000a        }\u000a        return false;\u000a    }\u000a\u000a    // Returns true if the graph contains a cycle, else false.\u000a    Boolean isCyclic()\u000a    {\u000a        // Mark all the vertices as not visited and not part of\u000a        // recursion stack\u000a        Boolean visited[] = new Boolean[V];\u000a        for (int i = 0; i < V; i++)\u000a            visited[i] = false;\u000a\u000a        // Call the recursive helper function to detect cycle in\u000a        // different DFS trees\u000a        for (int u = 0; u < V; u++)\u000a            if (!visited[u]) // Don't recur for u if already visited\u000a                if (isCyclicUtil(u, visited, -1))\u000a                    return true;\u000a\u000a        return false;\u000a    }\u000a\u000a\u000a    // Driver method to test above methods\u000a    public static void main(String args[])\u000a    {\u000a        // Create a graph given in the above diagram\u000a        Graph g1 = new Graph(5);\u000a        g1.addEdge(1, 0);\u000a        g1.addEdge(0, 2);\u000a        g1.addEdge(2, 0);\u000a        g1.addEdge(0, 3);\u000a        g1.addEdge(3, 4);\u000a        if (g1.isCyclic())\u000a            System.out.println("Graph contains cycle");\u000a        else\u000a            System.out.println("Graph doesn't contains cycle");\u000a\u000a        Graph g2 = new Graph(3);\u000a        g2.addEdge(0, 1);\u000a        g2.addEdge(1, 2);\u000a        if (g2.isCyclic())\u000a            System.out.println("Graph contains cycle");\u000a        else\u000a            System.out.println("Graph doesn't contains cycle");\u000a    }\u000a}\u000a// This code is contributed by Aakash Hasija\u000a
p270
tp271
Rp272
(dp273
g34
Nsg27
g168
sg28
Nsg37
g165
sg31
g168
sbsg98
g99
sg100
I00
sg101
(lp274
g272
asbsg27
g272
sg28
Nsg37
g161
sg31
g175
sbsg28
Nsg29
Vp
p275
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp276
sg37
g0
(g44
g45
VOutput:\u000a
p277
tp278
Rp279
(dp280
g34
Nsg27
g161
sg28
g0
(g22
g2
Ntp281
Rp282
(dp283
g26
I00
sg27
g279
sg28
g0
(g44
g45
V\u000a
p284
tp285
Rp286
(dp287
g34
g282
sg27
g0
(g44
g45
VGraph contains cycle\u000aGraph doesn't contain cycle
p288
tp289
Rp290
(dp291
g34
Nsg27
g282
sg28
Nsg37
g286
sg31
g282
sbsg28
g0
(g22
g2
Ntp292
Rp293
(dp294
g26
I00
sg27
g286
sg28
g0
(g44
g45
V\u000a
p295
tp296
Rp297
(dp298
g34
g293
sg27
g0
(g44
g45
V  The program does a simple DFS Traversal of graph and graph is represented using adjacency list.  So the time complexity is O(V+E)
p299
tp300
Rp301
(dp302
g34
g0
(g22
g2
Ntp303
Rp304
(dp305
g26
I00
sg27
g293
sg28
g301
sg29
Vstrong
p306
sg31
g293
sg32
Nsg33
Nsg34
Nsg35
(dp307
sg37
g0
(g44
g45
VTime Complexity:
p308
tp309
Rp310
(dp311
g34
Nsg27
g304
sg28
Nsg37
g301
sg31
g304
sbsg98
g99
sg100
I00
sg101
(lp312
g310
asbsg27
g310
sg28
Nsg37
g297
sg31
g293
sbsg28
g0
(g22
g2
Ntp313
Rp314
(dp315
g26
I00
sg27
g297
sg28
g0
(g44
g45
V\u000a
p316
tp317
Rp318
(dp319
g34
g314
sg27
g0
(g44
g45
V  Can we use BFS to detect cycle in an undirected graph in O(V+E) time? What about directed graphs?
p320
tp321
Rp322
(dp323
g34
g0
(g22
g2
Ntp324
Rp325
(dp326
g26
I00
sg27
g314
sg28
g322
sg29
Vstrong
p327
sg31
g314
sg32
Nsg33
Nsg34
Nsg35
(dp328
sg37
g0
(g44
g45
VExercise:
p329
tp330
Rp331
(dp332
g34
Nsg27
g325
sg28
Nsg37
g322
sg31
g325
sbsg98
g99
sg100
I00
sg101
(lp333
g331
asbsg27
g331
sg28
Nsg37
g318
sg31
g314
sbsg28
g0
(g22
g2
Ntp334
Rp335
(dp336
g26
I00
sg27
g318
sg28
g0
(g44
g45
V\u000a
p337
tp338
Rp339
(dp340
g34
g335
sg27
g0
(g44
g45
V                    Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above
p341
tp342
Rp343
(dp344
g34
Nsg27
g335
sg28
Nsg37
g339
sg31
g335
sbsg28
g0
(g22
g2
Ntp345
Rp346
(dp347
g26
I00
sg27
g339
sg28
g0
(g44
g45
V\u000a
p348
tp349
Rp350
(dp351
g34
g346
sg27
g346
sg28
g0
(cbs4.element
Comment
p352
g45
V Big Rectangle Blog Bottom 
p353
tp354
Rp355
(dp356
g34
g350
sg27
g350
sg28
g0
(g44
g45
V\u000a
p357
tp358
Rp359
(dp360
g34
g355
sg27
g355
sg28
g0
(g22
g2
Ntp361
Rp362
(dp363
g26
I00
sg27
g359
sg28
g0
(g44
g45
V\u000a
p364
tp365
Rp366
(dp367
g34
g362
sg27
g362
sg28
g0
(g22
g2
Ntp368
Rp369
(dp370
g26
I00
sg27
g366
sg28
g0
(g44
g45
V\u000a
p371
tp372
Rp373
(dp374
g34
g369
sg27
g0
(g44
g45
V\u000a(adsbygoogle = window.adsbygoogle || []).push({});\u000a
p375
tp376
Rp377
(dp378
g34
Nsg27
g369
sg28
Nsg37
g373
sg31
g369
sbsg28
g0
(g22
g2
Ntp379
Rp380
(dp381
g26
I01
sg27
g373
sg28
g0
(g44
g45
V\u000a
p382
tp383
Rp384
(dp385
g34
g380
sg27
g380
sg28
Nsg37
Nsg31
g161
sbsg29
Vbr
p386
sg31
g161
sg32
Nsg33
Nsg34
g373
sg35
(dp387
sg37
g384
sg98
g99
sg100
I00
sg101
(lp388
sbsg37
g380
sg31
g161
sbsg29
Vscript
p389
sg31
g161
sg32
Nsg33
Nsg34
g366
sg35
(dp390
sg37
g377
sg98
g99
sg100
I00
sg101
(lp391
g377
asbsg37
g369
sg31
g161
sbsg29
Vins
p392
sg31
g161
sg32
Nsg33
Nsg34
g359
sg35
(dp393
Vstyle
p394
Vdisplay:inline-block;width:336px;height:280px
p395
sVdata-ad-client
p396
Vca-pub-9465609616171866
p397
sVclass
p398
(lp399
Vadsbygoogle
p400
asVdata-ad-slot
p401
V4061219431
p402
ssg37
g366
sg98
g99
sg100
I00
sg101
(lp403
sbsg37
g362
sg31
g161
sbsg37
g359
sg31
g161
sbsg37
g355
sg31
g161
sbsg29
Vscript
p404
sg31
g161
sg32
Nsg33
Nsg34
g339
sg35
(dp405
Vasync
p406
S''
p407
sVsrc
p408
V//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js
p409
ssg37
g350
sg98
g99
sg100
I00
sg101
(lp410
sbsg37
g346
sg31
g161
sbsg29
g275
sg31
g161
sg32
Nsg33
Nsg34
g318
sg35
(dp411
sg37
g343
sg98
g99
sg100
I00
sg101
(lp412
g343
asbsg37
g335
sg31
g161
sbsg29
g275
sg31
g161
sg32
Nsg33
Nsg34
g297
sg35
(dp413
sg37
g325
sg98
g99
sg100
I00
sg101
(lp414
g325
ag322
asbsg37
g314
sg31
g161
sbsg29
g275
sg31
g161
sg32
Nsg33
Nsg34
g286
sg35
(dp415
sg37
g304
sg98
g99
sg100
I00
sg101
(lp416
g304
ag301
asbsg37
g293
sg31
g161
sbsg29
Vpre
p417
sg31
g161
sg32
Nsg33
Nsg34
g279
sg35
(dp418
sg37
g290
sg98
g99
sg100
I00
sg101
(lp419
g290
asbsg37
g282
sg31
g161
sbsg98
g99
sg100
I00
sg101
(lp420
g279
ag282
ag286
ag293
ag297
ag314
ag318
ag335
ag339
ag346
ag350
ag355
ag359
ag362
ag366
ag369
ag373
ag380
ag384
asbsg29
Vdiv
p421
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp422
Vclass
p423
(lp424
Vresponsive-tabs
p425
assg37
g207
sg98
g99
sg100
I00
sg101
(lp426
g207
ag203
ag200
ag196
ag182
ag179
ag175
asbsg29
g275
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp427
sg37
g92
sg98
g99
sg100
I00
sg101
(lp428
g92
ag88
ag85
ag82
ag78
ag72
ag69
ag65
ag62
ag58
ag55
ag51
ag48
asbsg98
Nsg100
I00
sg101
(lp429
g39
ag42
ag161
asbsS'raw_page'
p430
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Detect cycle in an undirected graph - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/detect-cycle-undirected-graph/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Detect cycle in an undirected graph - GeeksforGeeks" />\n<meta property="og:description" content="Given an undirected graph, how to check if there is a cycle in the graph? For example, the following graph has a cycle 1-0-2-1. We have discussed cycle detection for directed graph. We have also discussed a union-find algorithm for cycle detection in undirected graphs. The time complexity of the union-find algorithm is O(ELogV). Like\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/detect-cycle-undirected-graph/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Graph" />\n<meta property="article:section" content="Graph" />\n<meta property="article:published_time" content="2013-10-11T20:22:07+00:00" />\n<meta property="article:modified_time" content="2015-11-08T10:52:16+00:00" />\n<meta property="og:updated_time" content="2015-11-08T10:52:16+00:00" />\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/cycleGraph-300x156.png" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-123438 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-123438" class="post-123438 post type-post status-publish format-standard hentry category-graph tag-graph">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Detect cycle in an undirected graph</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Given an undirected graph, how to check if there is a cycle in the graph? For example, the following graph has a cycle 1-0-2-1.<span id="more-123438"></span><br />\n<a href="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/cycleGraph.png"><img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/cycleGraph-300x156.png" alt="cycleGraph" width="300" height="156" class="aligncenter size-medium wp-image-123485" /></a><br />\nWe have discussed <a href="http://www.geeksforgeeks.org/detect-cycle-in-a-graph/" target="_blank">cycle detection for directed graph</a>. We have also discussed a <a href="http://www.geeksforgeeks.org/union-find/" target="_blank">union-find algorithm for cycle detection in undirected graphs.</a>  The time complexity of the union-find algorithm is O(ELogV).  Like directed graphs, we can use <a href="http://www.geeksforgeeks.org/depth-first-traversal-for-a-graph/" target="_blank">DFS </a>to detect cycle in an undirected graph in O(V+E) time.  We do a DFS traversal of the given graph.  For every visited vertex &#8216;v&#8217;, if there is an adjacent &#8216;u&#8217; such that u is already visited and u is not parent of v, then there is a cycle in graph.  If we don&#8217;t find such an adjacent for any vertex, we say that there is no cycle.  The assumption of this approach is that there are no parallel edges between any two vertices.</p>\n<div class="responsive-tabs">\n<h2 class="tabtitle">C++</h2>\n<div class="tabcontent">\n\n<pre class="brush: cpp; highlight: [31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74]; title: ; notranslate" title="">\r\n// A C++ Program to detect cycle in an undirected graph\r\n#include&lt;iostream&gt;\r\n#include &lt;list&gt;\r\n#include &lt;limits.h&gt;\r\nusing namespace std;\r\n\r\n// Class for an undirected graph\r\nclass Graph\r\n{\r\n    int V;    // No. of vertices\r\n    list&lt;int&gt; *adj;    // Pointer to an array containing adjacency lists\r\n    bool isCyclicUtil(int v, bool visited[], int parent);\r\npublic:\r\n    Graph(int V);   // Constructor\r\n    void addEdge(int v, int w);   // to add an edge to graph\r\n    bool isCyclic();   // returns true if there is a cycle\r\n};\r\n\r\nGraph::Graph(int V)\r\n{\r\n    this-&gt;V = V;\r\n    adj = new list&lt;int&gt;[V];\r\n}\r\n\r\nvoid Graph::addEdge(int v, int w)\r\n{\r\n    adj[v].push_back(w); // Add w to v\xe2\x80\x99s list.\r\n    adj[w].push_back(v); // Add v to w\xe2\x80\x99s list.\r\n}\r\n\r\n// A recursive function that uses visited[] and parent to detect\r\n// cycle in subgraph reachable from vertex v.\r\nbool Graph::isCyclicUtil(int v, bool visited[], int parent)\r\n{\r\n    // Mark the current node as visited\r\n    visited[v] = true;\r\n\r\n    // Recur for all the vertices adjacent to this vertex\r\n    list&lt;int&gt;::iterator i;\r\n    for (i = adj[v].begin(); i != adj[v].end(); ++i)\r\n    {\r\n        // If an adjacent is not visited, then recur for that adjacent\r\n        if (!visited[*i])\r\n        {\r\n           if (isCyclicUtil(*i, visited, v))\r\n              return true;\r\n        }\r\n\r\n        // If an adjacent is visited and not parent of current vertex,\r\n        // then there is a cycle.\r\n        else if (*i != parent)\r\n           return true;\r\n    }\r\n    return false;\r\n}\r\n\r\n// Returns true if the graph contains a cycle, else false.\r\nbool Graph::isCyclic()\r\n{\r\n    // Mark all the vertices as not visited and not part of recursion\r\n    // stack\r\n    bool *visited = new bool[V];\r\n    for (int i = 0; i &lt; V; i++)\r\n        visited[i] = false;\r\n\r\n    // Call the recursive helper function to detect cycle in different\r\n    // DFS trees\r\n    for (int u = 0; u &lt; V; u++)\r\n        if (!visited[u]) // Don\'t recur for u if it is already visited\r\n          if (isCyclicUtil(u, visited, -1))\r\n             return true;\r\n\r\n    return false;\r\n}\r\n\r\n// Driver program to test above functions\r\nint main()\r\n{\r\n    Graph g1(5);\r\n    g1.addEdge(1, 0);\r\n    g1.addEdge(0, 2);\r\n    g1.addEdge(2, 0);\r\n    g1.addEdge(0, 3);\r\n    g1.addEdge(3, 4);\r\n    g1.isCyclic()? cout &lt;&lt; &quot;Graph contains cycle\\n&quot;:\r\n                   cout &lt;&lt; &quot;Graph doesn\'t contain cycle\\n&quot;;\r\n\r\n    Graph g2(3);\r\n    g2.addEdge(0, 1);\r\n    g2.addEdge(1, 2);\r\n    g2.isCyclic()? cout &lt;&lt; &quot;Graph contains cycle\\n&quot;:\r\n                   cout &lt;&lt; &quot;Graph doesn\'t contain cycle\\n&quot;;\r\n\r\n    return 0;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Java</h2>\n<div class="tabcontent">\n\n<pre class="brush: cpp; highlight: [26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73]; title: ; notranslate" title="">\r\n// A Java Program to detect cycle in an undirected graph\r\nimport java.io.*;\r\nimport java.util.*;\r\n\r\n// This class represents a directed graph using adjacency list\r\n// representation\r\nclass Graph\r\n{\r\n    private int V;   // No. of vertices\r\n    private LinkedList&lt;Integer&gt; adj[]; // Adjacency List Represntation\r\n\r\n    // Constructor\r\n    Graph(int v) {\r\n        V = v;\r\n        adj = new LinkedList[v];\r\n        for(int i=0; i&lt;v; ++i)\r\n            adj[i] = new LinkedList();\r\n    }\r\n\r\n    // Function to add an edge into the graph\r\n    void addEdge(int v,int w) {\r\n        adj[v].add(w);\r\n        adj[w].add(v);\r\n    }\r\n\r\n    // A recursive function that uses visited[] and parent to detect\r\n    // cycle in subgraph reachable from vertex v.\r\n    Boolean isCyclicUtil(int v, Boolean visited[], int parent)\r\n    {\r\n        // Mark the current node as visited\r\n        visited[v] = true;\r\n        Integer i;\r\n\r\n        // Recur for all the vertices adjacent to this vertex\r\n        Iterator&lt;Integer&gt; it = adj[v].iterator();\r\n        while (it.hasNext())\r\n        {\r\n            i = it.next();\r\n\r\n            // If an adjacent is not visited, then recur for that\r\n            // adjacent\r\n            if (!visited[i])\r\n            {\r\n                if (isCyclicUtil(i, visited, v))\r\n                    return true;\r\n            }\r\n\r\n            // If an adjacent is visited and not parent of current\r\n            // vertex, then there is a cycle.\r\n            else if (i != parent)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // Returns true if the graph contains a cycle, else false.\r\n    Boolean isCyclic()\r\n    {\r\n        // Mark all the vertices as not visited and not part of\r\n        // recursion stack\r\n        Boolean visited[] = new Boolean[V];\r\n        for (int i = 0; i &lt; V; i++)\r\n            visited[i] = false;\r\n\r\n        // Call the recursive helper function to detect cycle in\r\n        // different DFS trees\r\n        for (int u = 0; u &lt; V; u++)\r\n            if (!visited[u]) // Don\'t recur for u if already visited\r\n                if (isCyclicUtil(u, visited, -1))\r\n                    return true;\r\n\r\n        return false;\r\n    }\r\n\r\n\r\n    // Driver method to test above methods\r\n    public static void main(String args[])\r\n    {\r\n        // Create a graph given in the above diagram\r\n        Graph g1 = new Graph(5);\r\n        g1.addEdge(1, 0);\r\n        g1.addEdge(0, 2);\r\n        g1.addEdge(2, 0);\r\n        g1.addEdge(0, 3);\r\n        g1.addEdge(3, 4);\r\n        if (g1.isCyclic())\r\n            System.out.println(&quot;Graph contains cycle&quot;);\r\n        else\r\n            System.out.println(&quot;Graph doesn\'t contains cycle&quot;);\r\n\r\n        Graph g2 = new Graph(3);\r\n        g2.addEdge(0, 1);\r\n        g2.addEdge(1, 2);\r\n        if (g2.isCyclic())\r\n            System.out.println(&quot;Graph contains cycle&quot;);\r\n        else\r\n            System.out.println(&quot;Graph doesn\'t contains cycle&quot;);\r\n    }\r\n}\r\n// This code is contributed by Aakash Hasija\r\n</pre>\n</div></div>\n<p>Output:\n<pre>Graph contains cycle\r\nGraph doesn\'t contain cycle</pre>\n<p><strong>Time Complexity:</strong>  The program does a simple DFS Traversal of graph and graph is represented using adjacency list.  So the time complexity is O(V+E)</p>\n<p><strong>Exercise:</strong>  Can we use BFS to detect cycle in an undirected graph in O(V+E) time? What about directed graphs?</p>\n<p>                    Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/detect-cycle-undirected-graph/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="123438 http://www.geeksforgeeks.org/?p=123438">25 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/graph/" rel="category tag">Graph</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/graph/" rel="tag">Graph</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/number-of-triangles-in-directed-and-undirected-graphs/" title="Number of Triangles in Directed and Undirected Graphs">Number of Triangles in Directed and Undirected Graphs</a></li><li><a href="http://www.geeksforgeeks.org/number-of-triangles-in-a-undirected-graph/" title="Number of Triangles in an Undirected Graph">Number of Triangles in an Undirected Graph</a></li><li><a href="http://www.geeksforgeeks.org/iterative-depth-first-traversal/" title="Iterative Depth First Traversal of Graph">Iterative Depth First Traversal of Graph</a></li><li><a href="http://www.geeksforgeeks.org/print-all-jumping-numbers-smaller-than-or-equal-to-a-given-value/" title="Print all Jumping Numbers smaller than or equal to a given value">Print all Jumping Numbers smaller than or equal to a given value</a></li><li><a href="http://www.geeksforgeeks.org/hopcroft-karp-algorithm-for-maximum-matching-set-2-implementation/" title="Hopcroft\xe2\x80\x93Karp Algorithm for Maximum Matching | Set 2 (Implementation)">Hopcroft\xe2\x80\x93Karp Algorithm for Maximum Matching | Set 2 (Implementation)</a></li><li><a href="http://www.geeksforgeeks.org/hopcroft-karp-algorithm-for-maximum-matching-set-1-introduction/" title="Hopcroft\xe2\x80\x93Karp Algorithm for Maximum Matching | Set 1 (Introduction)">Hopcroft\xe2\x80\x93Karp Algorithm for Maximum Matching | Set 1 (Introduction)</a></li><li><a href="http://www.geeksforgeeks.org/length-of-shortest-chain-to-reach-a-target-word/" title="Length of shortest chain to reach a target word">Length of shortest chain to reach a target word</a></li><li><a href="http://www.geeksforgeeks.org/find-same-contacts-in-a-list-of-contacts/" title="Find same contacts in a list of contacts">Find same contacts in a list of contacts</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/find-edge-disjoint-paths-two-vertices/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/travelling-salesman-problem-set-1/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="123438" ptitle="Detect cycle in an undirected graph" id="ratePlugin"></div>\r\n<div pid="123438" ptitle="Detect cycle in an undirected graph" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-34983">\r\n        <div id="dsq-comment-header-34983" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34983">\r\n                <span id="dsq-author-user-34983">Himanshu Dagar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34983" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34983" class="dsq-comment-message"><p>The above algorithm shows :- have a cyclic even if i removed node 4 and edge b/w 0 &amp;2 .<br />\nIt seems to be incorrect</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-35222">\r\n        <div id="dsq-comment-header-35222" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35222">\r\n                <span id="dsq-author-user-35222">Nayana</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35222" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35222" class="dsq-comment-message"><p>Follow DFS properly. Its correct.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-33710">\r\n        <div id="dsq-comment-header-33710" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33710">\r\n                <span id="dsq-author-user-33710">guest11</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33710" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33710" class="dsq-comment-message"><p>@GeeksForGeeks<br />\nwhat is the need of adding same edge again in an undirected graph ?? </p>\n<p>g1.addEdge(0, 2);<br />\n    g1.addEdge(2, 0); </p>\n<p>and it doesn&#8217;t correspond  to the given image&#8230;&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-34981">\r\n        <div id="dsq-comment-header-34981" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34981">\r\n                <span id="dsq-author-user-34981">Himanshu Dagar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34981" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34981" class="dsq-comment-message"><p>Exactly<br />\nPlz update it as early as possible</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-2" id="dsq-comment-35304">\r\n        <div id="dsq-comment-header-35304" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35304">\r\n                <span id="dsq-author-user-35304">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35304" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35304" class="dsq-comment-message"><p>Because it is an undirected graph.  In an undirected graph, an edge from a vertex u to v means another edge from v to u.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-32877">\r\n        <div id="dsq-comment-header-32877" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32877">\r\n                <span id="dsq-author-user-32877">anonymous</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32877" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32877" class="dsq-comment-message"><p><a href="http://www.spoj.com/problems/GHOSTS/" rel="nofollow">http://www.spoj.com/problems/GHOSTS/</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-31432">\r\n        <div id="dsq-comment-header-31432" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31432">\r\n                <span id="dsq-author-user-31432">anonymous</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31432" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31432" class="dsq-comment-message"><p>C mein likh dete yaar?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-31039">\r\n        <div id="dsq-comment-header-31039" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31039">\r\n                <span id="dsq-author-user-31039">anonymous</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31039" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31039" class="dsq-comment-message"><p>can we conclude that if an undirected graph is a-cyclic then it is a tree?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-30224">\r\n        <div id="dsq-comment-header-30224" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30224">\r\n                <span id="dsq-author-user-30224">Sriharsha g.r.v</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30224" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30224" class="dsq-comment-message"><p>can i conclude this ..<br />\nif a graph is connected,directed and not acyclic then it is cyclic&#8230;&#8230;???</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-30223">\r\n        <div id="dsq-comment-header-30223" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30223">\r\n                <span id="dsq-author-user-30223">Guest</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30223" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30223" class="dsq-comment-message"><p>can i conclude this ..<br />\nif a graph is connected,directed and acyclic then it is cyclic&#8230;&#8230;???</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-35219">\r\n        <div id="dsq-comment-header-35219" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35219">\r\n                <span id="dsq-author-user-35219">Nayana</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35219" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35219" class="dsq-comment-message"><p>No. one side u r saying acyclic n other side cyclic. check ur doubt first.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29623">\r\n        <div id="dsq-comment-header-29623" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29623">\r\n                <span id="dsq-author-user-29623">Rahul Kapoor</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29623" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29623" class="dsq-comment-message"><p>y we are checking parent condition ?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-29459">\r\n        <div id="dsq-comment-header-29459" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29459">\r\n                <span id="dsq-author-user-29459">Kaushal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29459" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29459" class="dsq-comment-message"><p>Hi<br />\nCan you explain how there is cycle in Graph g1?<br />\nIf it is typo then it should return &#8216;Graph doesn&#8217;t contain cyclic&#8217;.<br />\nThanks</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-29462">\r\n        <div id="dsq-comment-header-29462" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29462">\r\n                <span id="dsq-author-user-29462">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29462" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29462" class="dsq-comment-message"><p>Please note that the graph is undirected.  There is a cycle 0-1-2</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-29367">\r\n        <div id="dsq-comment-header-29367" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29367">\r\n                <span id="dsq-author-user-29367">arpit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29367" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29367" class="dsq-comment-message"><p>if the graph is undirected,and say has N nodes then if number of edges exceed (N-1) then the graph will certainly have a cycle.. that would be an easier solution,isn&#8217;t it?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-35221">\r\n        <div id="dsq-comment-header-35221" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35221">\r\n                <span id="dsq-author-user-35221">Nayana</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35221" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35221" class="dsq-comment-message"><p>No. It is not always true.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-36063">\r\n        <div id="dsq-comment-header-36063" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36063">\r\n                <span id="dsq-author-user-36063">Eric</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36063" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36063" class="dsq-comment-message"><p>Can u give an example in which it is not true?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-28937">\r\n        <div id="dsq-comment-header-28937" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28937">\r\n                <span id="dsq-author-user-28937">pavansrinivas</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28937" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28937" class="dsq-comment-message"><p>iterative soln&#8230;in JAVA</p>\n<p><code><br />\npublic class Vertex {<br />\n    public char label;<br />\n    public boolean wasVisited;<br />\n    public Vertex(char lab)<br />\n    {<br />\n        label = lab;<br />\n        wasVisited = false;<br />\n    }<br />\n}<br />\npublic class Graph {<br />\n    private final int MAX_VERTS = 20;<br />\n    private Vertex[] vertexList;<br />\n    private int adjMat[][];<br />\n    private int nVerts;<br />\n    Stack s  ;<br />\n    public Graph() {<br />\n        vertexList = new Vertex[MAX_VERTS];<br />\n        adjMat = new int[MAX_VERTS][MAX_VERTS];<br />\n        nVerts = 0;<br />\n        for (int j = 0; j &lt; MAX_VERTS; j++)<br />\n            for (int k = 0; k &lt; MAX_VERTS; k++)<br />\n                adjMat[j][k] = 0;<br />\n    }<br />\n    public void addVertex(char lab) {<br />\n        vertexList[nVerts++] = new Vertex(lab);<br />\n    }<br />\n    public void addEdge(int start, int end) {<br />\n        adjMat[start][end] = 1;<br />\n        adjMat[end][start] = 1;<br />\n    }<br />\n    public void displayVertex(int v) {<br />\n        System.out.print(vertexList[v].label);<br />\n    }<br />\n    private int getAdjUnvisited(int v){<br />\n        for(int i=0;i&lt;nVerts;i++){<br />\n            if(adjMat[v][i]==1&amp;&amp;vertexList[i].wasVisited==false){<br />\n                return i;<br />\n            }<br />\n        }<br />\n        return -1;<br />\n    boolean hasCycles(){<br />\n        s = new Stack();<br />\n        vertexList[0].wasVisited = true;<br />\n        s.push(0);<br />\n        while(!s.isEmpty()){<br />\n            int k = getAdjUnvisited(s.peek());<br />\n             if(k==-1){<br />\n                s.pop();<br />\n            }else{<br />\n                for(int p = 0;p&lt;nVerts;p++){<br />\n                    if(adjMat[k][p]==1&amp;&amp;vertexList[p].wasVisited==true){<br />\n                           if(p!=s.peek()){<br />\n                               return true;<br />\n                           }<br />\n                    }<br />\n                }<br />\n                s.push(k);<br />\n                vertexList[k].wasVisited=true;<br />\n                }<br />\n            }<br />\n        for(int j=0; j&lt;nVerts; j++) // reset flags<br />\n            vertexList[j].wasVisited = false;<br />\n        return false;<br />\n    }<br />\n</code></p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-29245">\r\n        <div id="dsq-comment-header-29245" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29245">\r\n                <span id="dsq-author-user-29245">gb</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29245" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29245" class="dsq-comment-message"><p>Can you please post proper formatted code?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-29261">\r\n        <div id="dsq-comment-header-29261" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29261">\r\n                <span id="dsq-author-user-29261">pavansrinivas</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29261" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29261" class="dsq-comment-message"><p>i used proper formatting,but sometimes it is messing up the code ..posting it without formatting</p>\n<p>public class Vertex {<br />\n    public char label;<br />\n    public boolean wasVisited;<br />\n    public Vertex(char lab)<br />\n    {<br />\n        label = lab;<br />\n        wasVisited = false;<br />\n    }<br />\n}<br />\npublic class Graph {<br />\n    private final int MAX_VERTS = 20;<br />\n    private Vertex[] vertexList;<br />\n    private int adjMat[][];<br />\n    private int nVerts;<br />\n    Stack s  ;<br />\n    public Graph() {<br />\n        vertexList = new Vertex[MAX_VERTS];<br />\n        adjMat = new int[MAX_VERTS][MAX_VERTS];<br />\n        nVerts = 0;<br />\n        for (int j = 0; j &lt; MAX_VERTS; j++)<br />\n            for (int k = 0; k &lt; MAX_VERTS; k++)<br />\n                adjMat[j][k] = 0;<br />\n    }<br />\n    public void addVertex(char lab) {<br />\n        vertexList[nVerts++] = new Vertex(lab);<br />\n    }<br />\n    public void addEdge(int start, int end) {<br />\n        adjMat[start][end] = 1;<br />\n        adjMat[end][start] = 1;<br />\n    }<br />\n    public void displayVertex(int v) {<br />\n        System.out.print(vertexList[v].label);<br />\n    }<br />\n    private int getAdjUnvisited(int v){<br />\n        for(int i=0;i&lt;nVerts;i++){<br />\n            if(adjMat[v][i]==1&amp;&amp;vertexList[i].wasVisited==false){<br />\n                return i;<br />\n            }<br />\n        }<br />\n        return -1;<br />\n    boolean hasCycles(){<br />\n        s = new Stack();<br />\n        vertexList[0].wasVisited = true;<br />\n        s.push(0);<br />\n        while(!s.isEmpty()){<br />\n            int k = getAdjUnvisited(s.peek());<br />\n             if(k==-1){<br />\n                s.pop();<br />\n            }else{<br />\n                for(int p = 0;p&lt;nVerts;p++){<br />\n                    if(adjMat[k][p]==1&amp;&amp;vertexList[p].wasVisited==true){<br />\n                           if(p!=s.peek()){<br />\n                               return true;<br />\n                           }<br />\n                    }<br />\n                }<br />\n                s.push(k);<br />\n                vertexList[k].wasVisited=true;<br />\n                }<br />\n            }<br />\n        for(int j=0; j&lt;nVerts; j++) // reset flags<br />\n            vertexList[j].wasVisited = false;<br />\n        return false;<br />\n    }</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-4" id="dsq-comment-29262">\r\n        <div id="dsq-comment-header-29262" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29262">\r\n                <span id="dsq-author-user-29262">pavansrinivas</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29262" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29262" class="dsq-comment-message"><p>don&#8217;t know why this is happenning..</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-28935">\r\n        <div id="dsq-comment-header-28935" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28935">\r\n                <span id="dsq-author-user-28935">pavansrinivas</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28935" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28935" class="dsq-comment-message"><p>There is a typo in the driver function&#8230;the graph(g1)  is not cyclic&#8230;E(1,2) is missing..</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-28903">\r\n        <div id="dsq-comment-header-28903" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28903">\r\n                <span id="dsq-author-user-28903">Yash Girdhar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28903" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28903" class="dsq-comment-message"><p>so the difference in finding a cycle in a directed graph and a undirected graph is just the use of a parent?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-28995">\r\n        <div id="dsq-comment-header-28995" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28995">\r\n                <span id="dsq-author-user-28995">phoenix</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28995" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28995" class="dsq-comment-message"><p>No, for finding a cycle in directed graph, you will have to maintain a separate recursion stack which will contain the elements covered in a particular recursion of dfs. Because in directed graph, just reaching a node twice doesn&#8217;t mean that there is a cycle.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-35302">\r\n        <div id="dsq-comment-header-35302" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35302">\r\n                <span id="dsq-author-user-35302">D</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35302" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35302" class="dsq-comment-message"><p>Are you sure that doesn&#8217;t mean there is a cycle? If you hit the node once&#8230; then traveled somewhere&#8230; the ended up again hitting that node&#8230; then you could travel the same path you went before.. then re hit that node once again.. and repeat. AKA cycle.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/detect-cycle-undirected-graph/\';\r\nvar disqus_identifier = \'123438 http://www.geeksforgeeks.org/?p=123438\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Detect cycle in an undirected graph";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(402)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(122)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(80)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,050)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(13)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.941176470588pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.838235294118pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.661764705882pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'253 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.470588235294pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.220588235294pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 17.058823529412pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.485294117647pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.367647058824pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.352941176471pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.382352941176pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.382352941176pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'61 topics\' style=\'font-size: 15.720588235294pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.544117647059pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.676470588235pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.676470588235pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.705882352941pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 12.014705882353pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.5pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9558823529412pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.319 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-02-28 18:35:47 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p431
sb.