ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/IntervalTree'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/IntervalTree.java'
p11
atp12
Rp13
sS'title'
p14
VInterval Tree
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/interval-tree/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(cbs4.element
NavigableString
p44
c__builtin__
unicode
p45
V Given an interval x, find if x overlaps with any of the existing intervals.
p46
tp47
Rp48
(dp49
g34
g0
(g22
g2
Ntp50
Rp51
(dp52
g26
I00
sg27
g0
(g44
g45
V\u000a
p53
tp54
Rp55
(dp56
g34
g0
(g22
g2
Ntp57
Rp58
(dp59
g26
I01
sg27
g0
(g44
g45
VRemove an interval
p60
tp61
Rp62
(dp63
g34
g0
(g22
g2
Ntp64
Rp65
(dp66
g26
I00
sg27
g0
(g44
g45
V\u000a
p67
tp68
Rp69
(dp70
g34
g0
(g22
g2
Ntp71
Rp72
(dp73
g26
I01
sg27
g0
(g44
g45
VAdd an interval
p74
tp75
Rp76
(dp77
g34
g0
(g22
g2
Ntp78
Rp79
(dp80
g26
I00
sg27
g0
(g44
g45
V\u000a
p81
tp82
Rp83
(dp84
g34
g0
(g22
g2
Ntp85
Rp86
(dp87
g26
I01
sg27
g0
(g22
g2
Ntp88
Rp89
(dp90
g26
I00
sg27
g0
(g44
g45
VConsider a situation where we have a set of intervals and we need following operations to be implemented efficiently.  
p91
tp92
Rp93
(dp94
g34
Nsg27
g39
sg28
g89
sg37
g89
sg31
g39
sbsg28
g86
sg29
Vspan
p95
sg31
g39
sg32
Nsg33
Nsg34
g93
sg35
(dp96
Vid
p97
Vmore-125741
p98
ssg37
g86
sS'parser_class'
p99
cbs4
BeautifulSoup
p100
sS'hidden'
p101
I00
sS'contents'
p102
(lp103
sbsg28
g83
sg29
Vbr
p104
sg31
g39
sg32
Nsg33
Nsg34
g89
sg35
(dp105
sg37
g83
sg99
g100
sg101
I00
sg102
(lp106
sbsg27
g86
sg28
g79
sg37
g79
sg31
g39
sbsg28
g76
sg29
Vstrong
p107
sg31
g39
sg32
Nsg33
Nsg34
g83
sg35
(dp108
sg37
g0
(g44
g45
V1) 
p109
tp110
Rp111
(dp112
g34
Nsg27
g79
sg28
Nsg37
g76
sg31
g79
sbsg99
g100
sg101
I00
sg102
(lp113
g111
asbsg27
g111
sg28
g72
sg37
g72
sg31
g39
sbsg28
g69
sg29
Vbr
p114
sg31
g39
sg32
Nsg33
Nsg34
g76
sg35
(dp115
sg37
g69
sg99
g100
sg101
I00
sg102
(lp116
sbsg27
g72
sg28
g65
sg37
g65
sg31
g39
sbsg28
g62
sg29
Vstrong
p117
sg31
g39
sg32
Nsg33
Nsg34
g69
sg35
(dp118
sg37
g0
(g44
g45
V2) 
p119
tp120
Rp121
(dp122
g34
Nsg27
g65
sg28
Nsg37
g62
sg31
g65
sbsg99
g100
sg101
I00
sg102
(lp123
g121
asbsg27
g121
sg28
g58
sg37
g58
sg31
g39
sbsg28
g55
sg29
Vbr
p124
sg31
g39
sg32
Nsg33
Nsg34
g62
sg35
(dp125
sg37
g55
sg99
g100
sg101
I00
sg102
(lp126
sbsg27
g58
sg28
g51
sg37
g51
sg31
g39
sbsg28
g48
sg29
Vstrong
p127
sg31
g39
sg32
Nsg33
Nsg34
g55
sg35
(dp128
sg37
g0
(g44
g45
V3)
p129
tp130
Rp131
(dp132
g34
Nsg27
g51
sg28
Nsg37
g48
sg31
g51
sbsg99
g100
sg101
I00
sg102
(lp133
g131
asbsg27
g131
sg28
Nsg37
g42
sg31
g39
sbsg28
g0
(g22
g2
Ntp134
Rp135
(dp136
g26
I00
sg27
g0
(g44
g45
V, etc to maintain set of intervals so that all operations can be done in O(Logn) time.  
p137
tp138
Rp139
(dp140
g34
g0
(g22
g2
Ntp141
Rp142
(dp143
g26
I00
sg27
g0
(g44
g45
V, 
p144
tp145
Rp146
(dp147
g34
g0
(g22
g2
Ntp148
Rp149
(dp150
g26
I00
sg27
g0
(g44
g45
V The idea is to augment a self-balancing Binary Search Tree (BST) like 
p151
tp152
Rp153
(dp154
g34
g0
(g22
g2
Ntp155
Rp156
(dp157
g26
I00
sg27
g42
sg28
g153
sg29
Vem
p158
sg31
g42
sg32
Nsg33
Nsg34
Nsg35
(dp159
sg37
g0
(g22
g2
Ntp160
Rp161
(dp162
g26
I00
sg27
g156
sg28
Nsg29
Vstrong
p163
sg31
g156
sg32
Nsg33
Nsg34
Nsg35
(dp164
sg37
g0
(g44
g45
VInterval Tree:
p165
tp166
Rp167
(dp168
g34
Nsg27
g161
sg28
Nsg37
g153
sg31
g161
sbsg99
g100
sg101
I00
sg102
(lp169
g167
asbsg99
g100
sg101
I00
sg102
(lp170
g161
asbsg27
g167
sg28
g149
sg37
g149
sg31
g42
sbsg28
g146
sg29
Va
p171
sg31
g42
sg32
Nsg33
Nsg34
g153
sg35
(dp172
Vhref
p173
Vhttp://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/
p174
sVtarget
p175
V_blank
p176
ssg37
g0
(g44
g45
VRed Black Tree
p177
tp178
Rp179
(dp180
g34
Nsg27
g149
sg28
Nsg37
g146
sg31
g149
sbsg99
g100
sg101
I00
sg102
(lp181
g179
asbsg27
g179
sg28
g142
sg37
g142
sg31
g42
sbsg28
g139
sg29
g171
sg31
g42
sg32
Nsg33
Nsg34
g146
sg35
(dp182
Vhref
p183
Vhttp://www.geeksforgeeks.org/avl-tree-set-1-insertion/
p184
sVtarget
p185
V_blank
p186
ssg37
g0
(g44
g45
VAVL Tree
p187
tp188
Rp189
(dp190
g34
Nsg27
g142
sg28
Nsg37
g139
sg31
g142
sbsg99
g100
sg101
I00
sg102
(lp191
g189
asbsg27
g189
sg28
Nsg37
g135
sg31
g42
sbsg28
g0
(g22
g2
Ntp192
Rp193
(dp194
g26
I00
sg27
g0
(g44
g45
V value in subtree rooted with this node.
p195
tp196
Rp197
(dp198
g34
g0
(g22
g2
Ntp199
Rp200
(dp201
g26
I00
sg27
g0
(g44
g45
V: Maximum 
p202
tp203
Rp204
(dp205
g34
g0
(g22
g2
Ntp206
Rp207
(dp208
g26
I00
sg27
g0
(g44
g45
V\u000ab) 
p209
tp210
Rp211
(dp212
g34
g0
(g22
g2
Ntp213
Rp214
(dp215
g26
I01
sg27
g0
(g44
g45
V[low, high]
p216
tp217
Rp218
(dp219
g34
Nsg27
g0
(g22
g2
Ntp220
Rp221
(dp222
g26
I00
sg27
g0
(g44
g45
V: An interval which is represented as a pair 
p223
tp224
Rp225
(dp226
g34
g0
(g22
g2
Ntp227
Rp228
(dp229
g26
I00
sg27
g0
(g44
g45
V\u000aa) 
p230
tp231
Rp232
(dp233
g34
g0
(g22
g2
Ntp234
Rp235
(dp236
g26
I01
sg27
g0
(g44
g45
VEvery node of Interval Tree stores following information.
p237
tp238
Rp239
(dp240
g34
Nsg27
g135
sg28
g235
sg37
g235
sg31
g135
sbsg28
g232
sg29
Vbr
p241
sg31
g135
sg32
Nsg33
Nsg34
g239
sg35
(dp242
sg37
g232
sg99
g100
sg101
I00
sg102
(lp243
sbsg27
g235
sg28
g228
sg37
g228
sg31
g135
sbsg28
g225
sg29
Vstrong
p244
sg31
g135
sg32
Nsg33
Nsg34
g232
sg35
(dp245
sg37
g0
(g44
g45
Vi
p246
tp247
Rp248
(dp249
g34
Nsg27
g228
sg28
Nsg37
g225
sg31
g228
sbsg99
g100
sg101
I00
sg102
(lp250
g248
asbsg27
g248
sg28
g221
sg37
g221
sg31
g135
sbsg28
g214
sg29
Vem
p251
sg31
g135
sg32
Nsg33
Nsg34
g225
sg35
(dp252
sg37
g218
sg99
g100
sg101
I00
sg102
(lp253
g218
asbsg28
Nsg37
g214
sg31
g221
sbsg28
g211
sg29
Vbr
p254
sg31
g135
sg32
Nsg33
Nsg34
g221
sg35
(dp255
sg37
g211
sg99
g100
sg101
I00
sg102
(lp256
sbsg27
g214
sg28
g207
sg37
g207
sg31
g135
sbsg28
g204
sg29
Vstrong
p257
sg31
g135
sg32
Nsg33
Nsg34
g211
sg35
(dp258
sg37
g0
(g44
g45
Vmax
p259
tp260
Rp261
(dp262
g34
Nsg27
g207
sg28
Nsg37
g204
sg31
g207
sbsg99
g100
sg101
I00
sg102
(lp263
g261
asbsg27
g261
sg28
g200
sg37
g200
sg31
g135
sbsg28
g197
sg29
Vem
p264
sg31
g135
sg32
Nsg33
Nsg34
g204
sg35
(dp265
sg37
g0
(g44
g45
Vhigh 
p266
tp267
Rp268
(dp269
g34
Nsg27
g200
sg28
Nsg37
g197
sg31
g200
sbsg99
g100
sg101
I00
sg102
(lp270
g268
asbsg27
g268
sg28
Nsg37
g193
sg31
g135
sbsg28
g0
(g22
g2
Ntp271
Rp272
(dp273
g26
I00
sg27
g0
(g44
g45
VThe low value of an interval is used as key to maintain order in BST. The insert and delete operations are same as insert and delete in self-balancing BST used. 
p274
tp275
Rp276
(dp277
g34
Nsg27
g193
sg28
Nsg37
g272
sg31
g193
sbsg28
g0
(g22
g2
Ntp278
Rp279
(dp280
g26
I00
sg27
g0
(g22
g2
Ntp281
Rp282
(dp283
g26
I01
sg27
g0
(g22
g2
Ntp284
Rp285
(dp286
g26
I00
sg27
g272
sg28
Nsg29
g171
sg31
g272
sg32
Nsg33
Nsg34
Nsg35
(dp287
Vhref
p288
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/IntervalSearcTree.png
p289
ssg37
g282
sg99
g100
sg101
I00
sg102
(lp290
g282
asbsg28
Nsg29
Vimg
p291
sg31
g285
sg32
Nsg33
Nsg34
Nsg35
(dp292
Vsrc
p293
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/IntervalSearcTree.png
p294
sValt
p295
VIntervalSearcTree
p296
sVheight
p297
V250
p298
sVclass
p299
(lp300
Valigncenter
p301
aVsize-full
p302
aVwp-image-127586
p303
asVwidth
p304
V416
p305
ssg37
g279
sg99
g100
sg101
I00
sg102
(lp306
sbsg28
Nsg29
Vp
p307
sg31
g24
sg32
Nsg33
Nsg34
g272
sg35
(dp308
sg37
g0
(g44
g45
VThe main operation is to search for an overlapping interval.  Following is algorithm for searching an overlapping interval 
p309
tp310
Rp311
(dp312
g34
Nsg27
g279
sg28
g0
(g22
g2
Ntp313
Rp314
(dp315
g26
I00
sg27
g311
sg28
g0
(g44
g45
V in an Interval tree rooted with 
p316
tp317
Rp318
(dp319
g34
g314
sg27
g0
(g44
g45
Vx
p320
tp321
Rp322
(dp323
g34
Nsg27
g314
sg28
Nsg37
g318
sg31
g314
sbsg28
g0
(g22
g2
Ntp324
Rp325
(dp326
g26
I00
sg27
g318
sg28
g0
(g44
g45
V.\u000a
p327
tp328
Rp329
(dp330
g34
g325
sg27
g0
(g44
g45
Vroot
p331
tp332
Rp333
(dp334
g34
Nsg27
g325
sg28
Nsg37
g329
sg31
g325
sbsg28
g0
(g22
g2
Ntp335
Rp336
(dp337
g26
I00
sg27
g329
sg28
g0
(g44
g45
V\u000a
p338
tp339
Rp340
(dp341
g34
g336
sg27
g0
(g44
g45
V Else recur for right child.\u000a
p342
tp343
Rp344
(dp345
g34
g0
(g22
g2
Ntp346
Rp347
(dp348
g26
I00
sg27
g0
(g44
g45
V in left child \u000ais greater than x's low value, recur for left child\u000a\u000a
p349
tp350
Rp351
(dp352
g34
g0
(g22
g2
Ntp353
Rp354
(dp355
g26
I00
sg27
g0
(g44
g45
V If left child of root is not empty and the 
p356
tp357
Rp358
(dp359
g34
g0
(g22
g2
Ntp360
Rp361
(dp362
g26
I00
sg27
g0
(g44
g45
VIf x overlaps with root's interval, return the root's interval.\u000a\u000a
p363
tp364
Rp365
(dp366
g34
g0
(g22
g2
Ntp367
Rp368
(dp369
g26
I00
sg27
g0
(g44
g45
V\u000aInterval overlappingIntervalSearch(root, x)\u000a
p370
tp371
Rp372
(dp373
g34
Nsg27
g336
sg28
g368
sg37
g368
sg31
g336
sbsg28
g365
sg29
Vstrong
p374
sg31
g336
sg32
Nsg33
Nsg34
g372
sg35
(dp375
sg37
g0
(g44
g45
V1) 
p376
tp377
Rp378
(dp379
g34
Nsg27
g368
sg28
Nsg37
g365
sg31
g368
sbsg99
g100
sg101
I00
sg102
(lp380
g378
asbsg27
g378
sg28
g361
sg37
g361
sg31
g336
sbsg28
g358
sg29
Vstrong
p381
sg31
g336
sg32
Nsg33
Nsg34
g365
sg35
(dp382
sg37
g0
(g44
g45
V2)
p383
tp384
Rp385
(dp386
g34
Nsg27
g361
sg28
Nsg37
g358
sg31
g361
sbsg99
g100
sg101
I00
sg102
(lp387
g385
asbsg27
g385
sg28
g354
sg37
g354
sg31
g336
sbsg28
g351
sg29
Vem
p388
sg31
g336
sg32
Nsg33
Nsg34
g358
sg35
(dp389
sg37
g0
(g44
g45
Vmax 
p390
tp391
Rp392
(dp393
g34
Nsg27
g354
sg28
Nsg37
g351
sg31
g354
sbsg99
g100
sg101
I00
sg102
(lp394
g392
asbsg27
g392
sg28
g347
sg37
g347
sg31
g336
sbsg28
g344
sg29
Vstrong
p395
sg31
g336
sg32
Nsg33
Nsg34
g351
sg35
(dp396
sg37
g0
(g44
g45
V3)
p397
tp398
Rp399
(dp400
g34
Nsg27
g347
sg28
Nsg37
g344
sg31
g347
sbsg99
g100
sg101
I00
sg102
(lp401
g399
asbsg27
g399
sg28
Nsg37
g340
sg31
g336
sbsg28
g0
(g22
g2
Ntp402
Rp403
(dp404
g26
I00
sg27
g340
sg28
g0
(g44
g45
V\u000a
p405
tp406
Rp407
(dp408
g34
g403
sg27
g0
(g44
g45
V\u000aLet the interval to be searched be x. We need to prove this in for following two cases.
p409
tp410
Rp411
(dp412
g34
g0
(g22
g2
Ntp413
Rp414
(dp415
g26
I01
sg27
g0
(g44
g45
VHow does the above algorithm work?
p416
tp417
Rp418
(dp419
g34
Nsg27
g0
(g22
g2
Ntp420
Rp421
(dp422
g26
I00
sg27
g0
(g22
g2
Ntp423
Rp424
(dp425
g26
I00
sg27
g403
sg28
g414
sg29
Vem
p426
sg31
g403
sg32
Nsg33
Nsg34
Nsg35
(dp427
sg37
g421
sg99
g100
sg101
I00
sg102
(lp428
g421
asbsg28
Nsg29
Vstrong
p429
sg31
g424
sg32
Nsg33
Nsg34
Nsg35
(dp430
sg37
g418
sg99
g100
sg101
I00
sg102
(lp431
g418
asbsg28
Nsg37
g414
sg31
g421
sbsg28
g411
sg29
Vbr
p432
sg31
g403
sg32
Nsg33
Nsg34
g424
sg35
(dp433
sg37
g411
sg99
g100
sg101
I00
sg102
(lp434
sbsg27
g414
sg28
Nsg37
g407
sg31
g403
sbsg28
g0
(g22
g2
Ntp435
Rp436
(dp437
g26
I00
sg27
g407
sg28
g0
(g44
g45
V\u000a
p438
tp439
Rp440
(dp441
g34
g436
sg27
g0
(g44
g45
V.  So the interval cannot be present in left subtree.
p442
tp443
Rp444
(dp445
g34
g0
(g22
g2
Ntp446
Rp447
(dp448
g26
I00
sg27
g0
(g44
g45
V\u000ab) There is no overlap in either subtree: We go to right subtree only when either left is NULL or maximum value in left is smaller than 
p449
tp450
Rp451
(dp452
g34
g0
(g22
g2
Ntp453
Rp454
(dp455
g26
I01
sg27
g0
(g44
g45
V\u000aa) There is an overlap in right subtree: This is fine as we need to return one overlapping interval.
p456
tp457
Rp458
(dp459
g34
g0
(g22
g2
Ntp460
Rp461
(dp462
g26
I01
sg27
g0
(g44
g45
VWhen we go to right subtree, one of the following must be true.
p463
tp464
Rp465
(dp466
g34
Nsg27
g0
(g22
g2
Ntp467
Rp468
(dp469
g26
I00
sg27
g0
(g44
g45
V 
p470
tp471
Rp472
(dp473
g34
g0
(g22
g2
Ntp474
Rp475
(dp476
g26
I00
sg27
g436
sg28
g472
sg29
Vem
p477
sg31
g436
sg32
Nsg33
Nsg34
Nsg35
(dp478
sg37
g0
(g22
g2
Ntp479
Rp480
(dp481
g26
I00
sg27
g475
sg28
Nsg29
Vstrong
p482
sg31
g475
sg32
Nsg33
Nsg34
Nsg35
(dp483
sg37
g0
(g44
g45
VCase 1:
p484
tp485
Rp486
(dp487
g34
Nsg27
g480
sg28
Nsg37
g472
sg31
g480
sbsg99
g100
sg101
I00
sg102
(lp488
g486
asbsg99
g100
sg101
I00
sg102
(lp489
g480
asbsg27
g486
sg28
g468
sg37
g468
sg31
g436
sbsg28
g461
sg29
Vem
p490
sg31
g436
sg32
Nsg33
Nsg34
g472
sg35
(dp491
sg37
g465
sg99
g100
sg101
I00
sg102
(lp492
g465
asbsg28
Nsg37
g461
sg31
g468
sbsg28
g458
sg29
Vbr
p493
sg31
g436
sg32
Nsg33
Nsg34
g468
sg35
(dp494
sg37
g458
sg99
g100
sg101
I00
sg102
(lp495
sbsg27
g461
sg28
g454
sg37
g454
sg31
g436
sbsg28
g451
sg29
Vbr
p496
sg31
g436
sg32
Nsg33
Nsg34
g458
sg35
(dp497
sg37
g451
sg99
g100
sg101
I00
sg102
(lp498
sbsg27
g454
sg28
g447
sg37
g447
sg31
g436
sbsg28
g444
sg29
Vem
p499
sg31
g436
sg32
Nsg33
Nsg34
g451
sg35
(dp500
sg37
g0
(g44
g45
Vx.low
p501
tp502
Rp503
(dp504
g34
Nsg27
g447
sg28
Nsg37
g444
sg31
g447
sbsg99
g100
sg101
I00
sg102
(lp505
g503
asbsg27
g503
sg28
Nsg37
g440
sg31
g436
sbsg28
g0
(g22
g2
Ntp506
Rp507
(dp508
g26
I00
sg27
g440
sg28
g0
(g44
g45
V\u000a
p509
tp510
Rp511
(dp512
g34
g507
sg27
g0
(g44
g45
V cannot overlap with any interval in right subtree.
p513
tp514
Rp515
(dp516
g34
g0
(g22
g2
Ntp517
Rp518
(dp519
g26
I00
sg27
g0
(g44
g45
V.  So
p520
tp521
Rp522
(dp523
g34
g0
(g22
g2
Ntp524
Rp525
(dp526
g26
I00
sg27
g0
(g44
g45
V\u000a\u2026. From above two facts, we can say all intervals in right subtree have low value greater than 
p527
tp528
Rp529
(dp530
g34
g0
(g22
g2
Ntp531
Rp532
(dp533
g26
I01
sg27
g0
(g44
g45
V\u2018.
p534
tp535
Rp536
(dp537
g34
g0
(g22
g2
Ntp538
Rp539
(dp540
g26
I00
sg27
g0
(g44
g45
V\u000a\u2026. All nodes in BST are ordered by low value, so all nodes in right subtree must have low value greater than \u2018
p541
tp542
Rp543
(dp544
g34
g0
(g22
g2
Ntp545
Rp546
(dp547
g26
I01
sg27
g0
(g44
g45
V\u2018.
p548
tp549
Rp550
(dp551
g34
g0
(g22
g2
Ntp552
Rp553
(dp554
g26
I00
sg27
g0
(g44
g45
V must be smaller than \u2018
p555
tp556
Rp557
(dp558
g34
g0
(g22
g2
Ntp559
Rp560
(dp561
g26
I00
sg27
g0
(g44
g45
V doesn\u2019t overlap with any node in left subtree 
p562
tp563
Rp564
(dp565
g34
g0
(g22
g2
Ntp566
Rp567
(dp568
g26
I00
sg27
g0
(g44
g45
V\u000a\u2026. Since 
p569
tp570
Rp571
(dp572
g34
g0
(g22
g2
Ntp573
Rp574
(dp575
g26
I01
sg27
g0
(g44
g45
V in left subtree.
p576
tp577
Rp578
(dp579
g34
g0
(g22
g2
Ntp580
Rp581
(dp582
g26
I00
sg27
g0
(g44
g45
V\u000a\u2026. max in left subtree is a high of one of the intervals let us say 
p583
tp584
Rp585
(dp586
g34
g0
(g22
g2
Ntp587
Rp588
(dp589
g26
I01
sg27
g0
(g44
g45
V in left subtree
p590
tp591
Rp592
(dp593
g34
g0
(g22
g2
Ntp594
Rp595
(dp596
g26
I00
sg27
g0
(g44
g45
V\u000a\u2026  We went to left subtree because 
p597
tp598
Rp599
(dp600
g34
g0
(g22
g2
Ntp601
Rp602
(dp603
g26
I01
sg27
g0
(g44
g45
V\u000ab) There is no overlap in either subtree:  This is the most important part.  We need to consider following facts.
p604
tp605
Rp606
(dp607
g34
g0
(g22
g2
Ntp608
Rp609
(dp610
g26
I01
sg27
g0
(g44
g45
V\u000aa) There is an overlap in left subtree: This is fine as we need to return one overlapping interval.
p611
tp612
Rp613
(dp614
g34
g0
(g22
g2
Ntp615
Rp616
(dp617
g26
I01
sg27
g0
(g44
g45
VWhen we go to left subtree, one of the following must be true.
p618
tp619
Rp620
(dp621
g34
Nsg27
g0
(g22
g2
Ntp622
Rp623
(dp624
g26
I00
sg27
g0
(g44
g45
VCase 2: 
p625
tp626
Rp627
(dp628
g34
Nsg27
g0
(g22
g2
Ntp629
Rp630
(dp631
g26
I00
sg27
g0
(g22
g2
Ntp632
Rp633
(dp634
g26
I00
sg27
g507
sg28
g623
sg29
Vem
p635
sg31
g507
sg32
Nsg33
Nsg34
Nsg35
(dp636
sg37
g630
sg99
g100
sg101
I00
sg102
(lp637
g630
asbsg28
Nsg29
Vstrong
p638
sg31
g633
sg32
Nsg33
Nsg34
Nsg35
(dp639
sg37
g627
sg99
g100
sg101
I00
sg102
(lp640
g627
asbsg28
Nsg37
g623
sg31
g630
sbsg28
g616
sg29
Vem
p641
sg31
g507
sg32
Nsg33
Nsg34
g633
sg35
(dp642
sg37
g620
sg99
g100
sg101
I00
sg102
(lp643
g620
asbsg28
Nsg37
g616
sg31
g623
sbsg28
g613
sg29
Vbr
p644
sg31
g507
sg32
Nsg33
Nsg34
g623
sg35
(dp645
sg37
g613
sg99
g100
sg101
I00
sg102
(lp646
sbsg27
g616
sg28
g609
sg37
g609
sg31
g507
sbsg28
g606
sg29
Vbr
p647
sg31
g507
sg32
Nsg33
Nsg34
g613
sg35
(dp648
sg37
g606
sg99
g100
sg101
I00
sg102
(lp649
sbsg27
g609
sg28
g602
sg37
g602
sg31
g507
sbsg28
g599
sg29
Vbr
p650
sg31
g507
sg32
Nsg33
Nsg34
g606
sg35
(dp651
sg37
g599
sg99
g100
sg101
I00
sg102
(lp652
sbsg27
g602
sg28
g595
sg37
g595
sg31
g507
sbsg28
g592
sg29
Vem
p653
sg31
g507
sg32
Nsg33
Nsg34
g599
sg35
(dp654
sg37
g0
(g44
g45
Vx.low <= max
p655
tp656
Rp657
(dp658
g34
Nsg27
g595
sg28
Nsg37
g592
sg31
g595
sbsg99
g100
sg101
I00
sg102
(lp659
g657
asbsg27
g657
sg28
g588
sg37
g588
sg31
g507
sbsg28
g585
sg29
Vbr
p660
sg31
g507
sg32
Nsg33
Nsg34
g592
sg35
(dp661
sg37
g585
sg99
g100
sg101
I00
sg102
(lp662
sbsg27
g588
sg28
g581
sg37
g581
sg31
g507
sbsg28
g578
sg29
Vem
p663
sg31
g507
sg32
Nsg33
Nsg34
g585
sg35
(dp664
sg37
g0
(g44
g45
V[a, max]
p665
tp666
Rp667
(dp668
g34
Nsg27
g581
sg28
Nsg37
g578
sg31
g581
sbsg99
g100
sg101
I00
sg102
(lp669
g667
asbsg27
g667
sg28
g574
sg37
g574
sg31
g507
sbsg28
g571
sg29
Vbr
p670
sg31
g507
sg32
Nsg33
Nsg34
g578
sg35
(dp671
sg37
g571
sg99
g100
sg101
I00
sg102
(lp672
sbsg27
g574
sg28
g567
sg37
g567
sg31
g507
sbsg28
g564
sg29
Vem
p673
sg31
g507
sg32
Nsg33
Nsg34
g571
sg35
(dp674
sg37
g0
(g44
g45
g320
tp675
Rp676
(dp677
g34
Nsg27
g567
sg28
Nsg37
g564
sg31
g567
sbsg99
g100
sg101
I00
sg102
(lp678
g676
asbsg27
g676
sg28
g560
sg37
g560
sg31
g507
sbsg28
g557
sg29
Vem
p679
sg31
g507
sg32
Nsg33
Nsg34
g564
sg35
(dp680
sg37
g0
(g44
g45
Vx.low
p681
tp682
Rp683
(dp684
g34
Nsg27
g560
sg28
Nsg37
g557
sg31
g560
sbsg99
g100
sg101
I00
sg102
(lp685
g683
asbsg27
g683
sg28
g553
sg37
g553
sg31
g507
sbsg28
g550
sg29
Vem
p686
sg31
g507
sg32
Nsg33
Nsg34
g557
sg35
(dp687
sg37
g0
(g44
g45
g171
tp688
Rp689
(dp690
g34
Nsg27
g553
sg28
Nsg37
g550
sg31
g553
sbsg99
g100
sg101
I00
sg102
(lp691
g689
asbsg27
g689
sg28
g546
sg37
g546
sg31
g507
sbsg28
g543
sg29
Vbr
p692
sg31
g507
sg32
Nsg33
Nsg34
g550
sg35
(dp693
sg37
g543
sg99
g100
sg101
I00
sg102
(lp694
sbsg27
g546
sg28
g539
sg37
g539
sg31
g507
sbsg28
g536
sg29
Vem
p695
sg31
g507
sg32
Nsg33
Nsg34
g543
sg35
(dp696
sg37
g0
(g44
g45
g171
tp697
Rp698
(dp699
g34
Nsg27
g539
sg28
Nsg37
g536
sg31
g539
sbsg99
g100
sg101
I00
sg102
(lp700
g698
asbsg27
g698
sg28
g532
sg37
g532
sg31
g507
sbsg28
g529
sg29
Vbr
p701
sg31
g507
sg32
Nsg33
Nsg34
g536
sg35
(dp702
sg37
g529
sg99
g100
sg101
I00
sg102
(lp703
sbsg27
g532
sg28
g525
sg37
g525
sg31
g507
sbsg28
g522
sg29
Vem
p704
sg31
g507
sg32
Nsg33
Nsg34
g529
sg35
(dp705
sg37
g0
(g44
g45
Vx.low
p706
tp707
Rp708
(dp709
g34
Nsg27
g525
sg28
Nsg37
g522
sg31
g525
sbsg99
g100
sg101
I00
sg102
(lp710
g708
asbsg27
g708
sg28
g518
sg37
g518
sg31
g507
sbsg28
g515
sg29
Vem
p711
sg31
g507
sg32
Nsg33
Nsg34
g522
sg35
(dp712
sg37
g0
(g44
g45
V x
p713
tp714
Rp715
(dp716
g34
Nsg27
g518
sg28
Nsg37
g515
sg31
g518
sbsg99
g100
sg101
I00
sg102
(lp717
g715
asbsg27
g715
sg28
Nsg37
g511
sg31
g507
sbsg28
g0
(g22
g2
Ntp718
Rp719
(dp720
g26
I00
sg27
g511
sg28
g0
(g44
g45
V\u000a
p721
tp722
Rp723
(dp724
g34
g719
sg27
g0
(g44
g45
V is left as an exercise.
p725
tp726
Rp727
(dp728
g34
g0
(g22
g2
Ntp729
Rp730
(dp731
g26
I00
sg27
g0
(g44
g45
V.  
p732
tp733
Rp734
(dp735
g34
g0
(g22
g2
Ntp736
Rp737
(dp738
g26
I00
sg27
g0
(g44
g45
V or 
p739
tp740
Rp741
(dp742
g34
g0
(g22
g2
Ntp743
Rp744
(dp745
g26
I00
sg27
g0
(g44
g45
V to keep things simple. Ideally it should be 
p746
tp747
Rp748
(dp749
g34
g0
(g22
g2
Ntp750
Rp751
(dp752
g26
I00
sg27
g0
(g44
g45
V\u000aFollowing is C++ implementation of Interval Tree. The implementation uses basic 
p753
tp754
Rp755
(dp756
g34
g0
(g22
g2
Ntp757
Rp758
(dp759
g26
I01
sg27
g0
(g44
g45
VImplementation of Interval Tree:
p760
tp761
Rp762
(dp763
g34
Nsg27
g0
(g22
g2
Ntp764
Rp765
(dp766
g26
I00
sg27
g719
sg28
g758
sg29
Vstrong
p767
sg31
g719
sg32
Nsg33
Nsg34
Nsg35
(dp768
sg37
g762
sg99
g100
sg101
I00
sg102
(lp769
g762
asbsg28
Nsg37
g758
sg31
g765
sbsg28
g755
sg29
Vbr
p770
sg31
g719
sg32
Nsg33
Nsg34
g765
sg35
(dp771
sg37
g755
sg99
g100
sg101
I00
sg102
(lp772
sbsg27
g758
sg28
g751
sg37
g751
sg31
g719
sbsg28
g748
sg29
g171
sg31
g719
sg32
Nsg33
Nsg34
g755
sg35
(dp773
Vhref
p774
Vhttp://geeksquiz.com/binary-search-tree-set-1-search-and-insertion/
p775
sVtarget
p776
V_blank
p777
ssg37
g0
(g44
g45
Vinsert operation of BST
p778
tp779
Rp780
(dp781
g34
Nsg27
g751
sg28
Nsg37
g748
sg31
g751
sbsg99
g100
sg101
I00
sg102
(lp782
g780
asbsg27
g780
sg28
g744
sg37
g744
sg31
g719
sbsg28
g741
sg29
g171
sg31
g719
sg32
Nsg33
Nsg34
g748
sg35
(dp783
Vhref
p784
Vhttp://www.geeksforgeeks.org/avl-tree-set-1-insertion/
p785
sVtarget
p786
V_blank
p787
ssg37
g0
(g44
g45
Vinsertion of AVL Tree
p788
tp789
Rp790
(dp791
g34
Nsg27
g744
sg28
Nsg37
g741
sg31
g744
sbsg99
g100
sg101
I00
sg102
(lp792
g790
asbsg27
g790
sg28
g737
sg37
g737
sg31
g719
sbsg28
g734
sg29
g171
sg31
g719
sg32
Nsg33
Nsg34
g741
sg35
(dp793
Vhref
p794
Vhttp://www.geeksforgeeks.org/avl-tree-set-1-insertion/
p795
sVtarget
p796
V_blank
p797
ssg37
g0
(g44
g45
Vinsertion of Red-Black Tree
p798
tp799
Rp800
(dp801
g34
Nsg27
g737
sg28
Nsg37
g734
sg31
g737
sbsg99
g100
sg101
I00
sg102
(lp802
g800
asbsg27
g800
sg28
g730
sg37
g730
sg31
g719
sbsg28
g727
sg29
g171
sg31
g719
sg32
Nsg33
Nsg34
g734
sg35
(dp803
Vhref
p804
Vhttp://geeksquiz.com/binary-search-tree-set-2-delete/
p805
sVtarget
p806
V_blank
p807
ssg37
g0
(g44
g45
VDeletion from BST
p808
tp809
Rp810
(dp811
g34
Nsg27
g730
sg28
Nsg37
g727
sg31
g730
sbsg99
g100
sg101
I00
sg102
(lp812
g810
asbsg27
g810
sg28
Nsg37
g723
sg31
g719
sbsg28
g0
(g22
g2
Ntp813
Rp814
(dp815
g26
I00
sg27
g723
sg28
g0
(g44
g45
V\u000a
p816
tp817
Rp818
(dp819
g34
g814
sg27
g0
(g44
g45
V\u000a#include <iostream>\u000ausing namespace std;\u000a\u000a// Structure to represent an interval\u000astruct Interval\u000a{\u000a    int low, high;\u000a};\u000a\u000a// Structure to represent a node in Interval Search Tree\u000astruct ITNode\u000a{\u000a    Interval *i;  // 'i' could also be a normal variable\u000a    int max;\u000a    ITNode *left, *right;\u000a};\u000a\u000a// A utility function to create a new Interval Search Tree Node\u000aITNode * newNode(Interval i)\u000a{\u000a    ITNode *temp = new ITNode;\u000a    temp->i = new Interval(i);\u000a    temp->max = i.high;\u000a    temp->left = temp->right = NULL;\u000a};\u000a\u000a// A utility function to insert a new Interval Search Tree Node\u000a// This is similar to BST Insert.  Here the low value of interval\u000a// is used tomaintain BST property\u000aITNode *insert(ITNode *root, Interval i)\u000a{\u000a    // Base case: Tree is empty, new node becomes root\u000a    if (root == NULL)\u000a        return newNode(i);\u000a\u000a    // Get low value of interval at root\u000a    int l = root->i->low;\u000a\u000a    // If root's low value is smaller, then new interval goes to\u000a    // left subtree\u000a    if (i.low < l)\u000a        root->left = insert(root->left, i);\u000a\u000a    // Else, new node goes to right subtree.\u000a    else\u000a        root->right = insert(root->right, i);\u000a\u000a    // Update the max value of this ancestor if needed\u000a    if (root->max < i.high)\u000a        root->max = i.high;\u000a\u000a    return root;\u000a}\u000a\u000a// A utility function to check if given two intervals overlap\u000abool doOVerlap(Interval i1, Interval i2)\u000a{\u000a    if (i1.low <= i2.high && i2.low <= i1.high)\u000a        return true;\u000a    return false;\u000a}\u000a\u000a// The main function that searches a given interval i in a given\u000a// Interval Tree.\u000aInterval *overlapSearch(ITNode *root, Interval i)\u000a{\u000a    // Base Case, tree is empty\u000a    if (root == NULL) return NULL;\u000a\u000a    // If given interval overlaps with root\u000a    if (doOVerlap(*(root->i), i))\u000a        return root->i;\u000a\u000a    // If left child of root is present and max of left child is\u000a    // greater than or equal to given interval, then i may\u000a    // overlap with an interval is left subtree\u000a    if (root->left != NULL && root->left->max >= i.low)\u000a        return overlapSearch(root->left, i);\u000a\u000a    // Else interval can only overlap with right subtree\u000a    return overlapSearch(root->right, i);\u000a}\u000a\u000avoid inorder(ITNode *root)\u000a{\u000a    if (root == NULL) return;\u000a\u000a    inorder(root->left);\u000a\u000a    cout << "[" << root->i->low << ", " << root->i->high << "]"\u000a         << " max = " << root->max << endl;\u000a\u000a    inorder(root->right);\u000a}\u000a\u000a// Driver program to test above functions\u000aint main()\u000a{\u000a    // Let us create interval tree shown in above figure\u000a    Interval ints[] = {{15, 20}, {10, 30}, {17, 19},\u000a        {5, 20}, {12, 15}, {30, 40}\u000a    };\u000a    int n = sizeof(ints)/sizeof(ints[0]);\u000a    ITNode *root = NULL;\u000a    for (int i = 0; i < n; i++)\u000a        root = insert(root, ints[i]);\u000a\u000a    cout << "Inorder traversal of constructed Interval Tree is\u005cn";\u000a    inorder(root);\u000a\u000a    Interval x = {6, 7};\u000a\u000a    cout << "\u005cnSearching for interval [" << x.low << "," << x.high << "]";\u000a    Interval *res = overlapSearch(root, x);\u000a    if (res == NULL)\u000a        cout << "\u005cnNo Overlapping Interval";\u000a    else\u000a        cout << "\u005cnOverlaps with [" << res->low << ", " << res->high << "]";\u000a    return 0;\u000a}\u000a
p820
tp821
Rp822
(dp823
g34
Nsg27
g814
sg28
Nsg37
g818
sg31
g814
sbsg28
g0
(g22
g2
Ntp824
Rp825
(dp826
g26
I00
sg27
g818
sg28
Nsg29
g307
sg31
g279
sg32
Nsg33
Nsg34
g818
sg35
(dp827
sg37
g0
(g44
g45
VOutput:\u000a
p828
tp829
Rp830
(dp831
g34
Nsg27
g825
sg28
g0
(g22
g2
Ntp832
Rp833
(dp834
g26
I00
sg27
g830
sg28
g0
(g44
g45
V\u000a
p835
tp836
Rp837
(dp838
g34
g833
sg27
g0
(g44
g45
VInorder traversal of constructed Interval Tree is\u000a[5, 20] max = 20\u000a[10, 30] max = 30\u000a[12, 15] max = 15\u000a[15, 20] max = 40\u000a[17, 19] max = 40\u000a[30, 40] max = 40\u000a\u000aSearching for interval [6,7]\u000aOverlaps with [5, 20]
p839
tp840
Rp841
(dp842
g34
Nsg27
g833
sg28
Nsg37
g837
sg31
g833
sbsg28
g0
(g22
g2
Ntp843
Rp844
(dp845
g26
I00
sg27
g837
sg28
g0
(g44
g45
V\u000a
p846
tp847
Rp848
(dp849
g34
g844
sg27
g0
(g44
g45
V).
p850
tp851
Rp852
(dp853
g34
g0
(g22
g2
Ntp854
Rp855
(dp856
g26
I00
sg27
g0
(g44
g45
V\u000aInterval tree is mainly a geometric data structure and often used for windowing queries, for instance, to find all roads on a computerized map inside a rectangular viewport, or to find all visible elements inside a three-dimensional scene (Source 
p857
tp858
Rp859
(dp860
g34
g0
(g22
g2
Ntp861
Rp862
(dp863
g26
I01
sg27
g0
(g44
g45
VApplications of Interval Tree:
p864
tp865
Rp866
(dp867
g34
Nsg27
g0
(g22
g2
Ntp868
Rp869
(dp870
g26
I00
sg27
g844
sg28
g862
sg29
Vstrong
p871
sg31
g844
sg32
Nsg33
Nsg34
Nsg35
(dp872
sg37
g866
sg99
g100
sg101
I00
sg102
(lp873
g866
asbsg28
Nsg37
g862
sg31
g869
sbsg28
g859
sg29
Vbr
p874
sg31
g844
sg32
Nsg33
Nsg34
g869
sg35
(dp875
sg37
g859
sg99
g100
sg101
I00
sg102
(lp876
sbsg27
g862
sg28
g855
sg37
g855
sg31
g844
sbsg28
g852
sg29
g171
sg31
g844
sg32
Nsg33
Nsg34
g859
sg35
(dp877
Vhref
p878
Vhttp://en.wikipedia.org/wiki/Interval_tree
p879
sVtarget
p880
V_blank
p881
ssg37
g0
(g44
g45
VWiki
p882
tp883
Rp884
(dp885
g34
Nsg27
g855
sg28
Nsg37
g852
sg31
g855
sbsg99
g100
sg101
I00
sg102
(lp886
g884
asbsg27
g884
sg28
Nsg37
g848
sg31
g844
sbsg28
g0
(g22
g2
Ntp887
Rp888
(dp889
g26
I00
sg27
g848
sg28
g0
(g44
g45
V\u000a
p890
tp891
Rp892
(dp893
g34
g888
sg27
g0
(g44
g45
V\u000aBoth segment and interval trees store intervals.  Segment tree is mainly optimized for queries for a given point, and interval trees are mainly optimized for overlapping queries for a given interval.
p894
tp895
Rp896
(dp897
g34
g0
(g22
g2
Ntp898
Rp899
(dp900
g26
I01
sg27
g0
(g44
g45
VSegment Tree
p901
tp902
Rp903
(dp904
g34
Nsg27
g0
(g22
g2
Ntp905
Rp906
(dp907
g26
I00
sg27
g0
(g44
g45
VInterval Tree vs 
p908
tp909
Rp910
(dp911
g34
Nsg27
g0
(g22
g2
Ntp912
Rp913
(dp914
g26
I00
sg27
g888
sg28
g899
sg29
Vstrong
p915
sg31
g888
sg32
Nsg33
Nsg34
Nsg35
(dp916
sg37
g910
sg99
g100
sg101
I00
sg102
(lp917
g910
ag906
asbsg28
g906
sg37
g906
sg31
g913
sbsg28
Nsg29
g171
sg31
g913
sg32
Nsg33
Nsg34
g910
sg35
(dp918
Vhref
p919
Vhttp://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/
p920
sVtarget
p921
V_blank
p922
ssg37
g903
sg99
g100
sg101
I00
sg102
(lp923
g903
asbsg28
Nsg37
g899
sg31
g906
sbsg28
g896
sg29
Vbr
p924
sg31
g888
sg32
Nsg33
Nsg34
g913
sg35
(dp925
sg37
g896
sg99
g100
sg101
I00
sg102
(lp926
sbsg27
g899
sg28
Nsg37
g892
sg31
g888
sbsg28
g0
(g22
g2
Ntp927
Rp928
(dp929
g26
I00
sg27
g892
sg28
g0
(g44
g45
V\u000a
p930
tp931
Rp932
(dp933
g34
g928
sg27
g0
(g44
g45
V\u000a2) Extend the intervalSearch() to print all overlapping intervals instead of just one. 
p934
tp935
Rp936
(dp937
g34
g0
(g22
g2
Ntp938
Rp939
(dp940
g26
I01
sg27
g0
(g44
g45
V\u000a1) Implement delete operation for interval tree.
p941
tp942
Rp943
(dp944
g34
g0
(g22
g2
Ntp945
Rp946
(dp947
g26
I01
sg27
g0
(g44
g45
VExercise:
p948
tp949
Rp950
(dp951
g34
Nsg27
g0
(g22
g2
Ntp952
Rp953
(dp954
g26
I00
sg27
g928
sg28
g946
sg29
Vstrong
p955
sg31
g928
sg32
Nsg33
Nsg34
Nsg35
(dp956
sg37
g950
sg99
g100
sg101
I00
sg102
(lp957
g950
asbsg28
Nsg37
g946
sg31
g953
sbsg28
g943
sg29
Vbr
p958
sg31
g928
sg32
Nsg33
Nsg34
g953
sg35
(dp959
sg37
g943
sg99
g100
sg101
I00
sg102
(lp960
sbsg27
g946
sg28
g939
sg37
g939
sg31
g928
sbsg28
g936
sg29
Vbr
p961
sg31
g928
sg32
Nsg33
Nsg34
g943
sg35
(dp962
sg37
g936
sg99
g100
sg101
I00
sg102
(lp963
sbsg27
g939
sg28
Nsg37
g932
sg31
g928
sbsg28
g0
(g22
g2
Ntp964
Rp965
(dp966
g26
I00
sg27
g932
sg28
g0
(g44
g45
V\u000a
p967
tp968
Rp969
(dp970
g34
g965
sg27
g0
(g44
g45
Vhttps://www.youtube.com/watch?v=dQF0zyaym8A
p971
tp972
Rp973
(dp974
g34
Nsg27
g0
(g22
g2
Ntp975
Rp976
(dp977
g26
I00
sg27
g0
(g44
g45
V\u000a
p978
tp979
Rp980
(dp981
g34
g0
(g22
g2
Ntp982
Rp983
(dp984
g26
I01
sg27
g0
(g44
g45
VIntroduction to Algorithms 3rd Edition by Clifford Stein, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest
p985
tp986
Rp987
(dp988
g34
Nsg27
g0
(g22
g2
Ntp989
Rp990
(dp991
g26
I00
sg27
g0
(g44
g45
V\u000a
p992
tp993
Rp994
(dp995
g34
g0
(g22
g2
Ntp996
Rp997
(dp998
g26
I01
sg27
g0
(g44
g45
Vhttp://www.cse.unr.edu/~mgunes/cs302/IntervalTrees.pptx
p999
tp1000
Rp1001
(dp1002
g34
Nsg27
g0
(g22
g2
Ntp1003
Rp1004
(dp1005
g26
I00
sg27
g0
(g44
g45
V\u000a
p1006
tp1007
Rp1008
(dp1009
g34
g0
(g22
g2
Ntp1010
Rp1011
(dp1012
g26
I01
sg27
g0
(g44
g45
Vhttp://en.wikipedia.org/wiki/Interval_tree
p1013
tp1014
Rp1015
(dp1016
g34
Nsg27
g0
(g22
g2
Ntp1017
Rp1018
(dp1019
g26
I00
sg27
g965
sg28
g1011
sg29
g171
sg31
g965
sg32
Nsg33
Nsg34
Nsg35
(dp1020
Vhref
p1021
Vhttp://en.wikipedia.org/wiki/Interval_tree
p1022
sVtarget
p1023
V_blank
p1024
ssg37
g1015
sg99
g100
sg101
I00
sg102
(lp1025
g1015
asbsg28
Nsg37
g1011
sg31
g1018
sbsg28
g1008
sg29
Vbr
p1026
sg31
g965
sg32
Nsg33
Nsg34
g1018
sg35
(dp1027
sg37
g1008
sg99
g100
sg101
I00
sg102
(lp1028
sbsg27
g1011
sg28
g1004
sg37
g1004
sg31
g965
sbsg28
g997
sg29
g171
sg31
g965
sg32
Nsg33
Nsg34
g1008
sg35
(dp1029
Vhref
p1030
Vhttp://www.cse.unr.edu/~mgunes/cs302/IntervalTrees.pptx
p1031
sVtarget
p1032
V_blank
p1033
ssg37
g1001
sg99
g100
sg101
I00
sg102
(lp1034
g1001
asbsg28
Nsg37
g997
sg31
g1004
sbsg28
g994
sg29
Vbr
p1035
sg31
g965
sg32
Nsg33
Nsg34
g1004
sg35
(dp1036
sg37
g994
sg99
g100
sg101
I00
sg102
(lp1037
sbsg27
g997
sg28
g990
sg37
g990
sg31
g965
sbsg28
g983
sg29
g171
sg31
g965
sg32
Nsg33
Nsg34
g994
sg35
(dp1038
Vhref
p1039
Vhttp://www.flipkart.com/introduction-algorithms-3rd/p/itmczynzhyhxv2gs?pid=9788120340077&affid=sandeepgfg
p1040
sVtarget
p1041
V_blank
p1042
ssg37
g987
sg99
g100
sg101
I00
sg102
(lp1043
g987
asbsg28
Nsg37
g983
sg31
g990
sbsg28
g980
sg29
Vbr
p1044
sg31
g965
sg32
Nsg33
Nsg34
g990
sg35
(dp1045
sg37
g980
sg99
g100
sg101
I00
sg102
(lp1046
sbsg27
g983
sg28
g976
sg37
g976
sg31
g965
sbsg28
Nsg29
g171
sg31
g965
sg32
Nsg33
Nsg34
g980
sg35
(dp1047
Vhref
p1048
Vhttps://www.youtube.com/watch?v=dQF0zyaym8A
p1049
sVtarget
p1050
V_blank
p1051
ssg37
g973
sg99
g100
sg101
I00
sg102
(lp1052
g973
asbsg28
Nsg37
g969
sg31
g976
sbsg28
g0
(g22
g2
Ntp1053
Rp1054
(dp1055
g26
I00
sg27
g969
sg28
g0
(g44
g45
V\u000a
p1056
tp1057
Rp1058
(dp1059
g34
g1054
sg27
g0
(g44
g45
VPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above
p1060
tp1061
Rp1062
(dp1063
g34
Nsg27
g1054
sg28
Nsg37
g1058
sg31
g1054
sbsg28
g0
(g22
g2
Ntp1064
Rp1065
(dp1066
g26
I00
sg27
g1058
sg28
g0
(g44
g45
V\u000a
p1067
tp1068
Rp1069
(dp1070
g34
g1065
sg27
g1065
sg28
g0
(cbs4.element
Comment
p1071
g45
V Big Rectangle Blog Bottom 
p1072
tp1073
Rp1074
(dp1075
g34
g1069
sg27
g1069
sg28
g0
(g44
g45
V\u000a
p1076
tp1077
Rp1078
(dp1079
g34
g1074
sg27
g1074
sg28
g0
(g22
g2
Ntp1080
Rp1081
(dp1082
g26
I00
sg27
g1078
sg28
g0
(g44
g45
V\u000a
p1083
tp1084
Rp1085
(dp1086
g34
g1081
sg27
g1081
sg28
g0
(g22
g2
Ntp1087
Rp1088
(dp1089
g26
I00
sg27
g1085
sg28
g0
(g44
g45
V\u000a
p1090
tp1091
Rp1092
(dp1093
g34
g1088
sg27
g0
(g44
g45
V\u000a(adsbygoogle = window.adsbygoogle || []).push({});\u000a
p1094
tp1095
Rp1096
(dp1097
g34
Nsg27
g1088
sg28
Nsg37
g1092
sg31
g1088
sbsg28
g0
(g22
g2
Ntp1098
Rp1099
(dp1100
g26
I01
sg27
g1092
sg28
g0
(g44
g45
V\u000a
p1101
tp1102
Rp1103
(dp1104
g34
g1099
sg27
g1099
sg28
Nsg37
Nsg31
g825
sbsg29
Vbr
p1105
sg31
g825
sg32
Nsg33
Nsg34
g1092
sg35
(dp1106
sg37
g1103
sg99
g100
sg101
I00
sg102
(lp1107
sbsg37
g1099
sg31
g825
sbsg29
Vscript
p1108
sg31
g825
sg32
Nsg33
Nsg34
g1085
sg35
(dp1109
sg37
g1096
sg99
g100
sg101
I00
sg102
(lp1110
g1096
asbsg37
g1088
sg31
g825
sbsg29
Vins
p1111
sg31
g825
sg32
Nsg33
Nsg34
g1078
sg35
(dp1112
Vstyle
p1113
Vdisplay:inline-block;width:336px;height:280px
p1114
sVdata-ad-client
p1115
Vca-pub-9465609616171866
p1116
sVclass
p1117
(lp1118
Vadsbygoogle
p1119
asVdata-ad-slot
p1120
V4061219431
p1121
ssg37
g1085
sg99
g100
sg101
I00
sg102
(lp1122
sbsg37
g1081
sg31
g825
sbsg37
g1078
sg31
g825
sbsg37
g1074
sg31
g825
sbsg29
Vscript
p1123
sg31
g825
sg32
Nsg33
Nsg34
g1058
sg35
(dp1124
Vasync
p1125
S''
p1126
sVsrc
p1127
V//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js
p1128
ssg37
g1069
sg99
g100
sg101
I00
sg102
(lp1129
sbsg37
g1065
sg31
g825
sbsg29
g307
sg31
g825
sg32
Nsg33
Nsg34
g969
sg35
(dp1130
sg37
g1062
sg99
g100
sg101
I00
sg102
(lp1131
g1062
asbsg37
g1054
sg31
g825
sbsg29
g307
sg31
g825
sg32
Nsg33
Nsg34
g932
sg35
(dp1132
sg37
g1018
sg99
g100
sg101
I00
sg102
(lp1133
g1018
ag1011
ag1008
ag1004
ag997
ag994
ag990
ag983
ag980
ag976
asbsg37
g965
sg31
g825
sbsg29
g307
sg31
g825
sg32
Nsg33
Nsg34
g892
sg35
(dp1134
sg37
g953
sg99
g100
sg101
I00
sg102
(lp1135
g953
ag946
ag943
ag939
ag936
asbsg37
g928
sg31
g825
sbsg29
g307
sg31
g825
sg32
Nsg33
Nsg34
g848
sg35
(dp1136
sg37
g913
sg99
g100
sg101
I00
sg102
(lp1137
g913
ag899
ag896
asbsg37
g888
sg31
g825
sbsg29
g307
sg31
g825
sg32
Nsg33
Nsg34
g837
sg35
(dp1138
sg37
g869
sg99
g100
sg101
I00
sg102
(lp1139
g869
ag862
ag859
ag855
ag852
asbsg37
g844
sg31
g825
sbsg29
Vpre
p1140
sg31
g825
sg32
Nsg33
Nsg34
g830
sg35
(dp1141
sg37
g841
sg99
g100
sg101
I00
sg102
(lp1142
g841
asbsg37
g833
sg31
g825
sbsg99
g100
sg101
I00
sg102
(lp1143
g830
ag833
ag837
ag844
ag848
ag888
ag892
ag928
ag932
ag965
ag969
ag1054
ag1058
ag1065
ag1069
ag1074
ag1078
ag1081
ag1085
ag1088
ag1092
ag1099
ag1103
asbsg37
g825
sg31
g279
sbsg29
Vpre
p1144
sg31
g279
sg32
Nsg33
Nsg34
g723
sg35
(dp1145
Vclass
p1146
(lp1147
Vbrush:
p1148
aVcpp;
p1149
aVhighlight:
p1150
aV[27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82];
p1151
aVtitle:
p1152
aV;
p1153
aVnotranslate
p1154
asVtitle
p1155
V
p1156
ssg37
g822
sg99
g100
sg101
I00
sg102
(lp1157
g822
asbsg37
g814
sg31
g279
sbsg29
g307
sg31
g279
sg32
Nsg33
Nsg34
g511
sg35
(dp1158
sg37
g765
sg99
g100
sg101
I00
sg102
(lp1159
g765
ag758
ag755
ag751
ag748
ag744
ag741
ag737
ag734
ag730
ag727
asbsg37
g719
sg31
g279
sbsg29
g307
sg31
g279
sg32
Nsg33
Nsg34
g440
sg35
(dp1160
sg37
g633
sg99
g100
sg101
I00
sg102
(lp1161
g633
ag623
ag616
ag613
ag609
ag606
ag602
ag599
ag595
ag592
ag588
ag585
ag581
ag578
ag574
ag571
ag567
ag564
ag560
ag557
ag553
ag550
ag546
ag543
ag539
ag536
ag532
ag529
ag525
ag522
ag518
ag515
asbsg37
g507
sg31
g279
sbsg29
g307
sg31
g279
sg32
Nsg33
Nsg34
g407
sg35
(dp1162
sg37
g475
sg99
g100
sg101
I00
sg102
(lp1163
g475
ag472
ag468
ag461
ag458
ag454
ag451
ag447
ag444
asbsg37
g436
sg31
g279
sbsg29
g307
sg31
g279
sg32
Nsg33
Nsg34
g340
sg35
(dp1164
sg37
g424
sg99
g100
sg101
I00
sg102
(lp1165
g424
ag414
ag411
asbsg37
g403
sg31
g279
sbsg29
Vpre
p1166
sg31
g279
sg32
Nsg33
Nsg34
g329
sg35
(dp1167
sg37
g372
sg99
g100
sg101
I00
sg102
(lp1168
g372
ag368
ag365
ag361
ag358
ag354
ag351
ag347
ag344
asbsg37
g336
sg31
g279
sbsg29
Vem
p1169
sg31
g279
sg32
Nsg33
Nsg34
g318
sg35
(dp1170
sg37
g333
sg99
g100
sg101
I00
sg102
(lp1171
g333
asbsg37
g325
sg31
g279
sbsg29
Vem
p1172
sg31
g279
sg32
Nsg33
Nsg34
g311
sg35
(dp1173
sg37
g322
sg99
g100
sg101
I00
sg102
(lp1174
g322
asbsg37
g314
sg31
g279
sbsg99
g100
sg101
I00
sg102
(lp1175
g311
ag314
ag318
ag325
ag329
ag336
ag340
ag403
ag407
ag436
ag440
ag507
ag511
ag719
ag723
ag814
ag818
ag825
asbsg29
g307
sg31
g24
sg32
Nsg33
Nsg34
g193
sg35
(dp1176
sg37
g285
sg99
g100
sg101
I00
sg102
(lp1177
g285
asbsg29
g307
sg31
g24
sg32
Nsg33
Nsg34
g135
sg35
(dp1178
sg37
g276
sg99
g100
sg101
I00
sg102
(lp1179
g276
asbsg29
g307
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp1180
sg37
g239
sg99
g100
sg101
I00
sg102
(lp1181
g239
ag235
ag232
ag228
ag225
ag221
ag214
ag211
ag207
ag204
ag200
ag197
asbsg29
g307
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp1182
sg37
g156
sg99
g100
sg101
I00
sg102
(lp1183
g156
ag153
ag149
ag146
ag142
ag139
asbsg29
g307
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp1184
sg37
g93
sg99
g100
sg101
I00
sg102
(lp1185
g93
ag89
ag86
ag83
ag79
ag76
ag72
ag69
ag65
ag62
ag58
ag55
ag51
ag48
asbsg99
Nsg101
I00
sg102
(lp1186
g39
ag42
ag135
ag193
ag272
ag279
asbsS'raw_page'
p1187
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Interval Tree - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/interval-tree/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Interval Tree - GeeksforGeeks" />\n<meta property="og:description" content="Consider a situation where we have a set of intervals and we need following operations to be implemented efficiently. 1) Add an interval 2) Remove an interval 3) Given an interval x, find if x overlaps with any of the existing intervals. Interval Tree: The idea is to augment a self-balancing Binary Search Tree (BST)\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/interval-tree/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Advance Data Structures" />\n<meta property="article:tag" content="Advanced Data Structures" />\n<meta property="article:section" content="Advanced Data Structure" />\n<meta property="article:published_time" content="2014-03-19T10:07:31+00:00" />\n<meta property="article:modified_time" content="2015-10-30T01:46:59+00:00" />\n<meta property="og:updated_time" content="2015-10-30T01:46:59+00:00" />\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/IntervalSearcTree.png" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-125741 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-125741" class="post-125741 post type-post status-publish format-standard hentry category-advanced-data-structure tag-advance-data-structures tag-advanced-data-structures">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Interval Tree</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Consider a situation where we have a set of intervals and we need following operations to be implemented efficiently.  <span id="more-125741"></span><br />\n<strong>1) </strong>Add an interval<br />\n<strong>2) </strong>Remove an interval<br />\n<strong>3)</strong> Given an interval x, find if x overlaps with any of the existing intervals.</p>\n<p><em><strong>Interval Tree:</strong></em> The idea is to augment a self-balancing Binary Search Tree (BST) like <a href="http://www.geeksforgeeks.org/red-black-tree-set-1-introduction-2/" target="_blank">Red Black Tree</a>, <a href="http://www.geeksforgeeks.org/avl-tree-set-1-insertion/" target="_blank">AVL Tree</a>, etc to maintain set of intervals so that all operations can be done in O(Logn) time.  </p>\n<p>Every node of Interval Tree stores following information.<br />\na) <strong>i</strong>: An interval which is represented as a pair <em>[low, high]</em><br />\nb) <strong>max</strong>: Maximum <em>high </em> value in subtree rooted with this node.</p>\n<p>The low value of an interval is used as key to maintain order in BST. The insert and delete operations are same as insert and delete in self-balancing BST used. </p>\n<p><a href="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/IntervalSearcTree.png"><img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/IntervalSearcTree.png" alt="IntervalSearcTree" width="416" height="250" class="aligncenter size-full wp-image-127586" /></a></p>\n<p>The main operation is to search for an overlapping interval.  Following is algorithm for searching an overlapping interval <em>x</em> in an Interval tree rooted with <em>root</em>.\n<pre>\r\nInterval overlappingIntervalSearch(root, x)\r\n<strong>1) </strong>If x overlaps with root\'s interval, return the root\'s interval.\r\n\r\n<strong>2)</strong> If left child of root is not empty and the <em>max </em> in left child \r\nis greater than x\'s low value, recur for left child\r\n\r\n<strong>3)</strong> Else recur for right child.\r\n</pre>\n<p><em><strong>How does the above algorithm work?</strong></em><br />\nLet the interval to be searched be x. We need to prove this in for following two cases.</p>\n<p><em><strong>Case 1:</strong></em> <em>When we go to right subtree, one of the following must be true.</em><br />\na) There is an overlap in right subtree: This is fine as we need to return one overlapping interval.<br />\nb) There is no overlap in either subtree: We go to right subtree only when either left is NULL or maximum value in left is smaller than <em>x.low</em>.  So the interval cannot be present in left subtree.</p>\n<p><em><strong>Case 2: </strong></em><em>When we go to left subtree, one of the following must be true.</em><br />\na) There is an overlap in left subtree: This is fine as we need to return one overlapping interval.<br />\nb) There is no overlap in either subtree:  This is the most important part.  We need to consider following facts.<br />\n&#8230;  We went to left subtree because <em>x.low <= max</em> in left subtree<br />\n&#8230;. max in left subtree is a high of one of the intervals let us say <em>[a, max]</em> in left subtree.<br />\n&#8230;. Since <em>x</em> doesn&#8217;t overlap with any node in left subtree <em>x.low</em> must be smaller than &#8216;<em>a</em>&#8216;.<br />\n&#8230;. All nodes in BST are ordered by low value, so all nodes in right subtree must have low value greater than &#8216;<em>a</em>&#8216;.<br />\n&#8230;. From above two facts, we can say all intervals in right subtree have low value greater than <em>x.low</em>.  So<em> x</em> cannot overlap with any interval in right subtree.</p>\n<p><strong>Implementation of Interval Tree:</strong><br />\nFollowing is C++ implementation of Interval Tree. The implementation uses basic <a href="http://geeksquiz.com/binary-search-tree-set-1-search-and-insertion/" target="_blank">insert operation of BST</a> to keep things simple. Ideally it should be <a href="http://www.geeksforgeeks.org/avl-tree-set-1-insertion/" target="_blank">insertion of AVL Tree</a> or <a href="http://www.geeksforgeeks.org/avl-tree-set-1-insertion/" target="_blank">insertion of Red-Black Tree</a>.  <a href="http://geeksquiz.com/binary-search-tree-set-2-delete/" target="_blank">Deletion from BST</a> is left as an exercise.</p>\n<pre class="brush: cpp; highlight: [27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82]; title: ; notranslate" title="">\r\n#include &lt;iostream&gt;\r\nusing namespace std;\r\n\r\n// Structure to represent an interval\r\nstruct Interval\r\n{\r\n    int low, high;\r\n};\r\n\r\n// Structure to represent a node in Interval Search Tree\r\nstruct ITNode\r\n{\r\n    Interval *i;  // \'i\' could also be a normal variable\r\n    int max;\r\n    ITNode *left, *right;\r\n};\r\n\r\n// A utility function to create a new Interval Search Tree Node\r\nITNode * newNode(Interval i)\r\n{\r\n    ITNode *temp = new ITNode;\r\n    temp-&gt;i = new Interval(i);\r\n    temp-&gt;max = i.high;\r\n    temp-&gt;left = temp-&gt;right = NULL;\r\n};\r\n\r\n// A utility function to insert a new Interval Search Tree Node\r\n// This is similar to BST Insert.  Here the low value of interval\r\n// is used tomaintain BST property\r\nITNode *insert(ITNode *root, Interval i)\r\n{\r\n    // Base case: Tree is empty, new node becomes root\r\n    if (root == NULL)\r\n        return newNode(i);\r\n\r\n    // Get low value of interval at root\r\n    int l = root-&gt;i-&gt;low;\r\n\r\n    // If root\'s low value is smaller, then new interval goes to\r\n    // left subtree\r\n    if (i.low &lt; l)\r\n        root-&gt;left = insert(root-&gt;left, i);\r\n\r\n    // Else, new node goes to right subtree.\r\n    else\r\n        root-&gt;right = insert(root-&gt;right, i);\r\n\r\n    // Update the max value of this ancestor if needed\r\n    if (root-&gt;max &lt; i.high)\r\n        root-&gt;max = i.high;\r\n\r\n    return root;\r\n}\r\n\r\n// A utility function to check if given two intervals overlap\r\nbool doOVerlap(Interval i1, Interval i2)\r\n{\r\n    if (i1.low &lt;= i2.high &amp;&amp; i2.low &lt;= i1.high)\r\n        return true;\r\n    return false;\r\n}\r\n\r\n// The main function that searches a given interval i in a given\r\n// Interval Tree.\r\nInterval *overlapSearch(ITNode *root, Interval i)\r\n{\r\n    // Base Case, tree is empty\r\n    if (root == NULL) return NULL;\r\n\r\n    // If given interval overlaps with root\r\n    if (doOVerlap(*(root-&gt;i), i))\r\n        return root-&gt;i;\r\n\r\n    // If left child of root is present and max of left child is\r\n    // greater than or equal to given interval, then i may\r\n    // overlap with an interval is left subtree\r\n    if (root-&gt;left != NULL &amp;&amp; root-&gt;left-&gt;max &gt;= i.low)\r\n        return overlapSearch(root-&gt;left, i);\r\n\r\n    // Else interval can only overlap with right subtree\r\n    return overlapSearch(root-&gt;right, i);\r\n}\r\n\r\nvoid inorder(ITNode *root)\r\n{\r\n    if (root == NULL) return;\r\n\r\n    inorder(root-&gt;left);\r\n\r\n    cout &lt;&lt; &quot;[&quot; &lt;&lt; root-&gt;i-&gt;low &lt;&lt; &quot;, &quot; &lt;&lt; root-&gt;i-&gt;high &lt;&lt; &quot;]&quot;\r\n         &lt;&lt; &quot; max = &quot; &lt;&lt; root-&gt;max &lt;&lt; endl;\r\n\r\n    inorder(root-&gt;right);\r\n}\r\n\r\n// Driver program to test above functions\r\nint main()\r\n{\r\n    // Let us create interval tree shown in above figure\r\n    Interval ints[] = {{15, 20}, {10, 30}, {17, 19},\r\n        {5, 20}, {12, 15}, {30, 40}\r\n    };\r\n    int n = sizeof(ints)/sizeof(ints[0]);\r\n    ITNode *root = NULL;\r\n    for (int i = 0; i &lt; n; i++)\r\n        root = insert(root, ints[i]);\r\n\r\n    cout &lt;&lt; &quot;Inorder traversal of constructed Interval Tree is\\n&quot;;\r\n    inorder(root);\r\n\r\n    Interval x = {6, 7};\r\n\r\n    cout &lt;&lt; &quot;\\nSearching for interval [&quot; &lt;&lt; x.low &lt;&lt; &quot;,&quot; &lt;&lt; x.high &lt;&lt; &quot;]&quot;;\r\n    Interval *res = overlapSearch(root, x);\r\n    if (res == NULL)\r\n        cout &lt;&lt; &quot;\\nNo Overlapping Interval&quot;;\r\n    else\r\n        cout &lt;&lt; &quot;\\nOverlaps with [&quot; &lt;&lt; res-&gt;low &lt;&lt; &quot;, &quot; &lt;&lt; res-&gt;high &lt;&lt; &quot;]&quot;;\r\n    return 0;\r\n}\r\n</pre>\n<p>Output:\n<pre>Inorder traversal of constructed Interval Tree is\r\n[5, 20] max = 20\r\n[10, 30] max = 30\r\n[12, 15] max = 15\r\n[15, 20] max = 40\r\n[17, 19] max = 40\r\n[30, 40] max = 40\r\n\r\nSearching for interval [6,7]\r\nOverlaps with [5, 20]</pre>\n<p><strong>Applications of Interval Tree:</strong><br />\nInterval tree is mainly a geometric data structure and often used for windowing queries, for instance, to find all roads on a computerized map inside a rectangular viewport, or to find all visible elements inside a three-dimensional scene (Source <a href="http://en.wikipedia.org/wiki/Interval_tree" target="_blank">Wiki</a>).</p>\n<p><strong>Interval Tree vs <a href="http://www.geeksforgeeks.org/segment-tree-set-1-sum-of-given-range/" target="_blank">Segment Tree</a></strong><br />\nBoth segment and interval trees store intervals.  Segment tree is mainly optimized for queries for a given point, and interval trees are mainly optimized for overlapping queries for a given interval.</p>\n<p><strong>Exercise:</strong><br />\n1) Implement delete operation for interval tree.<br />\n2) Extend the intervalSearch() to print all overlapping intervals instead of just one. </p>\n<p><a href="http://en.wikipedia.org/wiki/Interval_tree" target="_blank">http://en.wikipedia.org/wiki/Interval_tree</a><br />\n<a href="http://www.cse.unr.edu/~mgunes/cs302/IntervalTrees.pptx" target="_blank">http://www.cse.unr.edu/~mgunes/cs302/IntervalTrees.pptx</a><br />\n<a href="http://www.flipkart.com/introduction-algorithms-3rd/p/itmczynzhyhxv2gs?pid=9788120340077&amp;affid=sandeepgfg" target="_blank">Introduction to Algorithms 3rd Edition by Clifford Stein, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest</a><br />\n<a href="https://www.youtube.com/watch?v=dQF0zyaym8A" target="_blank">https://www.youtube.com/watch?v=dQF0zyaym8A</a></p>\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/interval-tree/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="125741 http://www.geeksforgeeks.org/?p=125741">8 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/advanced-data-structure/" rel="category tag">Advanced Data Structure</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/advance-data-structures/" rel="tag">Advance Data Structures</a>, <a href="http://www.geeksforgeeks.org/tag/advanced-data-structures/" rel="tag">Advanced Data Structures</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/%c2%ad%c2%adkasais-algorithm-for-construction-of-lcp-array-from-suffix-array/" title="\xc2\xad\xc2\xadkasai\xe2\x80\x99s Algorithm for Construction of LCP array from Suffix Array">\xc2\xad\xc2\xadkasai\xe2\x80\x99s Algorithm for Construction of LCP array from Suffix Array</a></li><li><a href="http://www.geeksforgeeks.org/overview-of-data-structures-set-3-graph-trie-segment-tree-and-suffix-tree/" title="Overview of Data Structures | Set 3 (Graph, Trie, Segment Tree and Suffix Tree)">Overview of Data Structures | Set 3 (Graph, Trie, Segment Tree and Suffix Tree)</a></li><li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-2-implementation/" title="Heavy Light Decomposition | Set 2 (Implementation)">Heavy Light Decomposition | Set 2 (Implementation)</a></li><li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/" title="Heavy Light Decomposition | Set 1 (Introduction)">Heavy Light Decomposition | Set 1 (Introduction)</a></li><li><a href="http://www.geeksforgeeks.org/count-inversions-of-size-three-in-a-give-array/" title="Count Inversions of size three in a give array">Count Inversions of size three in a give array</a></li><li><a href="http://www.geeksforgeeks.org/count-inversions-array-set-3-using-bit/" title="Count inversions in an array | Set 3 (Using BIT)">Count inversions in an array | Set 3 (Using BIT)</a></li><li><a href="http://www.geeksforgeeks.org/find-lca-in-binary-tree-using-rmq/" title="Find LCA in Binary Tree using RMQ">Find LCA in Binary Tree using RMQ</a></li><li><a href="http://www.geeksforgeeks.org/range-minimum-query-for-static-array/" title="Range Minimum Query (Square Root Decomposition and Sparse Table)">Range Minimum Query (Square Root Decomposition and Sparse Table)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/red-black-tree-set-2-insert/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/red-black-tree-set-3-delete-2/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="125741" ptitle="Interval Tree" id="ratePlugin"></div>\r\n<div pid="125741" ptitle="Interval Tree" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-34936">\r\n        <div id="dsq-comment-header-34936" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34936">\r\n                <span id="dsq-author-user-34936">muhammed hassan</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34936" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34936" class="dsq-comment-message"><p>first: thanks geeksforgeeks . you are very cool.<br />\nsecond: I think there is another very important operation which is search for all overlapping intervals. thanks</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-33711">\r\n        <div id="dsq-comment-header-33711" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33711">\r\n                <span id="dsq-author-user-33711">mccullum</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33711" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33711" class="dsq-comment-message"><p>hey geeksforgeeks..<br />\nplz share an article on binary indexed trees.!!</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-33693">\r\n        <div id="dsq-comment-header-33693" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33693">\r\n                <span id="dsq-author-user-33693">Aditya Chhilwar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33693" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33693" class="dsq-comment-message"><p>In insert function after NULL check adding below lines will work:</p>\n<p>// If root&#8217;s max is smaller than i.high then update new max in root as i will be the child of root<br />\nif(i.high &gt; root-&gt;max)<br />\nroot-&gt;max = i.high;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-33717">\r\n        <div id="dsq-comment-header-33717" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33717">\r\n                <span id="dsq-author-user-33717">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33717" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33717" class="dsq-comment-message"><p>Aditya, thanks for pointing this out.  We have updated the code.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-33691">\r\n        <div id="dsq-comment-header-33691" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33691">\r\n                <span id="dsq-author-user-33691">Aditya Chhilwar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33691" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33691" class="dsq-comment-message"><p>It will not work for input {{15,20} , {4,25}, {3,30}}<br />\nand search {26,27}<br />\nalthough it is overlapping with {3,30}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-33667">\r\n        <div id="dsq-comment-header-33667" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33667">\r\n                <span id="dsq-author-user-33667">Zheng Luo</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33667" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33667" class="dsq-comment-message"><p>This is the Link, Hope it can be helpful<br />\n<a href="http://ideone.com/yluRJb" rel="nofollow">http://ideone.com/yluRJb</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-33661">\r\n        <div id="dsq-comment-header-33661" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33661">\r\n                <span id="dsq-author-user-33661">geekcoder</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33661" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33661" class="dsq-comment-message"><p>nice post, this link is also good <a href="http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/augtrees.pdf" rel="nofollow">http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/augtrees.pdf</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-33660">\r\n        <div id="dsq-comment-header-33660" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33660">\r\n                <span id="dsq-author-user-33660">geekcoder</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33660" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33660" class="dsq-comment-message"><p>nice post, this link is also good <a href="http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/augtrees.pdf" rel="nofollow">http://www.bowdoin.edu/~ltoma/teaching/cs231/fall07/Lectures/augtrees.pdf</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/interval-tree/\';\r\nvar disqus_identifier = \'125741 http://www.geeksforgeeks.org/?p=125741\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Interval Tree";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(406)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(81)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(245)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(57)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'62 topics\' style=\'font-size: 15.766423357664pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.321 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-02 21:27:48 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p1188
sb.