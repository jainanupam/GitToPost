ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/LongestPalindromicSubsequence'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/LongestPalindromicSubsequenceDP.java'
p11
aS'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/LongestPalindromicSubsequence.java'
p12
atp13
Rp14
sS'title'
p15
VDynamic Programming | Set 12 (Longest Palindromic Subsequence)
p16
sS'file_name'
p17
g12
sS'link'
p18
S'http://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/'
p19
sS'host_name'
p20
S'www.geeksforgeeks.org'
p21
sS'problem_text'
p22
g0
(cbs4.element
Tag
p23
g2
Ntp24
Rp25
(dp26
S'can_be_empty_element'
p27
I00
sS'previous_element'
p28
NsS'next_sibling'
p29
NsS'name'
p30
S'p'
p31
sS'parent'
p32
NsS'namespace'
p33
NsS'prefix'
p34
NsS'previous_sibling'
p35
NsS'attrs'
p36
(dp37
sS'next_element'
p38
g0
(g23
g2
Ntp39
Rp40
(dp41
g27
I00
sg28
g25
sg29
g0
(g23
g2
Ntp42
Rp43
(dp44
g27
I00
sg28
g0
(cbs4.element
NavigableString
p45
c__builtin__
unicode
p46
V \u201cBBBBB\u201d and \u201cBBCBB\u201d are also palindromic subsequences of the given sequence, but not the longest ones.
p47
tp48
Rp49
(dp50
g35
g0
(g23
g2
Ntp51
Rp52
(dp53
g27
I00
sg28
g0
(g45
g46
VGiven a sequence, find the length of the longest palindromic subsequence in it. For example, if the given sequence is \u201cBBABCBCAB\u201d, then the output should be 7 as \u201cBABCBAB\u201d is the longest palindromic subseuqnce in it.
p54
tp55
Rp56
(dp57
g35
Nsg28
g40
sg29
g52
sg38
g52
sg32
g40
sbsg29
g49
sg30
Vspan
p58
sg32
g40
sg33
Nsg34
Nsg35
g56
sg36
(dp59
Vid
p60
Vmore-19155
p61
ssg38
g49
sS'parser_class'
p62
cbs4
BeautifulSoup
p63
sS'hidden'
p64
I00
sS'contents'
p65
(lp66
sbsg28
g52
sg29
Nsg38
g43
sg32
g40
sbsg29
g0
(g23
g2
Ntp67
Rp68
(dp69
g27
I00
sg28
g0
(g45
g46
VThe naive solution for this problem is to generate all subsequences of the given sequence and find the longest palindromic subsequence. This solution is exponential in term of time complexity. Let us see how this problem possesses both important properties of a Dynamic Programming (DP) Problem and can efficiently solved using Dynamic Programming.
p70
tp71
Rp72
(dp73
g35
Nsg28
g43
sg29
Nsg38
g68
sg32
g43
sbsg29
g0
(g23
g2
Ntp74
Rp75
(dp76
g27
I00
sg28
g0
(g45
g46
V\u000aLet X[0..n-1] be the input sequence of length n and L(0, n-1) be the length of the longest palindromic subsequence of X[0..n-1]. 
p77
tp78
Rp79
(dp80
g35
g0
(g23
g2
Ntp81
Rp82
(dp83
g27
I01
sg28
g0
(g45
g46
V1) Optimal Substructure: 
p84
tp85
Rp86
(dp87
g35
Nsg28
g0
(g23
g2
Ntp88
Rp89
(dp90
g27
I00
sg28
g68
sg29
g82
sg30
Vstrong
p91
sg32
g68
sg33
Nsg34
Nsg35
Nsg36
(dp92
sg38
g86
sg62
g63
sg64
I00
sg65
(lp93
g86
asbsg29
Nsg38
g82
sg32
g89
sbsg29
g79
sg30
Vbr
p94
sg32
g68
sg33
Nsg34
Nsg35
g89
sg36
(dp95
sg38
g79
sg62
g63
sg64
I00
sg65
(lp96
sbsg28
g82
sg29
Nsg38
g75
sg32
g68
sbsg29
g0
(g23
g2
Ntp97
Rp98
(dp99
g27
I00
sg28
g0
(g45
g46
V\u000aElse L(0, n-1) = MAX (L(1, n-1), L(0, n-2)).  
p100
tp101
Rp102
(dp103
g35
g0
(g23
g2
Ntp104
Rp105
(dp106
g27
I01
sg28
g0
(g45
g46
VIf last and first characters of X are same, then L(0, n-1) = L(1, n-2) + 2.
p107
tp108
Rp109
(dp110
g35
Nsg28
g75
sg29
g105
sg38
g105
sg32
g75
sbsg29
g102
sg30
Vbr
p111
sg32
g75
sg33
Nsg34
Nsg35
g109
sg36
(dp112
sg38
g102
sg62
g63
sg64
I00
sg65
(lp113
sbsg28
g105
sg29
Nsg38
g98
sg32
g75
sbsg29
g0
(g23
g2
Ntp114
Rp115
(dp116
g27
I00
sg28
g0
(g45
g46
VFollowing is a general recursive solution with all cases handled.
p117
tp118
Rp119
(dp120
g35
Nsg28
g98
sg29
Nsg38
g115
sg32
g98
sbsg29
g0
(g23
g2
Ntp121
Rp122
(dp123
g27
I00
sg28
g0
(g45
g46
V\u000a// Everay single character is a palindrom of length 1\u000aL(i, i) = 1 for all indexes i in given sequence\u000a\u000a// IF first and last characters are not same\u000aIf (X[i] != X[j])  L(i, j) =  max{L(i + 1, j),L(i, j - 1)} \u000a\u000a// If there are only 2 characters and both are same\u000aElse if (j == i + 1) L(i, j) = 2  \u000a\u000a// If there are more than two characters, and first and last \u000a// characters are same\u000aElse L(i, j) =  L(i + 1, j - 1) + 2 \u000a
p124
tp125
Rp126
(dp127
g35
Nsg28
g115
sg29
Nsg38
g122
sg32
g115
sbsg29
g0
(g23
g2
Ntp128
Rp129
(dp130
g27
I00
sg28
g0
(g45
g46
V\u000aFollowing is simple recursive implementation of the LPS problem. The implementation simply follows the recursive structure mentioned above.
p131
tp132
Rp133
(dp134
g35
g0
(g23
g2
Ntp135
Rp136
(dp137
g27
I01
sg28
g0
(g45
g46
V2) Overlapping Subproblems
p138
tp139
Rp140
(dp141
g35
Nsg28
g0
(g23
g2
Ntp142
Rp143
(dp144
g27
I00
sg28
g122
sg29
g136
sg30
Vstrong
p145
sg32
g122
sg33
Nsg34
Nsg35
Nsg36
(dp146
sg38
g140
sg62
g63
sg64
I00
sg65
(lp147
g140
asbsg29
Nsg38
g136
sg32
g143
sbsg29
g133
sg30
Vbr
p148
sg32
g122
sg33
Nsg34
Nsg35
g143
sg36
(dp149
sg38
g133
sg62
g63
sg64
I00
sg65
(lp150
sbsg28
g136
sg29
Nsg38
g129
sg32
g122
sbsg29
Nsg30
Vpre
p151
sg32
g25
sg33
Nsg34
Nsg35
g122
sg36
(dp152
Vclass
p153
(lp154
Vbrush:
p155
aVcpp;
p156
aVhighlight:
p157
aV[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24];
p158
aVtitle:
p159
aV;
p160
aVnotranslate
p161
asVtitle
p162
V
p163
ssg38
g0
(g45
g46
V\u000a#include<stdio.h>\u000a#include<string.h>\u000a\u000a// A utility function to get max of two integers\u000aint max (int x, int y) { return (x > y)? x : y; }\u000a\u000a// Returns the length of the longest palindromic subsequence in seq\u000aint lps(char *seq, int i, int j)\u000a{\u000a   // Base Case 1: If there is only 1 character\u000a   if (i == j)\u000a     return 1;\u000a\u000a   // Base Case 2: If there are only 2 characters and both are same\u000a   if (seq[i] == seq[j] && i + 1 == j)\u000a     return 2;\u000a\u000a   // If the first and last characters match\u000a   if (seq[i] == seq[j])\u000a      return lps (seq, i+1, j-1) + 2;\u000a\u000a   // If the first and last characters do not match\u000a   return max( lps(seq, i, j-1), lps(seq, i+1, j) );\u000a}\u000a\u000a/* Driver program to test above functions */\u000aint main()\u000a{\u000a    char seq[] = "GEEKSFORGEEKS";\u000a    int n = strlen(seq);\u000a    printf ("The lnegth of the LPS is %d", lps(seq, 0, n-1));\u000a    getchar();\u000a    return 0;\u000a}\u000a
p164
tp165
Rp166
(dp167
g35
Nsg28
g129
sg29
Nsg38
Nsg32
g129
sbsg62
g63
sg64
I00
sg65
(lp168
g166
asbsg30
Vp
p169
sg32
g25
sg33
Nsg34
Nsg35
g115
sg36
(dp170
sg38
g143
sg62
g63
sg64
I00
sg65
(lp171
g143
ag136
ag133
asbsg30
Vpre
p172
sg32
g25
sg33
Nsg34
Nsg35
g98
sg36
(dp173
sg38
g126
sg62
g63
sg64
I00
sg65
(lp174
g126
asbsg30
g169
sg32
g25
sg33
Nsg34
Nsg35
g75
sg36
(dp175
sg38
g119
sg62
g63
sg64
I00
sg65
(lp176
g119
asbsg30
g169
sg32
g25
sg33
Nsg34
Nsg35
g68
sg36
(dp177
sg38
g109
sg62
g63
sg64
I00
sg65
(lp178
g109
ag105
ag102
asbsg30
g169
sg32
g25
sg33
Nsg34
Nsg35
g43
sg36
(dp179
sg38
g89
sg62
g63
sg64
I00
sg65
(lp180
g89
ag82
ag79
asbsg30
g169
sg32
g25
sg33
Nsg34
Nsg35
g40
sg36
(dp181
sg38
g72
sg62
g63
sg64
I00
sg65
(lp182
g72
asbsg30
g169
sg32
g25
sg33
Nsg34
Nsg35
Nsg36
(dp183
sg38
g56
sg62
g63
sg64
I00
sg65
(lp184
g56
ag52
ag49
asbsg62
Nsg64
I00
sg65
(lp185
g40
ag43
ag68
ag75
ag98
ag115
ag122
ag129
asbsS'raw_page'
p186
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Dynamic Programming | Set 12 (Longest Palindromic Subsequence) - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Dynamic Programming | Set 12 (Longest Palindromic Subsequence) - GeeksforGeeks" />\n<meta property="og:description" content="Given a sequence, find the length of the longest palindromic subsequence in it. For example, if the given sequence is &#8220;BBABCBCAB&#8221;, then the output should be 7 as &#8220;BABCBAB&#8221; is the longest palindromic subseuqnce in it. &#8220;BBBBB&#8221; and &#8220;BBCBB&#8221; are also palindromic subsequences of the given sequence, but not the longest ones. The naive solution\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Dynamic Programming" />\n<meta property="article:section" content="Dynamic Programming" />\n<meta property="article:published_time" content="2012-05-08T19:28:34+00:00" />\n<meta property="article:modified_time" content="2015-10-29T20:18:04+00:00" />\n<meta property="og:updated_time" content="2015-10-29T20:18:04+00:00" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-19155 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-19155" class="post-19155 post type-post status-publish format-standard hentry category-dynamic-programming tag-dynamic-programming">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Dynamic Programming | Set 12 (Longest Palindromic Subsequence)</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Given a sequence, find the length of the longest palindromic subsequence in it. For example, if the given sequence is &#8220;BBABCBCAB&#8221;, then the output should be 7 as &#8220;BABCBAB&#8221; is the longest palindromic subseuqnce in it.<span id="more-19155"></span> &#8220;BBBBB&#8221; and &#8220;BBCBB&#8221; are also palindromic subsequences of the given sequence, but not the longest ones.</p>\n<p>The naive solution for this problem is to generate all subsequences of the given sequence and find the longest palindromic subsequence. This solution is exponential in term of time complexity. Let us see how this problem possesses both important properties of a Dynamic Programming (DP) Problem and can efficiently solved using Dynamic Programming.</p>\n<p><strong>1) Optimal Substructure: </strong><br />\nLet X[0..n-1] be the input sequence of length n and L(0, n-1) be the length of the longest palindromic subsequence of X[0..n-1]. </p>\n<p>If last and first characters of X are same, then L(0, n-1) = L(1, n-2) + 2.<br />\nElse L(0, n-1) = MAX (L(1, n-1), L(0, n-2)).  </p>\n<p>Following is a general recursive solution with all cases handled.</p>\n<pre>\r\n// Everay single character is a palindrom of length 1\r\nL(i, i) = 1 for all indexes i in given sequence\r\n\r\n// IF first and last characters are not same\r\nIf (X[i] != X[j])  L(i, j) =  max{L(i + 1, j),L(i, j - 1)} \r\n\r\n// If there are only 2 characters and both are same\r\nElse if (j == i + 1) L(i, j) = 2  \r\n\r\n// If there are more than two characters, and first and last \r\n// characters are same\r\nElse L(i, j) =  L(i + 1, j - 1) + 2 \r\n</pre>\n<p><strong>2) Overlapping Subproblems</strong><br />\nFollowing is simple recursive implementation of the LPS problem. The implementation simply follows the recursive structure mentioned above.</p>\n<pre class="brush: cpp; highlight: [7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]; title: ; notranslate" title="">\r\n#include&lt;stdio.h&gt;\r\n#include&lt;string.h&gt;\r\n\r\n// A utility function to get max of two integers\r\nint max (int x, int y) { return (x &gt; y)? x : y; }\r\n\r\n// Returns the length of the longest palindromic subsequence in seq\r\nint lps(char *seq, int i, int j)\r\n{\r\n   // Base Case 1: If there is only 1 character\r\n   if (i == j)\r\n     return 1;\r\n\r\n   // Base Case 2: If there are only 2 characters and both are same\r\n   if (seq[i] == seq[j] &amp;&amp; i + 1 == j)\r\n     return 2;\r\n\r\n   // If the first and last characters match\r\n   if (seq[i] == seq[j])\r\n      return lps (seq, i+1, j-1) + 2;\r\n\r\n   // If the first and last characters do not match\r\n   return max( lps(seq, i, j-1), lps(seq, i+1, j) );\r\n}\r\n\r\n/* Driver program to test above functions */\r\nint main()\r\n{\r\n    char seq[] = &quot;GEEKSFORGEEKS&quot;;\r\n    int n = strlen(seq);\r\n    printf (&quot;The lnegth of the LPS is %d&quot;, lps(seq, 0, n-1));\r\n    getchar();\r\n    return 0;\r\n}\r\n</pre>\n<p>Output:\n<pre>\r\nThe lnegth of the LPS is 5\r\n</pre>\n<p>Considering the above implementation, following is a partial recursion tree for a sequence of length 6 with all different characters. </p>\n<pre>\r\n               L(0, 5)\r\n             /        \\ \r\n            /          \\  \r\n        L(1,5)          L(0,4)\r\n       /    \\            /    \\\r\n      /      \\          /      \\\r\n  L(2,5)    L(1,4)  L(1,4)  L(0,3)\r\n</pre>\n<p>In the above partial recursion tree, L(1, 4) is being solved twice. If we draw the complete recursion tree, then we can see that there are many subproblems which are solved again and again. Since same suproblems are called again, this problem has Overlapping Subprolems property. So LPS problem has both properties (see <a href="http://www.geeksforgeeks.org/archives/12635">this </a>and <a href="http://www.geeksforgeeks.org/archives/12819">this</a>) of a dynamic programming problem. Like other typical <a href="http://www.geeksforgeeks.org/archives/tag/dynamic-programming">Dynamic Programming(DP) problems</a>, recomputations of same subproblems can be avoided by constructing a temporary array L[][] in bottom up manner.</p>\n<p><strong>Dynamic Programming Solution</strong><br />\n<div class="responsive-tabs">\n<h2 class="tabtitle">C++</h2>\n<div class="tabcontent">\n</p>\n<pre class="brush: cpp; highlight: [9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]; title: ; notranslate" title="">\r\n# A Dynamic Programming based Python program for LPS problem\r\n# Returns the length of the longest palindromic subsequence in seq\r\n#include&lt;stdio.h&gt;\r\n#include&lt;string.h&gt;\r\n\r\n// A utility function to get max of two integers\r\nint max (int x, int y) { return (x &gt; y)? x : y; }\r\n\r\n// Returns the length of the longest palindromic subsequence in seq\r\nint lps(char *str)\r\n{\r\n   int n = strlen(str);\r\n   int i, j, cl;\r\n   int L[n][n];  // Create a table to store results of subproblems\r\n\r\n\r\n   // Strings of length 1 are palindrome of lentgh 1\r\n   for (i = 0; i &lt; n; i++)\r\n      L[i][i] = 1;\r\n\r\n    // Build the table. Note that the lower diagonal values of table are\r\n    // useless and not filled in the process. The values are filled in a\r\n    // manner similar to Matrix Chain Multiplication DP solution (See\r\n    // http://www.geeksforgeeks.org/archives/15553). cl is length of\r\n    // substring\r\n    for (cl=2; cl&lt;=n; cl++)\r\n    {\r\n        for (i=0; i&lt;n-cl+1; i++)\r\n        {\r\n            j = i+cl-1;\r\n            if (str[i] == str[j] &amp;&amp; cl == 2)\r\n               L[i][j] = 2;\r\n            else if (str[i] == str[j])\r\n               L[i][j] = L[i+1][j-1] + 2;\r\n            else\r\n               L[i][j] = max(L[i][j-1], L[i+1][j]);\r\n        }\r\n    }\r\n\r\n    return L[0][n-1];\r\n}\r\n\r\n/* Driver program to test above functions */\r\nint main()\r\n{\r\n    char seq[] = &quot;GEEKS FOR GEEKS&quot;;\r\n    int n = strlen(seq);\r\n    printf (&quot;The lnegth of the LPS is %d&quot;, lps(seq));\r\n    getchar();\r\n    return 0;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Python</h2>\n<div class="tabcontent">\n\n<pre class="brush: python; highlight: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]; title: ; notranslate" title="">\r\n# A Dynamic Programming based Python program for LPS problem\r\n# Returns the length of the longest palindromic subsequence in seq\r\ndef lps(str):\r\n\tn = len(str)\r\n\r\n\t# Create a table to store results of subproblems\r\n\tL = [[0 for x in range(n)] for x in range(n)]\r\n\r\n\t# Strings of length 1 are palindrome of length 1\r\n\tfor i in range(n):\r\n\t\tL[i][i] = 1\r\n\r\n\t# Build the table. Note that the lower diagonal values of table are\r\n    # useless and not filled in the process. The values are filled in a\r\n    # manner similar to Matrix Chain Multiplication DP solution (See\r\n    # http://www.geeksforgeeks.org/dynamic-programming-set-8-matrix-chain-multiplication/\r\n    # cl is length of substring\r\n\tfor cl in range(2, n+1):\r\n\t\tfor i in range(n-cl+1):\r\n\t\t\tj = i+cl-1\r\n\t\t\tif str[i] == str[j] and cl == 2:\r\n\t\t\t\tL[i][j] = 2\r\n\t\t\telif str[i] == str[j]:\r\n\t\t\t\tL[i][j] = L[i+1][j-1] + 2\r\n\t\t\telse:\r\n\t\t\t\tL[i][j] = max(L[i][j-1], L[i+1][j]);\r\n\r\n\treturn L[0][n-1]\r\n\r\n# Driver program to test above functions\r\nseq = &quot;GEEKS FOR GEEKS&quot;\r\nn = len(seq)\r\nprint(&quot;The length of the LPS is &quot; + str(lps(seq)))\r\n\r\n# This code is contributed by Bhavya Jain\r\n</pre>\n<p></div></div><br />\nOutput:\n<pre>\r\nThe lnegth of the LPS is 7\r\n</pre>\n<p>Time Complexity of the above implementation is O(n^2) which is much better than the worst case time complexity of Naive Recursive implementation.</p>\n<p>This problem is close to the <a href="http://www.geeksforgeeks.org/archives/12998">Longest Common Subsequence (LCS) problem</a>. In fact, we can use LCS as a subroutine to solve this problem. Following is the two step solution that uses LCS.<br />\n1) Reverse the given sequence and store the reverse in another array say rev[0..n-1]<br />\n2) LCS of the given sequence and rev[] will be the longest palindromic sequence.<br />\nThis solution is also a O(n^2) solution.</p>\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p>\n<p><strong>References:</strong><br />\n<a href="http://users.eecs.northwestern.edu/~dda902/336/hw6-sol.pdf">http://users.eecs.northwestern.edu/~dda902/336/hw6-sol.pdf</a></p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="19155 http://www.geeksforgeeks.org/?p=19155">49 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/dynamic-programming/" rel="category tag">Dynamic Programming</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/dynamic-programming/" rel="tag">Dynamic Programming</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/count-number-of-subsets-having-a-particular-xor-value/" title="Count number of subsets having a particular XOR value">Count number of subsets having a particular XOR value</a></li><li><a href="http://www.geeksforgeeks.org/permutation-coefficient/" title="Permutation Coefficient">Permutation Coefficient</a></li><li><a href="http://www.geeksforgeeks.org/longest-zig-zag-subsequence/" title="Longest Zig-Zag Subsequence">Longest Zig-Zag Subsequence</a></li><li><a href="http://www.geeksforgeeks.org/compute-ncr-p-set-1-introduction-and-dynamic-programming-solution/" title="Compute nCr % p  | Set 1 (Introduction and Dynamic Programming Solution)">Compute nCr % p  | Set 1 (Introduction and Dynamic Programming Solution)</a></li><li><a href="http://www.geeksforgeeks.org/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum/" title="Partition a set into two subsets such that the difference of subset sums is minimum">Partition a set into two subsets such that the difference of subset sums is minimum</a></li><li><a href="http://www.geeksforgeeks.org/count-number-of-paths-with-k-turns/" title="Count number of paths with at-most k turns">Count number of paths with at-most k turns</a></li><li><a href="http://www.geeksforgeeks.org/count-number-of-ways-to-partition-a-set-into-k-subsets/" title="Count number of ways to partition a set into k subsets">Count number of ways to partition a set into k subsets</a></li><li><a href="http://www.geeksforgeeks.org/bell-numbers-number-of-ways-to-partition-a-set/" title="Bell Numbers (Number of ways to Partition a Set)">Bell Numbers (Number of ways to Partition a Set)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/dynamic-programming-set-11-egg-dropping-puzzle/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/dynamic-programming-set-13-cutting-a-rod/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="19155" ptitle="Dynamic Programming | Set 12 (Longest Palindromic Subsequence)" id="ratePlugin"></div>\r\n<div pid="19155" ptitle="Dynamic Programming | Set 12 (Longest Palindromic Subsequence)" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-34110">\r\n        <div id="dsq-comment-header-34110" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34110">\r\n                <span id="dsq-author-user-34110">Vivek Chicharito Zakwalia</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34110" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34110" class="dsq-comment-message"><p>In the problem statement how LPS of BBABCBCAB is BABCBAB&#8230; it should be BABCCBAB and thus ur code should return &#8216;8&#8217;?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-34111">\r\n        <div id="dsq-comment-header-34111" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34111">\r\n                <span id="dsq-author-user-34111">Archit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34111" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34111" class="dsq-comment-message"><p>i think you should not consider all the permutation of string.<br />\nCheck palindrom in string from index 0 to len-1 without changing the order of characters.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-34230">\r\n        <div id="dsq-comment-header-34230" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34230">\r\n                <span id="dsq-author-user-34230">Vivek Chicharito Zakwalia</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34230" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34230" class="dsq-comment-message"><p>if order isnt changing then how it will generate BABCBAB ?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-3" id="dsq-comment-34231">\r\n        <div id="dsq-comment-header-34231" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34231">\r\n                <span id="dsq-author-user-34231">Vivek Chicharito Zakwalia</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34231" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34231" class="dsq-comment-message"><p>if order isnt changing then how it will generate BABCBAB ?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-4" id="dsq-comment-34233">\r\n        <div id="dsq-comment-header-34233" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34233">\r\n                <span id="dsq-author-user-34233">Archit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34233" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34233" class="dsq-comment-message"><p>string is BBABCBCAB you should take char at index 0,2,3,4,5,7,8 ,,,and you are taking 0,2,3,4,(6,5),7,8<br />\n,,order of characters is changed.<br />\n 5 is coming after 6.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-5" id="dsq-comment-34238">\r\n        <div id="dsq-comment-header-34238" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34238">\r\n                <span id="dsq-author-user-34238">Vivek Chicharito Zakwalia</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34238" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34238" class="dsq-comment-message"><p>esa kya&#8230; o.O (Y)</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-33772">\r\n        <div id="dsq-comment-header-33772" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33772">\r\n                <span id="dsq-author-user-33772">renu</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33772" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33772" class="dsq-comment-message"><p>the brute force approach has a solution of o(n^3) not exponential cxity..right?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-32756">\r\n        <div id="dsq-comment-header-32756" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32756">\r\n                <span id="dsq-author-user-32756">prashant jha</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32756" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32756" class="dsq-comment-message"><p>my c++ code in exponential time 0(2^n)<br />\nreduce it into polynomial time by 2d array and memorisation which is quite easy&#8230;..see for recursive part<br />\n<a href="http://ideone.com/Z4qbMP" rel="nofollow">http://ideone.com/Z4qbMP</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-32755">\r\n        <div id="dsq-comment-header-32755" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32755">\r\n                <span id="dsq-author-user-32755">prashant</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32755" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32755" class="dsq-comment-message"><p>my  c++ code but naive recursive approach in 0(2^n) complexity<br />\nget into polynomial time by using 2-d array and memorisation<br />\n<a href="http://ideone.com/Z4qbMP" rel="nofollow">http://ideone.com/Z4qbMP</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-31226">\r\n        <div id="dsq-comment-header-31226" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31226">\r\n                <span id="dsq-author-user-31226">Guest</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31226" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31226" class="dsq-comment-message"><p>At last in this post u have mentioned that we can use LCS as a subroutine to solve this problem,which is not correct everytime..let me explain with example</p>\n<p>For example<br />\nS=original string<br />\nS&#8217;=reverse of orginal string</p>\n<p> S = \xe2\x80\x9ccaba\xe2\x80\x9d, S\xe2\x80\x99 = \xe2\x80\x9cabac\xe2\x80\x9d.<br />\n The longest common substring between S and S\xe2\x80\x99 is \xe2\x80\x9caba\xe2\x80\x9d, which is the answer.but now  Let\xe2\x80\x99s try another example:<br />\n S = \xe2\x80\x9cabacdfgdcaba\xe2\x80\x9d, S\xe2\x80\x99 = \xe2\x80\x9cabacdgfdcaba\xe2\x80\x9d.<br />\n The longest common substring between S and S\xe2\x80\x99 is \xe2\x80\x9cabacd\xe2\x80\x9d. Clearly, this is not a valid palindrome.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-33480">\r\n        <div id="dsq-comment-header-33480" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33480">\r\n                <span id="dsq-author-user-33480">loconet</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33480" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33480" class="dsq-comment-message"><p>&gt; The longest common substring between S and S\xe2\x80\x99 is \xe2\x80\x9cabacd\xe2\x80\x9d</p>\n<p>The problem here is that you are using &#8220;longest common substring&#8221;. The solution by the poster is using LCS, which is Longest Common *Subsequence*. That is completely different.</p>\n<p>A longest common subsequence of &#8220;abacdfgdcaba&#8221; and &#8220;abacdgfdcaba&#8221; is [a, b, a, c, d, f, d, c, a, b, a] ..which as you can see is a palindrome.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31089">\r\n        <div id="dsq-comment-header-31089" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31089">\r\n                <span id="dsq-author-user-31089">pinto</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31089" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31089" class="dsq-comment-message"><p>This code in the article is incorrect and misleading. Please either fix the code or remove it the page.</p>\n<p>correct code is something like:</p>\n<p>public class Palindrome {</p>\n<p>    public static boolean find(int[][] memo, char[] in, int i, int j) {<br />\n        if (i == j) {<br />\n            memo[i][j] = 1;<br />\n            return true;<br />\n        }</p>\n<p>        if (in[i] == in[j]) {<br />\n            if (find(memo, in, i+1, j-1)) {<br />\n                memo[i][j] = memo[i+1][j-1] + 2;<br />\n                return true;<br />\n            } else {<br />\n                memo[i][j] = 0;<br />\n                return false;<br />\n            }<br />\n        } else {<br />\n            memo[i][j] = 0;<br />\n            find(memo, in, i+1, j);<br />\n            find(memo, in, i, j-1);<br />\n            return false;<br />\n        }<br />\n    }</p>\n<p>    public static String memoToString(int[][] memo) {<br />\n        String result = &#8220;&#8221;;<br />\n        for (int i = 0; i &lt; memo.length; ++i) {<br />\n            for (int j = 0; j &lt; memo[i].length; ++j) {<br />\n                result += memo[i][j] + &quot; &quot;;<br />\n            }<br />\n            result += &quot;n&quot;;<br />\n        }</p>\n<p>        return result;<br />\n    }</p>\n<p>    public static void main(String[] args) {<br />\n        boolean has = false;<br />\n        String s = &quot;&quot;;<br />\n        int[][] memo = null;</p>\n<p>        s = &quot;123abcba5435&quot;;<br />\n        memo = new int[s.length()][s.length()];<br />\n        has = Palindrome.find(memo, s.toCharArray(), 0, s.length()-1);<br />\n        //has = Palindrome.find(memo, s.toCharArray(), 3, 7);<br />\n        System.out.println(s + &quot; : &quot; + has);<br />\n        System.out.println(Palindrome.memoToString(memo));</p>\n<p>        s = &quot;abxyzba&quot;;<br />\n        memo = new int[s.length()][s.length()];<br />\n        has = Palindrome.find(memo, s.toCharArray(), 0, s.length()-1);<br />\n        System.out.println(s + &quot; : &quot; + has);<br />\n        System.out.println(Palindrome.memoToString(memo));<br />\n    }<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-29562">\r\n        <div id="dsq-comment-header-29562" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29562">\r\n                <span id="dsq-author-user-29562">PAN SINGH</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29562" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29562" class="dsq-comment-message"><p><code></p>\n<p>#include<br />\n#include<br />\n#include<br />\nusing namespace std;</p>\n<p>string S = "GEEKSFORGEEKS";</p>\n<p>int dp[100][100];</p>\n<p>int maxPalindrome(int i, int j)<br />\n{<br />\n    int length;</p>\n<p>    if(dp[i][j] != -1)<br />\n        return dp[i][j];</p>\n<p>    if(i == j)<br />\n    {<br />\n        dp[i][j] = 1;<br />\n        return 1;</p>\n<p>    }</p>\n<p>    if(i &gt; j)<br />\n        return 0;</p>\n<p>    if( S[i] == S[j])<br />\n        length = 2 + maxPalindrome(i+1, j-1);</p>\n<p>    else<br />\n        length =  max(maxPalindrome(i+1, j), maxPalindrome(i, j-1));</p>\n<p>    dp[i][j] = length;<br />\n    return length;<br />\n}</p>\n<p>int main()<br />\n{<br />\n    memset(dp, -1, sizeof(dp));<br />\n    cout&lt;&lt;maxPalindrome(0, S.length()-1);<br />\n}</p>\n<p></code></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29536">\r\n        <div id="dsq-comment-header-29536" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29536">\r\n                <span id="dsq-author-user-29536">Santosh Tadikonda</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29536" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29536" class="dsq-comment-message"><p>How to print the longest string ?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-28804">\r\n        <div id="dsq-comment-header-28804" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28804">\r\n                <span id="dsq-author-user-28804">Kaidul Islam Sazal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28804" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28804" class="dsq-comment-message"><p>How to print the longest palindromic string?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-28828">\r\n        <div id="dsq-comment-header-28828" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28828">\r\n                <span id="dsq-author-user-28828">Kaidul Islam Sazal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28828" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28828" class="dsq-comment-message"><p>Ignore it! I am able to do it <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-28637">\r\n        <div id="dsq-comment-header-28637" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28637">\r\n                <span id="dsq-author-user-28637">rohit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28637" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28637" class="dsq-comment-message"><p>for (cl=2; cl&lt;=n; cl++)<br />\n    {<br />\n        for (i=0; i&lt;n-cl+1; i++)<br />\n        {<br />\n            j = i+cl-1;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-28635">\r\n        <div id="dsq-comment-header-28635" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28635">\r\n                <span id="dsq-author-user-28635">rohit</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28635" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28635" class="dsq-comment-message"><p>for (cl=2; cl&lt;=n; cl++)<br />\n    {<br />\n        for (i=0; i&lt;n-cl+1; i++)<br />\n        {<br />\n            j = i+cl-1;<br />\nany one help me<br />\nwhat is this part of code doing</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-27213">\r\n        <div id="dsq-comment-header-27213" class="dsq-comment-header">\r\n            <cite id="dsq-cite-27213">\r\n                <span id="dsq-author-user-27213">rishi</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-27213" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-27213" class="dsq-comment-message"><p>the above code is wrong because the logic, i.e., the recurrence relation itself is wrong.</p>\n<p><code><br />\nelse if (str[i] == str[j])<br />\n        L[i][j] = L[i+1][j-1] + 2;<br />\n            else<br />\n        L[i][j] = max(L[i][j-1], L[i+1][j]);<br />\n</code><br />\nthe condition to be checked is not if(str[i] == str[j]) but actually if str[i&#8230;j] is a palindrome or not. Hence the code would look some thing like:<br />\n<code><br />\nelse if (is_palindrome(str, i, j))<br />\n       L[i][j] = L[i+1][j-1] + 2;<br />\nelse<br />\n       L[i][j] = max(L[i][j-1], L[i+1][j]);<br />\n</code></p>\n<p>because equating last two characters don&#8217;t increase palindrome length by 2 rather whole of inner string must be a palindrome.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-27380">\r\n        <div id="dsq-comment-header-27380" class="dsq-comment-header">\r\n            <cite id="dsq-cite-27380">\r\n                <span id="dsq-author-user-27380">VARUN</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-27380" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-27380" class="dsq-comment-message"><p>The recurrence relation if fine. the problem is  to find the palindromic subsequence  not substring so whole of  inner string need not necessarily be palindrome.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-26662">\r\n        <div id="dsq-comment-header-26662" class="dsq-comment-header">\r\n            <cite id="dsq-cite-26662">\r\n                <span id="dsq-author-user-26662">makamus</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-26662" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-26662" class="dsq-comment-message"><p>for string &#8220;GEEKS FOR GEEKS&#8221;, we feel that the lps is not 7, less 7,do you?<br />\n    from the above code, we are known the str &#8220;EEKS FOR GEE&#8221;, but is not<br />\nPalindromic, ?????</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-ashish_ace odd alt thread-odd thread-alt depth-1" id="dsq-comment-20861">\r\n        <div id="dsq-comment-header-20861" class="dsq-comment-header">\r\n            <cite id="dsq-cite-20861">\r\n                <span id="dsq-author-user-20861">ASHISH AGGARWAL</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-20861" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-20861" class="dsq-comment-message"><p>The another last solution given by GFG that</p>\n<p>1. reverse string<br />\n2. find LSC</p>\n<p>would fail in this case :</p>\n<p>&#8220;abcdgfdcba&#8221;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-ki even depth-2" id="dsq-comment-20869">\r\n        <div id="dsq-comment-header-20869" class="dsq-comment-header">\r\n            <cite id="dsq-cite-20869">\r\n                <span id="dsq-author-user-20869">ki</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-20869" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-20869" class="dsq-comment-message"><p>It is working perfectly. the answer you get is 9, which is indeed correct.<br />\nI think u meant that it wont work in the case of longest-palindromic-substring and in that you are correct.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-18629">\r\n        <div id="dsq-comment-header-18629" class="dsq-comment-header">\r\n            <cite id="dsq-cite-18629">\r\n                <span id="dsq-author-user-18629">Rahul</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-18629" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-18629" class="dsq-comment-message"><p>Hi, why we do this , j = i + cl -1;<br />\nThanks!</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-19585">\r\n        <div id="dsq-comment-header-19585" class="dsq-comment-header">\r\n            <cite id="dsq-cite-19585">\r\n                <span id="dsq-author-user-19585">magnet</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-19585" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-19585" class="dsq-comment-message"><p>Let L = j ? i + 1 denote the length of the substring where i and j indicates start and end index of string  then if a substring of length L starts at position i, then<br />\nj = i + L ? 1.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-15194">\r\n        <div id="dsq-comment-header-15194" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15194">\r\n                <span id="dsq-author-user-15194">sreekanth</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15194" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15194" class="dsq-comment-message"><p>There is a serious flaw in the original code written by geeksforgeeks.</p>\n<p>suppose the input is &#8220;axbya&#8221;</p>\n<p>From the given code output is 3. but actual output should be 1.</p>\n<p>Logic fail:[I found]</p>\n<p>original post<br />\n// If there are more than two characters, and first and last<br />\n// characters are same<br />\nElse L(i, j) =  L(i + 1, j &#8211; 1) + 2 </p>\n<p>&#8220;axbya&#8221; here suppose L[1,5] = L[2,4] + 2;</p>\n<p>L[2,4] returns 1 which is correct but L[1,5] = 1+2 = 3;</p>\n<p>1..5 is not a palindrome. we need to check whether 2..4 is a<br />\npalindrome or not. If 2..4 is palindrome then only we should add<br />\n2 otherwise not.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-kartik even depth-2" id="dsq-comment-15196">\r\n        <div id="dsq-comment-header-15196" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15196">\r\n                <span id="dsq-author-user-15196">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15196" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15196" class="dsq-comment-message"><p>Please take a closer look at the problem statement.  It is subsequence, not substring.  See <a href="http://en.wikipedia.org/wiki/Subsequence" rel="nofollow">http://en.wikipedia.org/wiki/Subsequence</a> for definition of subsequence.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-15206">\r\n        <div id="dsq-comment-header-15206" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15206">\r\n                <span id="dsq-author-user-15206">sreekanth</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15206" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15206" class="dsq-comment-message"><p>oohh.. okay. Thanks.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even depth-2" id="dsq-comment-28318">\r\n        <div id="dsq-comment-header-28318" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28318">\r\n                <span id="dsq-author-user-28318">Nitin Pallindrome</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28318" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28318" class="dsq-comment-message"><p>bhaiya ji &#8230;its 3 char seq like  axa   or aba  or aya&#8230;..</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-10824">\r\n        <div id="dsq-comment-header-10824" class="dsq-comment-header">\r\n            <cite id="dsq-cite-10824">\r\n                <span id="dsq-author-user-10824">Prateek Caire</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-10824" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-10824" class="dsq-comment-message"><p>without DP but for even length-ed palindrome..</p>\n<pre> <code language="C">\nP()\n\tfor each i from 0 to n-1\n\t\tif(a[i] == a[i+1])\n\t\t\tj = i\n\t\t\tk = i+1\n\t\t\tc = 0\n\t\t\twhile(a[j] == a[k])\t\t\t\t\t\t\t\t\n\t\t\t\tc = c+2\n\t\t\t\tj--\n\t\t\t\tk++\n\t\t\tif(c &gt; mx)\n\t\t\t\tmx = c\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-9124">\r\n        <div id="dsq-comment-header-9124" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9124">\r\n                <span id="dsq-author-user-9124">Abhijeet Sinha</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9124" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9124" class="dsq-comment-message"><p>@Kartik &#8211; As you mentioned the alternate method to calculate LPS is by taking LCS of original string and its reverse version. A minor modification is required in this method. Here is the link which I went through. Please correct me if I am wrong.</p>\n<p><a href="http://wcipeg.com/wiki/Longest_palindromic_subsequence" rel="nofollow">http://wcipeg.com/wiki/Longest_palindromic_subsequence</a></p>\n<p>See the LCS-based approach in this article.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-9010">\r\n        <div id="dsq-comment-header-9010" class="dsq-comment-header">\r\n            <cite id="dsq-cite-9010">\r\nhttp://mohyt.blogspot.com                <span id="dsq-author-user-9010">mohyt</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-9010" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-9010" class="dsq-comment-message"><p>memoized version of lps:</p>\n<p># include &lt;cstdio&gt;<br />\n# include &lt;cstring&gt;<br />\n# define NIL -1<br />\n# define MAX 1000</p>\n<p>using namespace std;</p>\n<p>inline int max(int a, int b)<br />\n{<br />\n    return (a &gt; b) ? a : b;<br />\n}</p>\n<p>int L[MAX][MAX];</p>\n<p>int lps(char *X,int i,int j)<br />\n{<br />\n  if(i==j)<br />\n    L[i][j]=1;<br />\n  else if(X[i]==X[j] &amp;&amp; i+1==j)<br />\n      L[i][j]=2;<br />\n  else if(X[i]==X[j])<br />\n      L[i][j]=2+lps(X,i+1,j-1);<br />\n  else<br />\n    L[i][j]=max(lps(X,i,j-1),lps(X,i+1,j));</p>\n<p>  return L[i][j];</p>\n<p>}</p>\n<p>void _init(int n)<br />\n{<br />\n  int i, j;<br />\n  for (i=0; i&lt;=n; i++)<br />\n    for (j=0; j&lt;=n; j++)<br />\n      L[i][j] = NIL;<br />\n}</p>\n<p>int main()<br />\n{<br />\n  char seq[] = &quot;GEEKSFORGEEKS&quot;;<br />\n  int n = strlen(seq);<br />\n  _init(n);<br />\n  printf (&quot;The lnegth of the LPS is %d&quot;, lps(seq, 0, n-1));<br />\n  return 0;<br />\n}</p>\n<p>Suggestion and comments are most welcome <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-8994">\r\n        <div id="dsq-comment-header-8994" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8994">\r\n                <span id="dsq-author-user-8994">manish</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8994" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8994" class="dsq-comment-message"><p>please check the output for the second method.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-8995">\r\n        <div id="dsq-comment-header-8995" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8995">\r\n                <span id="dsq-author-user-8995">manish</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8995" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8995" class="dsq-comment-message"><p>okay i got it&#8230;these contain space too.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-8342">\r\n        <div id="dsq-comment-header-8342" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8342">\r\n                <span id="dsq-author-user-8342">gautam</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8342" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8342" class="dsq-comment-message"><p>Without DP and without extra memory in O(n^2)</p>\n<pre> <code language="C">\n#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n#include&lt;string.h&gt; \n/*conside the each element as mid of palindrome \n\nfor eg :   string with length 5 we can consider 3rd element as middle\n\nfor string of length we need to take two element 2gthr at middle element\n\n*/\n\n\nint lps1(char *a)\n{\n   int len=strlen(a);\n   if(len&lt;=1) return len;\n   if(len==2) return ( a[0]==a[1]? 2 : 1);\n   \n   //printf(&quot;%d \\n&quot;,len);\n   int ans=1,i,j,k;\n   int max=1;\n   int ans1,max1;\n   if(len%2) //odd lengt\n    {\n     for(i=1;i&lt;len;i++)  //consider str[i] as a middle element\n      {  \n        ans=1;         \n        j=i-1; k=i+1;\n        //printf(&quot;%d %d\\n&quot;,j,k);\n        while(j&gt;=0 &amp;&amp; k &lt;len)\n         {\n           if(a[j]==a[k])\n             {ans+=2; j--;k++; /*printf(&quot;%d %d\\n&quot;,j,k);*/}                \n           else\n            break;          \n         }\n        if(max&lt;ans)\n         max=ans;                \n      }       \n    } \n  return max;\n}\nint lps2(char *a)\n{\n   int len=strlen(a);\n   \n   if(len&lt;=1) return len;\n   if(len==2) return ( a[0]==a[1]? 2 : 1);\n   \n   //printf(&quot;%d\\\\n&quot;,len);\n   int ans=1,i,j,k;\n   int max=1;\n   int ans1,max1;\n    ans1=0;\n    max1=0;\n    for(i=1;i&lt;len;i++)\n     {\n        ans1=0;\n        j=i-1;k=i;              \n        while(j&gt;=0&amp;&amp;k&lt;len)\n        {\n          if(a[j]==a[k]) { ans1+=2; j--;k++; }\n          else\n           break;                \n        }        \n        if(max1&lt;ans1)\n         max1=ans1; \n                                 \n     }\n   return max1; \n}\n\nint LPS(char *a)\n{\n int i,j;\n i=lps1(a);\n j=lps2(a);\n //printf(&quot;%d %d \\n&quot;,i,j);\n return i&gt;j? i: j;   \n}\nint main()\n{\n    char seq[] = &quot;AAAABAAAAAAAA&quot;;\n    int n = strlen(seq);\n    printf (&quot;The lnegth of the LPS is %d&quot;, LPS(seq));\n    getchar();\n    return 0;\n}\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-8344">\r\n        <div id="dsq-comment-header-8344" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8344">\r\n                <span id="dsq-author-user-8344">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8344" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8344" class="dsq-comment-message"><p>Your program doesn&#8217;t seem to be working for many strings.  For example, it produced 1 as output for string &#8220;ABCBCA&#8221;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-8351">\r\n        <div id="dsq-comment-header-8351" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8351">\r\n                <span id="dsq-author-user-8351">gautam</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8351" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8351" class="dsq-comment-message"><p>Sorry for the wrong code </p>\n<p>In the lps1 just remove the following condition and please let me know if it has some more flaw. </p>\n<p> if(len%2) //odd lengt  </p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt depth-2" id="dsq-comment-22266">\r\n        <div id="dsq-comment-header-22266" class="dsq-comment-header">\r\n            <cite id="dsq-cite-22266">\r\n                <span id="dsq-author-user-22266">anonymous</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-22266" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-22266" class="dsq-comment-message"><p>your code calculates longest common sub&#8217;string&#8217; not sub&#8217;sequence&#8217;</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-30356">\r\n        <div id="dsq-comment-header-30356" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30356">\r\n                <span id="dsq-author-user-30356">BP</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30356" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30356" class="dsq-comment-message"><p>can you tell how to print longest palindrome subsequence</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-8334">\r\n        <div id="dsq-comment-header-8334" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8334">\r\n                <span id="dsq-author-user-8334">eminem</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8334" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8334" class="dsq-comment-message"><p>The solutions that you have posted are O(n2). There are better solutions with both O(nlogn) and O(n) complexities. Google them !</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-8335">\r\n        <div id="dsq-comment-header-8335" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8335">\r\n                <span id="dsq-author-user-8335">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8335" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8335" class="dsq-comment-message"><p>Tried googling it, but couldn&#8217;t find a nLogn solution. Could you post the links, please?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-8337">\r\n        <div id="dsq-comment-header-8337" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8337">\r\n                <span id="dsq-author-user-8337">eminem</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8337" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8337" class="dsq-comment-message"><p>please find the linear time solution here</p>\n<p><a href="http://www.akalin.cx/longest-palindrome-linear-time" rel="nofollow">http://www.akalin.cx/longest-palindrome-linear-time</a></p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-4" id="dsq-comment-8338">\r\n        <div id="dsq-comment-header-8338" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8338">\r\n                <span id="dsq-author-user-8338">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8338" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8338" class="dsq-comment-message"><p>Thanks for sharing the link. We will look into this solution.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-5" id="dsq-comment-8339">\r\n        <div id="dsq-comment-header-8339" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8339">\r\n                <span id="dsq-author-user-8339">eminem</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8339" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8339" class="dsq-comment-message"><p><img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-5" id="dsq-comment-30353">\r\n        <div id="dsq-comment-header-30353" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30353">\r\n                <span id="dsq-author-user-30353">BP</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30353" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30353" class="dsq-comment-message"><p>can anybody could tell me how to print the longest palindrome subsequence string not the length</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt depth-4" id="dsq-comment-8340">\r\n        <div id="dsq-comment-header-8340" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8340">\r\n                <span id="dsq-author-user-8340">Saurabh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8340" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8340" class="dsq-comment-message"><p>Your link points to longest palindromic &#8216;substring&#8217;, not &#8216;subsequence&#8217;.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-5" id="dsq-comment-8352">\r\n        <div id="dsq-comment-header-8352" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8352">\r\n                <span id="dsq-author-user-8352">eminem</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8352" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8352" class="dsq-comment-message"><p>@saurav and how are the two things different?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-5" id="dsq-comment-8353">\r\n        <div id="dsq-comment-header-8353" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8353">\r\n                <span id="dsq-author-user-8353">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8353" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8353" class="dsq-comment-message"><p>There is difference between following two terms<br />\n1) Substring<br />\n2) Subsequence</p>\n<p>&#8220;ABC&#8221; is a subsequence of &#8220;AABBCC&#8221;, but not a substring.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-5" id="dsq-comment-30360">\r\n        <div id="dsq-comment-header-30360" class="dsq-comment-header">\r\n            <cite id="dsq-cite-30360">\r\n                <span id="dsq-author-user-30360">BP</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-30360" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-30360" class="dsq-comment-message"><p>can you please tell me how to print the longest palindrome subsequence..</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/dynamic-programming-set-12-longest-palindromic-subsequence/\';\r\nvar disqus_identifier = \'19155 http://www.geeksforgeeks.org/?p=19155\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Dynamic Programming | Set 12 (Longest Palindromic Subsequence)";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(406)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(80)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(57)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'62 topics\' style=\'font-size: 15.766423357664pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPython.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.346 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-02 04:16:15 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p187
sb.