ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/BucketSort'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/BucketSort.java'
p11
atp12
Rp13
sS'title'
p14
VBucket Sort
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/bucket-sort-2/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(cbs4.element
NavigableString
p44
c__builtin__
unicode
p45
VSort a large set of floating point numbers which are in range from 0.0 to 1.0 and are uniformly distributed across the range. How do we sort the numbers efficiently?
p46
tp47
Rp48
(dp49
g34
Nsg27
g0
(g22
g2
Ntp50
Rp51
(dp52
g26
I00
sg27
g0
(g44
g45
V\u000a
p53
tp54
Rp55
(dp56
g34
g0
(g22
g2
Ntp57
Rp58
(dp59
g26
I01
sg27
g0
(g22
g2
Ntp60
Rp61
(dp62
g26
I00
sg27
g0
(g44
g45
VBucket sort is mainly useful when input is uniformly distributed over a range.  For example, consider the following problem. 
p63
tp64
Rp65
(dp66
g34
Nsg27
g39
sg28
g61
sg37
g61
sg31
g39
sbsg28
g58
sg29
Vspan
p67
sg31
g39
sg32
Nsg33
Nsg34
g65
sg35
(dp68
Vid
p69
Vmore-128013
p70
ssg37
g58
sS'parser_class'
p71
cbs4
BeautifulSoup
p72
sS'hidden'
p73
I00
sS'contents'
p74
(lp75
sbsg28
g55
sg29
Vbr
p76
sg31
g39
sg32
Nsg33
Nsg34
g61
sg35
(dp77
sg37
g55
sg71
g72
sg73
I00
sg74
(lp78
sbsg27
g58
sg28
g51
sg37
g51
sg31
g39
sbsg28
Nsg29
Vem
p79
sg31
g39
sg32
Nsg33
Nsg34
g55
sg35
(dp80
sg37
g48
sg71
g72
sg73
I00
sg74
(lp81
g48
asbsg28
Nsg37
g42
sg31
g51
sbsg28
g0
(g22
g2
Ntp82
Rp83
(dp84
g26
I00
sg27
g0
(g44
g45
V\u000aThe idea is to use bucket sort.  Following is bucket algorithm.
p85
tp86
Rp87
(dp88
g34
g0
(g22
g2
Ntp89
Rp90
(dp91
g26
I01
sg27
g0
(g44
g45
V can not be applied here as we use keys as index in counting sort. Here keys are floating point numbers. 
p92
tp93
Rp94
(dp95
g34
g0
(g22
g2
Ntp96
Rp97
(dp98
g26
I00
sg27
g0
(g44
g45
V\u000aCan we sort the array in linear time? 
p99
tp100
Rp101
(dp102
g34
g0
(g22
g2
Ntp103
Rp104
(dp105
g26
I01
sg27
g0
(g44
g45
V (Merge Sort, Heap Sort, Quick-Sort .. etc) is \u03a9(n Log n), i.e., they cannot do better than nLogn.
p106
tp107
Rp108
(dp109
g34
g0
(g22
g2
Ntp110
Rp111
(dp112
g26
I00
sg27
g0
(g44
g45
VA simple way is to apply a comparison based sorting algorithm. The 
p113
tp114
Rp115
(dp116
g34
Nsg27
g42
sg28
g111
sg37
g111
sg31
g42
sbsg28
g108
sg29
Va
p117
sg31
g42
sg32
Nsg33
Nsg34
g115
sg35
(dp118
Vhref
p119
Vhttp://www.geeksforgeeks.org/lower-bound-on-comparison-based-sorting-algorithms/
p120
sVtarget
p121
V_blank
p122
ssg37
g0
(g44
g45
Vlower bound for Comparison based sorting algorithm
p123
tp124
Rp125
(dp126
g34
Nsg27
g111
sg28
Nsg37
g108
sg31
g111
sbsg71
g72
sg73
I00
sg74
(lp127
g125
asbsg27
g125
sg28
g104
sg37
g104
sg31
g42
sbsg28
g101
sg29
Vbr
p128
sg31
g42
sg32
Nsg33
Nsg34
g108
sg35
(dp129
sg37
g101
sg71
g72
sg73
I00
sg74
(lp130
sbsg27
g104
sg28
g97
sg37
g97
sg31
g42
sbsg28
g94
sg29
g117
sg31
g42
sg32
Nsg33
Nsg34
g101
sg35
(dp131
Vhref
p132
Vhttp://www.geeksforgeeks.org/counting-sort/
p133
sVtarget
p134
V_blank
p135
ssg37
g0
(g44
g45
VCounting sort
p136
tp137
Rp138
(dp139
g34
Nsg27
g97
sg28
Nsg37
g94
sg31
g97
sbsg71
g72
sg73
I00
sg74
(lp140
g138
asbsg27
g138
sg28
g90
sg37
g90
sg31
g42
sbsg28
g87
sg29
Vbr
p141
sg31
g42
sg32
Nsg33
Nsg34
g94
sg35
(dp142
sg37
g87
sg71
g72
sg73
I00
sg74
(lp143
sbsg27
g90
sg28
Nsg37
g83
sg31
g42
sbsg28
g0
(g22
g2
Ntp144
Rp145
(dp146
g26
I00
sg27
g0
(g44
g45
V\u000a1) Create n empty buckets (Or lists).\u000a2) Do following for every array element arr[i].\u000a.......a) Insert arr[i] into bucket[n*array[i]]\u000a3) Sort individual buckets using insertion sort.\u000a4) Concatenate all sorted buckets.\u000a
p147
tp148
Rp149
(dp150
g34
g0
(g22
g2
Ntp151
Rp152
(dp153
g26
I00
sg27
g0
(g44
g45
V\u000a
p154
tp155
Rp156
(dp157
g34
Nsg27
g83
sg28
g152
sg37
g152
sg31
g83
sbsg28
g149
sg29
Vstrong
p158
sg31
g83
sg32
Nsg33
Nsg34
g156
sg35
(dp159
sg37
g0
(g44
g45
VbucketSort(arr[], n)
p160
tp161
Rp162
(dp163
g34
Nsg27
g152
sg28
Nsg37
g149
sg31
g152
sbsg71
g72
sg73
I00
sg74
(lp164
g162
asbsg27
g162
sg28
Nsg37
g145
sg31
g83
sbsg28
g0
(g22
g2
Ntp165
Rp166
(dp167
g26
I00
sg27
g0
(g44
g45
V) demonstrates working of bucket sort.
p168
tp169
Rp170
(dp171
g34
g0
(g22
g2
Ntp172
Rp173
(dp174
g26
I00
sg27
g0
(g44
g45
VFollowing diagram (taken from 
p175
tp176
Rp177
(dp178
g34
Nsg27
g145
sg28
g173
sg37
g173
sg31
g145
sbsg28
g170
sg29
g117
sg31
g145
sg32
Nsg33
Nsg34
g177
sg35
(dp179
Vhref
p180
Vhttp://www.flipkart.com/introduction-algorithms-3rd/p/itmdvd93bzvrnc7b?pid=9788120340077&affid=sandeepgfg
p181
sVtarget
p182
V_blank
p183
ssg37
g0
(g44
g45
VCLRS book
p184
tp185
Rp186
(dp187
g34
Nsg27
g173
sg28
Nsg37
g170
sg31
g173
sbsg71
g72
sg73
I00
sg74
(lp188
g186
asbsg27
g186
sg28
Nsg37
g166
sg31
g145
sbsg28
g0
(g22
g2
Ntp189
Rp190
(dp191
g26
I00
sg27
g0
(g22
g2
Ntp192
Rp193
(dp194
g26
I01
sg27
g0
(g22
g2
Ntp195
Rp196
(dp197
g26
I00
sg27
g166
sg28
Nsg29
g117
sg31
g166
sg32
Nsg33
Nsg34
Nsg35
(dp198
Vhref
p199
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/BucketSort.png
p200
ssg37
g193
sg71
g72
sg73
I00
sg74
(lp201
g193
asbsg28
Nsg29
Vimg
p202
sg31
g196
sg32
Nsg33
Nsg34
Nsg35
(dp203
Vsrc
p204
Vhttp://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/BucketSort.png
p205
sValt
p206
VBucketSort
p207
sVheight
p208
V240
p209
sVclass
p210
(lp211
Valigncenter
p212
aVsize-full
p213
aVwp-image-128702
p214
asVwidth
p215
V320
p216
ssg37
g190
sg71
g72
sg73
I00
sg74
(lp217
sbsg28
g0
(g22
g2
Ntp218
Rp219
(dp220
g26
I00
sg27
g0
(g44
g45
V for more details)
p221
tp222
Rp223
(dp224
g34
g0
(g22
g2
Ntp225
Rp226
(dp227
g26
I00
sg27
g0
(g44
g45
V\u000aThe main step to analyze is step 3.  This step also takes O(n) time on average if all numbers are uniformly distributed (please refer 
p228
tp229
Rp230
(dp231
g34
g0
(g22
g2
Ntp232
Rp233
(dp234
g26
I01
sg27
g0
(g44
g45
V If we assume that insertion in a bucket takes O(1) time then steps 1 and 2 of the above algorithm clearly take O(n) time.  The O(1) is easily possible if we use a linked list to represent a bucket (In the following code, C++ vector is used for simplicity).  Step 4 also takes O(n) time as there will be n items in all buckets.
p235
tp236
Rp237
(dp238
g34
g0
(g22
g2
Ntp239
Rp240
(dp241
g26
I00
sg27
g190
sg28
g237
sg29
Vstrong
p242
sg31
g190
sg32
Nsg33
Nsg34
Nsg35
(dp243
sg37
g0
(g44
g45
VTime Complexity:
p244
tp245
Rp246
(dp247
g34
Nsg27
g240
sg28
Nsg37
g237
sg31
g240
sbsg71
g72
sg73
I00
sg74
(lp248
g246
asbsg27
g246
sg28
g233
sg37
g233
sg31
g190
sbsg28
g230
sg29
Vbr
p249
sg31
g190
sg32
Nsg33
Nsg34
g237
sg35
(dp250
sg37
g230
sg71
g72
sg73
I00
sg74
(lp251
sbsg27
g233
sg28
g226
sg37
g226
sg31
g190
sbsg28
g223
sg29
g117
sg31
g190
sg32
Nsg33
Nsg34
g230
sg35
(dp252
Vhref
p253
Vhttp://www.flipkart.com/introduction-algorithms-3rd/p/itmdvd93bzvrnc7b?pid=9788120340077&affid=sandeepgfg
p254
sVtarget
p255
V_blank
p256
ssg37
g0
(g44
g45
VCLRS book
p257
tp258
Rp259
(dp260
g34
Nsg27
g226
sg28
Nsg37
g223
sg31
g226
sbsg71
g72
sg73
I00
sg74
(lp261
g259
asbsg27
g259
sg28
Nsg37
g219
sg31
g190
sbsg28
g0
(g22
g2
Ntp262
Rp263
(dp264
g26
I00
sg27
g0
(g44
g45
VFollowing is C++ implementation of the above algorithm.
p265
tp266
Rp267
(dp268
g34
Nsg27
g219
sg28
Nsg37
g263
sg31
g219
sbsg28
g0
(g22
g2
Ntp269
Rp270
(dp271
g26
I00
sg27
g0
(g44
g45
V\u000a// C++ program to sort an array using bucket sort\u000a#include <iostream>\u000a#include <algorithm>\u000a#include <vector>\u000ausing namespace std;\u000a\u000a// Function to sort arr[] of size n using bucket sort\u000avoid bucketSort(float arr[], int n)\u000a{\u000a    // 1) Create n empty buckets\u000a    vector<float> b[n];\u000a   \u000a    // 2) Put array elements in different buckets\u000a    for (int i=0; i<n; i++)\u000a    {\u000a       int bi = n*arr[i]; // Index in bucket\u000a       b[bi].push_back(arr[i]);\u000a    }\u000a\u000a    // 3) Sort individual buckets\u000a    for (int i=0; i<n; i++)\u000a       sort(b[i].begin(), b[i].end());\u000a\u000a    // 4) Concatenate all buckets into arr[]\u000a    int index = 0;\u000a    for (int i = 0; i < n; i++)\u000a        for (int j = 0; j < b[i].size(); j++)\u000a          arr[index++] = b[i][j];\u000a}\u000a\u000a/* Driver program to test above funtion */\u000aint main()\u000a{\u000a    float arr[] = {0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434};\u000a    int n = sizeof(arr)/sizeof(arr[0]);\u000a    bucketSort(arr, n);\u000a\u000a    cout << "Sorted array is \u005cn";\u000a    for (int i=0; i<n; i++)\u000a       cout << arr[i] << " ";\u000a    return 0;\u000a}\u000a
p272
tp273
Rp274
(dp275
g34
Nsg27
g263
sg28
Nsg37
g270
sg31
g263
sbsg28
Nsg29
Vp
p276
sg31
g24
sg32
Nsg33
Nsg34
g263
sg35
(dp277
sg37
g0
(g44
g45
VOutput:\u000a
p278
tp279
Rp280
(dp281
g34
Nsg27
g270
sg28
g0
(g22
g2
Ntp282
Rp283
(dp284
g26
I00
sg27
g280
sg28
g0
(g44
g45
V\u000a
p285
tp286
Rp287
(dp288
g34
g283
sg27
g0
(g44
g45
VSorted array is\u000a0.1234 0.3434 0.565 0.656 0.665 0.897
p289
tp290
Rp291
(dp292
g34
Nsg27
g283
sg28
Nsg37
g287
sg31
g283
sbsg28
g0
(g22
g2
Ntp293
Rp294
(dp295
g26
I00
sg27
g287
sg28
g0
(g44
g45
V\u000a
p296
tp297
Rp298
(dp299
g34
g294
sg27
g0
(g44
g45
V\u000a
p300
tp301
Rp302
(dp303
g34
g0
(g22
g2
Ntp304
Rp305
(dp306
g26
I01
sg27
g0
(g44
g45
Vhttp://en.wikipedia.org/wiki/Bucket_sort
p307
tp308
Rp309
(dp310
g34
Nsg27
g0
(g22
g2
Ntp311
Rp312
(dp313
g26
I00
sg27
g0
(g44
g45
V\u000a
p314
tp315
Rp316
(dp317
g34
g0
(g22
g2
Ntp318
Rp319
(dp320
g26
I01
sg27
g0
(g44
g45
VIntroduction to Algorithms 3rd Edition by Clifford Stein, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest
p321
tp322
Rp323
(dp324
g34
Nsg27
g0
(g22
g2
Ntp325
Rp326
(dp327
g26
I00
sg27
g0
(g44
g45
V\u000a
p328
tp329
Rp330
(dp331
g34
g0
(g22
g2
Ntp332
Rp333
(dp334
g26
I01
sg27
g0
(g44
g45
VReferences:
p335
tp336
Rp337
(dp338
g34
Nsg27
g0
(g22
g2
Ntp339
Rp340
(dp341
g26
I00
sg27
g294
sg28
g333
sg29
Vstrong
p342
sg31
g294
sg32
Nsg33
Nsg34
Nsg35
(dp343
sg37
g337
sg71
g72
sg73
I00
sg74
(lp344
g337
asbsg28
Nsg37
g333
sg31
g340
sbsg28
g330
sg29
Vbr
p345
sg31
g294
sg32
Nsg33
Nsg34
g340
sg35
(dp346
sg37
g330
sg71
g72
sg73
I00
sg74
(lp347
sbsg27
g333
sg28
g326
sg37
g326
sg31
g294
sbsg28
g319
sg29
g117
sg31
g294
sg32
Nsg33
Nsg34
g330
sg35
(dp348
Vhref
p349
Vhttp://www.flipkart.com/introduction-algorithms-3rd/p/itmczynzhyhxv2gs?pid=9788120340077&affid=sandeepgfg
p350
sVtarget
p351
V_blank
p352
ssg37
g323
sg71
g72
sg73
I00
sg74
(lp353
g323
asbsg28
Nsg37
g319
sg31
g326
sbsg28
g316
sg29
Vbr
p354
sg31
g294
sg32
Nsg33
Nsg34
g326
sg35
(dp355
sg37
g316
sg71
g72
sg73
I00
sg74
(lp356
sbsg27
g319
sg28
g312
sg37
g312
sg31
g294
sbsg28
Nsg29
g117
sg31
g294
sg32
Nsg33
Nsg34
g316
sg35
(dp357
Vhref
p358
Vhttp://en.wikipedia.org/wiki/Bucket_sort
p359
sVtarget
p360
V_blank
p361
ssg37
g309
sg71
g72
sg73
I00
sg74
(lp362
g309
ag305
ag302
asbsg28
g305
sg37
g305
sg31
g312
sbsg28
g302
sg29
Vbr
p363
sg31
g312
sg32
Nsg33
Nsg34
g309
sg35
(dp364
sg37
g302
sg71
g72
sg73
I00
sg74
(lp365
sbsg27
g305
sg28
Nsg37
g298
sg31
g312
sbsg28
g0
(g22
g2
Ntp366
Rp367
(dp368
g26
I00
sg27
g298
sg28
g0
(g44
g45
V\u000a
p369
tp370
Rp371
(dp372
g34
g367
sg27
g0
(g44
g45
VOther Sorting Algorithms on GeeksforGeeks/GeeksQuiz:
p373
tp374
Rp375
(dp376
g34
Nsg27
g0
(g22
g2
Ntp377
Rp378
(dp379
g26
I00
sg27
g367
sg28
Nsg29
Vstrong
p380
sg31
g367
sg32
Nsg33
Nsg34
Nsg35
(dp381
sg37
g375
sg71
g72
sg73
I00
sg74
(lp382
g375
asbsg28
Nsg37
g371
sg31
g378
sbsg28
g0
(g22
g2
Ntp383
Rp384
(dp385
g26
I00
sg27
g371
sg28
g0
(g44
g45
V\u000a
p386
tp387
Rp388
(dp389
g34
g384
sg27
g0
(g44
g45
V\u000a
p390
tp391
Rp392
(dp393
g34
g0
(g22
g2
Ntp394
Rp395
(dp396
g26
I00
sg27
g0
(g44
g45
V\u000a
p397
tp398
Rp399
(dp400
g34
g0
(g22
g2
Ntp401
Rp402
(dp403
g26
I00
sg27
g0
(g44
g45
V\u000a
p404
tp405
Rp406
(dp407
g34
g0
(g22
g2
Ntp408
Rp409
(dp410
g26
I00
sg27
g0
(g44
g45
V\u000a
p411
tp412
Rp413
(dp414
g34
g0
(g22
g2
Ntp415
Rp416
(dp417
g26
I00
sg27
g0
(g44
g45
V\u000a
p418
tp419
Rp420
(dp421
g34
g0
(g22
g2
Ntp422
Rp423
(dp424
g26
I00
sg27
g0
(g44
g45
V\u000a
p425
tp426
Rp427
(dp428
g34
g0
(g22
g2
Ntp429
Rp430
(dp431
g26
I00
sg27
g0
(g44
g45
V\u000a
p432
tp433
Rp434
(dp435
g34
g0
(g22
g2
Ntp436
Rp437
(dp438
g26
I00
sg27
g0
(g44
g45
V\u000a
p439
tp440
Rp441
(dp442
g34
g0
(g22
g2
Ntp443
Rp444
(dp445
g26
I00
sg27
g0
(g44
g45
V\u000a
p446
tp447
Rp448
(dp449
g34
g0
(g22
g2
Ntp450
Rp451
(dp452
g26
I00
sg27
g0
(g44
g45
V\u000a
p453
tp454
Rp455
(dp456
g34
Nsg27
g384
sg28
g451
sg37
g451
sg31
g384
sbsg28
g448
sg29
Vli
p457
sg31
g384
sg32
Nsg33
Nsg34
g455
sg35
(dp458
sg37
g0
(g22
g2
Ntp459
Rp460
(dp461
g26
I00
sg27
g451
sg28
Nsg29
g117
sg31
g451
sg32
Nsg33
Nsg34
Nsg35
(dp462
Vhref
p463
Vhttp://geeksquiz.com/selection-sort/
p464
sVtarget
p465
V_blank
p466
ssg37
g0
(g44
g45
VSelection Sort
p467
tp468
Rp469
(dp470
g34
Nsg27
g460
sg28
Nsg37
g448
sg31
g460
sbsg71
g72
sg73
I00
sg74
(lp471
g469
asbsg71
g72
sg73
I00
sg74
(lp472
g460
asbsg27
g469
sg28
g444
sg37
g444
sg31
g384
sbsg28
g441
sg29
Vli
p473
sg31
g384
sg32
Nsg33
Nsg34
g448
sg35
(dp474
sg37
g0
(g22
g2
Ntp475
Rp476
(dp477
g26
I00
sg27
g444
sg28
Nsg29
g117
sg31
g444
sg32
Nsg33
Nsg34
Nsg35
(dp478
Vhref
p479
Vhttp://geeksquiz.com/bubble-sort/
p480
sVtarget
p481
V_blank
p482
ssg37
g0
(g44
g45
VBubble Sort
p483
tp484
Rp485
(dp486
g34
Nsg27
g476
sg28
Nsg37
g441
sg31
g476
sbsg71
g72
sg73
I00
sg74
(lp487
g485
asbsg71
g72
sg73
I00
sg74
(lp488
g476
asbsg27
g485
sg28
g437
sg37
g437
sg31
g384
sbsg28
g434
sg29
Vli
p489
sg31
g384
sg32
Nsg33
Nsg34
g441
sg35
(dp490
sg37
g0
(g22
g2
Ntp491
Rp492
(dp493
g26
I00
sg27
g437
sg28
Nsg29
g117
sg31
g437
sg32
Nsg33
Nsg34
Nsg35
(dp494
Vhref
p495
Vhttp://geeksquiz.com/insertion-sort/
p496
sVtarget
p497
V_blank
p498
ssg37
g0
(g44
g45
VInsertion Sort
p499
tp500
Rp501
(dp502
g34
Nsg27
g492
sg28
Nsg37
g434
sg31
g492
sbsg71
g72
sg73
I00
sg74
(lp503
g501
asbsg71
g72
sg73
I00
sg74
(lp504
g492
asbsg27
g501
sg28
g430
sg37
g430
sg31
g384
sbsg28
g427
sg29
Vli
p505
sg31
g384
sg32
Nsg33
Nsg34
g434
sg35
(dp506
sg37
g0
(g22
g2
Ntp507
Rp508
(dp509
g26
I00
sg27
g430
sg28
Nsg29
g117
sg31
g430
sg32
Nsg33
Nsg34
Nsg35
(dp510
Vhref
p511
Vhttp://geeksquiz.com/merge-sort/
p512
sVtarget
p513
V_blank
p514
ssg37
g0
(g44
g45
VMerge Sort
p515
tp516
Rp517
(dp518
g34
Nsg27
g508
sg28
Nsg37
g427
sg31
g508
sbsg71
g72
sg73
I00
sg74
(lp519
g517
asbsg71
g72
sg73
I00
sg74
(lp520
g508
asbsg27
g517
sg28
g423
sg37
g423
sg31
g384
sbsg28
g420
sg29
Vli
p521
sg31
g384
sg32
Nsg33
Nsg34
g427
sg35
(dp522
sg37
g0
(g22
g2
Ntp523
Rp524
(dp525
g26
I00
sg27
g423
sg28
Nsg29
g117
sg31
g423
sg32
Nsg33
Nsg34
Nsg35
(dp526
Vhref
p527
Vhttp://geeksquiz.com/heap-sort/
p528
sVtarget
p529
V_blank
p530
ssg37
g0
(g44
g45
VHeap Sort
p531
tp532
Rp533
(dp534
g34
Nsg27
g524
sg28
Nsg37
g420
sg31
g524
sbsg71
g72
sg73
I00
sg74
(lp535
g533
asbsg71
g72
sg73
I00
sg74
(lp536
g524
asbsg27
g533
sg28
g416
sg37
g416
sg31
g384
sbsg28
g413
sg29
Vli
p537
sg31
g384
sg32
Nsg33
Nsg34
g420
sg35
(dp538
sg37
g0
(g22
g2
Ntp539
Rp540
(dp541
g26
I00
sg27
g416
sg28
Nsg29
g117
sg31
g416
sg32
Nsg33
Nsg34
Nsg35
(dp542
Vhref
p543
Vhttp://geeksquiz.com/quick-sort/
p544
sVtarget
p545
V_blank
p546
ssg37
g0
(g44
g45
VQuickSort
p547
tp548
Rp549
(dp550
g34
Nsg27
g540
sg28
Nsg37
g413
sg31
g540
sbsg71
g72
sg73
I00
sg74
(lp551
g549
asbsg71
g72
sg73
I00
sg74
(lp552
g540
asbsg27
g549
sg28
g409
sg37
g409
sg31
g384
sbsg28
g406
sg29
Vli
p553
sg31
g384
sg32
Nsg33
Nsg34
g413
sg35
(dp554
sg37
g0
(g22
g2
Ntp555
Rp556
(dp557
g26
I00
sg27
g409
sg28
Nsg29
g117
sg31
g409
sg32
Nsg33
Nsg34
Nsg35
(dp558
Vhref
p559
Vhttp://www.geeksforgeeks.org/radix-sort/
p560
ssg37
g0
(g44
g45
VRadix Sort
p561
tp562
Rp563
(dp564
g34
Nsg27
g556
sg28
Nsg37
g406
sg31
g556
sbsg71
g72
sg73
I00
sg74
(lp565
g563
asbsg71
g72
sg73
I00
sg74
(lp566
g556
asbsg27
g563
sg28
g402
sg37
g402
sg31
g384
sbsg28
g399
sg29
Vli
p567
sg31
g384
sg32
Nsg33
Nsg34
g406
sg35
(dp568
sg37
g0
(g22
g2
Ntp569
Rp570
(dp571
g26
I00
sg27
g402
sg28
Nsg29
g117
sg31
g402
sg32
Nsg33
Nsg34
Nsg35
(dp572
Vhref
p573
Vhttp://www.geeksforgeeks.org/counting-sort/
p574
ssg37
g0
(g44
g45
VCounting Sort
p575
tp576
Rp577
(dp578
g34
Nsg27
g570
sg28
Nsg37
g399
sg31
g570
sbsg71
g72
sg73
I00
sg74
(lp579
g577
asbsg71
g72
sg73
I00
sg74
(lp580
g570
asbsg27
g577
sg28
g395
sg37
g395
sg31
g384
sbsg28
g392
sg29
Vli
p581
sg31
g384
sg32
Nsg33
Nsg34
g399
sg35
(dp582
sg37
g0
(g22
g2
Ntp583
Rp584
(dp585
g26
I00
sg27
g395
sg28
Nsg29
g117
sg31
g395
sg32
Nsg33
Nsg34
Nsg35
(dp586
Vhref
p587
Vhttp://geeksquiz.com/shellsort/
p588
sVrel
p589
(lp590
Vbookmark
p591
assg37
g0
(g44
g45
VShellSort
p592
tp593
Rp594
(dp595
g34
Nsg27
g584
sg28
Nsg37
g392
sg31
g584
sbsg71
g72
sg73
I00
sg74
(lp596
g594
asbsg71
g72
sg73
I00
sg74
(lp597
g584
asbsg27
g594
sg28
Nsg37
g388
sg31
g384
sbsg28
g0
(g22
g2
Ntp598
Rp599
(dp600
g26
I00
sg27
g388
sg28
g0
(g44
g45
V\u000a
p601
tp602
Rp603
(dp604
g34
g599
sg27
g0
(g44
g45
VPlease write comments if you find anything incorrect, or you want to share more information about the topic discussed above
p605
tp606
Rp607
(dp608
g34
Nsg27
g599
sg28
Nsg37
g603
sg31
g599
sbsg28
g0
(g22
g2
Ntp609
Rp610
(dp611
g26
I00
sg27
g603
sg28
g0
(g44
g45
V\u000a
p612
tp613
Rp614
(dp615
g34
g610
sg27
g610
sg28
g0
(cbs4.element
Comment
p616
g45
V Big Rectangle Blog Bottom 
p617
tp618
Rp619
(dp620
g34
g614
sg27
g614
sg28
g0
(g44
g45
V\u000a
p621
tp622
Rp623
(dp624
g34
g619
sg27
g619
sg28
g0
(g22
g2
Ntp625
Rp626
(dp627
g26
I00
sg27
g623
sg28
g0
(g44
g45
V\u000a
p628
tp629
Rp630
(dp631
g34
g626
sg27
g626
sg28
g0
(g22
g2
Ntp632
Rp633
(dp634
g26
I00
sg27
g630
sg28
g0
(g44
g45
V\u000a
p635
tp636
Rp637
(dp638
g34
g633
sg27
g0
(g44
g45
V\u000a(adsbygoogle = window.adsbygoogle || []).push({});\u000a
p639
tp640
Rp641
(dp642
g34
Nsg27
g633
sg28
Nsg37
g637
sg31
g633
sbsg28
g0
(g22
g2
Ntp643
Rp644
(dp645
g26
I01
sg27
g637
sg28
g0
(g44
g45
V\u000a
p646
tp647
Rp648
(dp649
g34
g644
sg27
g644
sg28
Nsg37
Nsg31
g270
sbsg29
Vbr
p650
sg31
g270
sg32
Nsg33
Nsg34
g637
sg35
(dp651
sg37
g648
sg71
g72
sg73
I00
sg74
(lp652
sbsg37
g644
sg31
g270
sbsg29
Vscript
p653
sg31
g270
sg32
Nsg33
Nsg34
g630
sg35
(dp654
sg37
g641
sg71
g72
sg73
I00
sg74
(lp655
g641
asbsg37
g633
sg31
g270
sbsg29
Vins
p656
sg31
g270
sg32
Nsg33
Nsg34
g623
sg35
(dp657
Vstyle
p658
Vdisplay:inline-block;width:336px;height:280px
p659
sVdata-ad-client
p660
Vca-pub-9465609616171866
p661
sVclass
p662
(lp663
Vadsbygoogle
p664
asVdata-ad-slot
p665
V4061219431
p666
ssg37
g630
sg71
g72
sg73
I00
sg74
(lp667
sbsg37
g626
sg31
g270
sbsg37
g623
sg31
g270
sbsg37
g619
sg31
g270
sbsg29
Vscript
p668
sg31
g270
sg32
Nsg33
Nsg34
g603
sg35
(dp669
Vasync
p670
S''
p671
sVsrc
p672
V//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js
p673
ssg37
g614
sg71
g72
sg73
I00
sg74
(lp674
sbsg37
g610
sg31
g270
sbsg29
g276
sg31
g270
sg32
Nsg33
Nsg34
g388
sg35
(dp675
sg37
g607
sg71
g72
sg73
I00
sg74
(lp676
g607
asbsg37
g599
sg31
g270
sbsg29
Vul
p677
sg31
g270
sg32
Nsg33
Nsg34
g371
sg35
(dp678
sg37
g455
sg71
g72
sg73
I00
sg74
(lp679
g455
ag451
ag448
ag444
ag441
ag437
ag434
ag430
ag427
ag423
ag420
ag416
ag413
ag409
ag406
ag402
ag399
ag395
ag392
asbsg37
g384
sg31
g270
sbsg29
g276
sg31
g270
sg32
Nsg33
Nsg34
g298
sg35
(dp680
sg37
g378
sg71
g72
sg73
I00
sg74
(lp681
g378
asbsg37
g367
sg31
g270
sbsg29
g276
sg31
g270
sg32
Nsg33
Nsg34
g287
sg35
(dp682
sg37
g340
sg71
g72
sg73
I00
sg74
(lp683
g340
ag333
ag330
ag326
ag319
ag316
ag312
asbsg37
g294
sg31
g270
sbsg29
Vpre
p684
sg31
g270
sg32
Nsg33
Nsg34
g280
sg35
(dp685
sg37
g291
sg71
g72
sg73
I00
sg74
(lp686
g291
asbsg37
g283
sg31
g270
sbsg71
g72
sg73
I00
sg74
(lp687
g280
ag283
ag287
ag294
ag298
ag367
ag371
ag384
ag388
ag599
ag603
ag610
ag614
ag619
ag623
ag626
ag630
ag633
ag637
ag644
ag648
asbsg29
Vpre
p688
sg31
g24
sg32
Nsg33
Nsg34
g219
sg35
(dp689
Vclass
p690
(lp691
Vbrush:
p692
aVcpp;
p693
aVhighlight:
p694
aV[7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29];
p695
aVtitle:
p696
aV;
p697
aVnotranslate
p698
asVtitle
p699
V
p700
ssg37
g274
sg71
g72
sg73
I00
sg74
(lp701
g274
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
g190
sg35
(dp702
sg37
g267
sg71
g72
sg73
I00
sg74
(lp703
g267
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
g166
sg35
(dp704
sg37
g240
sg71
g72
sg73
I00
sg74
(lp705
g240
ag237
ag233
ag230
ag226
ag223
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
g145
sg35
(dp706
sg37
g196
sg71
g72
sg73
I00
sg74
(lp707
g196
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
g83
sg35
(dp708
sg37
g177
sg71
g72
sg73
I00
sg74
(lp709
g177
ag173
ag170
asbsg29
Vpre
p710
sg31
g24
sg32
Nsg33
Nsg34
g42
sg35
(dp711
sg37
g156
sg71
g72
sg73
I00
sg74
(lp712
g156
ag152
ag149
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp713
sg37
g115
sg71
g72
sg73
I00
sg74
(lp714
g115
ag111
ag108
ag104
ag101
ag97
ag94
ag90
ag87
asbsg29
g276
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp715
sg37
g65
sg71
g72
sg73
I00
sg74
(lp716
g65
ag61
ag58
ag55
ag51
asbsg71
Nsg73
I00
sg74
(lp717
g39
ag42
ag83
ag145
ag166
ag190
ag219
ag263
ag270
asbsS'raw_page'
p718
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Bucket Sort - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/bucket-sort-2/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Bucket Sort - GeeksforGeeks" />\n<meta property="og:description" content="Bucket sort is mainly useful when input is uniformly distributed over a range. For example, consider the following problem. Sort a large set of floating point numbers which are in range from 0.0 to 1.0 and are uniformly distributed across the range. How do we sort the numbers efficiently? A simple way is to apply\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/bucket-sort-2/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:section" content="Sorting" />\n<meta property="article:published_time" content="2014-04-26T17:38:57+00:00" />\n<meta property="article:modified_time" content="2015-11-02T21:45:25+00:00" />\n<meta property="og:updated_time" content="2015-11-02T21:45:25+00:00" />\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/BucketSort.png" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-128013 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-128013" class="post-128013 post type-post status-publish format-standard hentry category-sorting">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Bucket Sort</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Bucket sort is mainly useful when input is uniformly distributed over a range.  For example, consider the following problem. <span id="more-128013"></span><br />\n<em>Sort a large set of floating point numbers which are in range from 0.0 to 1.0 and are uniformly distributed across the range. How do we sort the numbers efficiently?</em></p>\n<p>A simple way is to apply a comparison based sorting algorithm. The <a href="http://www.geeksforgeeks.org/lower-bound-on-comparison-based-sorting-algorithms/" target="_blank">lower bound for Comparison based sorting algorithm</a> (Merge Sort, Heap Sort, Quick-Sort .. etc) is &Omega;(n Log n), i.e., they cannot do better than nLogn.<br />\nCan we sort the array in linear time? <a href="http://www.geeksforgeeks.org/counting-sort/" target="_blank">Counting sort</a> can not be applied here as we use keys as index in counting sort. Here keys are floating point numbers.\xc2\xa0<br />\nThe idea is to use bucket sort.  Following is bucket algorithm.</p>\n<pre>\r\n<strong>bucketSort(arr[], n)</strong>\r\n1) Create n empty buckets (Or lists).\r\n2) Do following for every array element arr[i].\r\n.......a) Insert arr[i] into bucket[n*array[i]]\r\n3) Sort individual buckets using insertion sort.\r\n4) Concatenate all sorted buckets.\r\n</pre>\n<p>Following diagram (taken from <a href="http://www.flipkart.com/introduction-algorithms-3rd/p/itmdvd93bzvrnc7b?pid=9788120340077&#038;affid=sandeepgfg" target="_blank">CLRS book</a>) demonstrates working of bucket sort.</p>\n<p><a href="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/BucketSort.png"><img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/BucketSort.png" alt="BucketSort" width="320" height="240" class="aligncenter size-full wp-image-128702" /></a></p>\n<p><strong>Time Complexity:</strong> If we assume that insertion in a bucket takes O(1) time then steps 1 and 2 of the above algorithm clearly take O(n) time.  The O(1) is easily possible if we use a linked list to represent a bucket (In the following code, C++ vector is used for simplicity).  Step 4 also takes O(n) time as there will be n items in all buckets.<br />\nThe main step to analyze is step 3.  This step also takes O(n) time on average if all numbers are uniformly distributed (please refer <a href="http://www.flipkart.com/introduction-algorithms-3rd/p/itmdvd93bzvrnc7b?pid=9788120340077&#038;affid=sandeepgfg" target="_blank">CLRS book</a> for more details)</p>\n<p>Following is C++ implementation of the above algorithm.</p>\n<pre class="brush: cpp; highlight: [7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29]; title: ; notranslate" title="">\r\n// C++ program to sort an array using bucket sort\r\n#include &lt;iostream&gt;\r\n#include &lt;algorithm&gt;\r\n#include &lt;vector&gt;\r\nusing namespace std;\r\n\r\n// Function to sort arr[] of size n using bucket sort\r\nvoid bucketSort(float arr[], int n)\r\n{\r\n    // 1) Create n empty buckets\r\n    vector&lt;float&gt; b[n];\r\n   \r\n    // 2) Put array elements in different buckets\r\n    for (int i=0; i&lt;n; i++)\r\n    {\r\n       int bi = n*arr[i]; // Index in bucket\r\n       b[bi].push_back(arr[i]);\r\n    }\r\n\r\n    // 3) Sort individual buckets\r\n    for (int i=0; i&lt;n; i++)\r\n       sort(b[i].begin(), b[i].end());\r\n\r\n    // 4) Concatenate all buckets into arr[]\r\n    int index = 0;\r\n    for (int i = 0; i &lt; n; i++)\r\n        for (int j = 0; j &lt; b[i].size(); j++)\r\n          arr[index++] = b[i][j];\r\n}\r\n\r\n/* Driver program to test above funtion */\r\nint main()\r\n{\r\n    float arr[] = {0.897, 0.565, 0.656, 0.1234, 0.665, 0.3434};\r\n    int n = sizeof(arr)/sizeof(arr[0]);\r\n    bucketSort(arr, n);\r\n\r\n    cout &lt;&lt; &quot;Sorted array is \\n&quot;;\r\n    for (int i=0; i&lt;n; i++)\r\n       cout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;;\r\n    return 0;\r\n}\r\n</pre>\n<p>Output:\n<pre>Sorted array is\r\n0.1234 0.3434 0.565 0.656 0.665 0.897</pre>\n<p><strong>References:</strong><br />\n<a href="http://www.flipkart.com/introduction-algorithms-3rd/p/itmczynzhyhxv2gs?pid=9788120340077&#038;affid=sandeepgfg" target="_blank">Introduction to Algorithms 3rd Edition by Clifford Stein, Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest</a><br />\n<a href="http://en.wikipedia.org/wiki/Bucket_sort" target="_blank">http://en.wikipedia.org/wiki/Bucket_sort<br />\n</a></p>\n<p><strong>Other Sorting Algorithms on GeeksforGeeks/GeeksQuiz:</strong></p>\n<ul>\n<li><a href="http://geeksquiz.com/selection-sort/" target="_blank">Selection Sort</a></li>\n<li><a href="http://geeksquiz.com/bubble-sort/" target="_blank">Bubble Sort</a></li>\n<li><a href="http://geeksquiz.com/insertion-sort/" target="_blank">Insertion Sort</a></li>\n<li><a href="http://geeksquiz.com/merge-sort/" target="_blank">Merge Sort</a></li>\n<li><a href="http://geeksquiz.com/heap-sort/" target="_blank">Heap Sort</a></li>\n<li><a href="http://geeksquiz.com/quick-sort/" target="_blank">QuickSort</a></li>\n<li><a href="http://www.geeksforgeeks.org/radix-sort/">Radix Sort</a></li>\n<li><a href="http://www.geeksforgeeks.org/counting-sort/">Counting Sort</a></li>\n<li><a href="http://geeksquiz.com/shellsort/" rel="bookmark">ShellSort</a></li>\n</ul>\n<p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/bucket-sort-2/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="128013 http://www.geeksforgeeks.org/?p=128013">9 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/sorting/" rel="category tag">Sorting</a></span> <span></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/comb-sort/" title="Comb Sort">Comb Sort</a></li><li><a href="http://www.geeksforgeeks.org/3-way-quicksort/" title="3-Way QuickSort">3-Way QuickSort</a></li><li><a href="http://www.geeksforgeeks.org/how-to-sort-a-linked-list-that-is-sorted-alternating-ascending-and-descending-orders/" title="Sort a linked list that is sorted alternating ascending and descending orders?">Sort a linked list that is sorted alternating ascending and descending orders?</a></li><li><a href="http://www.geeksforgeeks.org/how-to-sort-a-big-array-with-many-repetitions/" title="How to sort a big array with many repetitions?">How to sort a big array with many repetitions?</a></li><li><a href="http://www.geeksforgeeks.org/find-the-point-where-maximum-intervals-overlap/" title="Find the point where maximum intervals overlap">Find the point where maximum intervals overlap</a></li><li><a href="http://www.geeksforgeeks.org/find-memory-conflicts-among-multiple-threads/" title="Find memory conflicts among multiple threads">Find memory conflicts among multiple threads</a></li><li><a href="http://www.geeksforgeeks.org/sort-an-almost-sorted-array-where-only-two-elements-are-swapped/" title="Sort an almost sorted array where only two elements are swapped">Sort an almost sorted array where only two elements are swapped</a></li><li><a href="http://www.geeksforgeeks.org/how-to-efficiently-sort-a-big-list-dates-in-20s/" title="How to efficiently sort a big list dates in 20&#8217;s">How to efficiently sort a big list dates in 20&#8217;s</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/sort-n-numbers-range-0-n2-1-linear-time/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/sort-array-according-order-defined-another-array/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="128013" ptitle="Bucket Sort" id="ratePlugin"></div>\r\n<div pid="128013" ptitle="Bucket Sort" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-35244">\r\n        <div id="dsq-comment-header-35244" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35244">\r\n                <span id="dsq-author-user-35244">Nisarg</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35244" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35244" class="dsq-comment-message"><p>The main step to analyze is step 3. This step also takes O(n) time on average if all numbers are uniformly distributed? How?</p>\n<p>Insertion Sort is quadratic.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-35247">\r\n        <div id="dsq-comment-header-35247" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35247">\r\n                <span id="dsq-author-user-35247">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35247" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35247" class="dsq-comment-message"><p>The main point to note here is there are total n elements and are uniformly distributed. These elements are divided in n buckets.  To get some idea, consider the ideal situation when there is 1 element in every bucket, sum of 12 for n times is O(n).   Please refer CLRS book for complete proof.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-35353">\r\n        <div id="dsq-comment-header-35353" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35353">\r\n                <span id="dsq-author-user-35353">Suman</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35353" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35353" class="dsq-comment-message"><p>It is not clear to me why we need an insertion sort in step 3. While inserting an element in bucket if we can make sure we are inserting in right place i.e. we will keep the list sorted. This can be done in o(n). So we don&#8217;t need step 3 at all.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-4" id="dsq-comment-35356">\r\n        <div id="dsq-comment-header-35356" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35356">\r\n                <span id="dsq-author-user-35356">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35356" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35356" class="dsq-comment-message"><p>Your idea looks good.  Please note that the array elements are inserted in buckets inside a for loop.  So it doesn&#8217;t seem to be an improvement, but another way to achieve the same time complexity.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-5" id="dsq-comment-35516">\r\n        <div id="dsq-comment-header-35516" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35516">\r\n                <span id="dsq-author-user-35516">Suman</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35516" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35516" class="dsq-comment-message"><p>Insertion sort has worst case complexity O(^2) ( <a href="http://en.wikipedia.org/wiki/Insertion_sort" rel="nofollow">http://en.wikipedia.org/wiki/Insertion_sort</a> ). But the approach that I mentioned has worst case complexity O(n).</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt depth-4" id="dsq-comment-35874">\r\n        <div id="dsq-comment-header-35874" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35874">\r\nhttp://about.me/tg9963                <span id="dsq-author-user-35874">GOPI GOPINATH</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35874" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35874" class="dsq-comment-message"><p>To keep the list sorted u need to do insertion sort&#8230;<br />\nconsider u r having 0.03 and 0.05 in a bucket and a new element say 0.04 must be placed in the same bucket&#8230;.u need to check 0.03 but also 0.05 and only decide&#8230;so its nothing but insertion sort&#8230;.so worst case complexity in ur case is again O(n^2)</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-5" id="dsq-comment-36094">\r\n        <div id="dsq-comment-header-36094" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36094">\r\n                <span id="dsq-author-user-36094">Suman</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36094" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36094" class="dsq-comment-message"><p>I am not sure how it is O(n^2). Following is the pseudo code. Am I missing something.</p>\n<p>for each element e in linked list<br />\n    if ( key &gt; e.data  &amp;&amp; key &lt; e.next.data)<br />\n         insert new node between e and e.next.<br />\n    endif;<br />\nend for</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-5" id="dsq-comment-36095">\r\n        <div id="dsq-comment-header-36095" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36095">\r\nhttp://about.me/tg9963                <span id="dsq-author-user-36095">GOPI GOPINATH</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36095" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36095" class="dsq-comment-message"><p>so whats the number of comparisons u need to do to insert a number in list?? u need to check all the nodes in worst case&#8230;and in worst case if all the elements come under one bucket ? Hope u get it.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-5" id="dsq-comment-36447">\r\n        <div id="dsq-comment-header-36447" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36447">\r\n                <span id="dsq-author-user-36447">Suman</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36447" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36447" class="dsq-comment-message"><p>Does the number of comparison really matter here. If there are n elements in a bucked we will have (2*n) comparisons. Even if all the elements(say k) are in the same bucket we will have (2*k) comparisons. How is  complexity O(n^2). Correct me if I am missing something.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/bucket-sort-2/\';\r\nvar disqus_identifier = \'128013 http://www.geeksforgeeks.org/?p=128013\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Bucket Sort";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(405)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(80)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,051)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.941176470588pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.838235294118pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.661764705882pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'253 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.470588235294pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.220588235294pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 17.058823529412pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.485294117647pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.367647058824pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.352941176471pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.382352941176pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.882352941176pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.382352941176pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'61 topics\' style=\'font-size: 15.720588235294pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4117647058824pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.544117647059pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.676470588235pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.676470588235pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.705882352941pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 12.014705882353pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6470588235294pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.088235294118pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.5pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9558823529412pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.264705882353pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7205882352941pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.308 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-01 00:42:41 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p719
sb.