ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/MaximumSquare'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/MaximumSquare.java'
p11
atp12
Rp13
sS'title'
p14
VMaximum size square sub-matrix with all 1s
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
Nsg29
Vp
p41
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp42
sg37
g0
(cbs4.element
NavigableString
p43
c__builtin__
unicode
p44
VGiven a binary matrix, find out the maximum size square sub-matrix with all 1s. 
p45
tp46
Rp47
(dp48
g34
Nsg27
g39
sg28
Nsg37
Nsg31
g39
sbsS'parser_class'
p49
cbs4
BeautifulSoup
p50
sS'hidden'
p51
I00
sS'contents'
p52
(lp53
g47
asbsg49
Nsg51
I00
sg52
(lp54
g39
asbsS'raw_page'
p55
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Maximum size square sub-matrix with all 1s - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Maximum size square sub-matrix with all 1s - GeeksforGeeks" />\n<meta property="og:description" content="Given a binary matrix, find out the maximum size square sub-matrix with all 1s. For example, consider the below binary matrix. 0 1 1 0 1 1 1 0 1 0 0 1 1 1 0 1 1 1 1 0 1 1 1 1 1 0 0 0 0 0 The maximum square sub-matrix\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Dynamic Programming" />\n<meta property="article:tag" content="Matrix" />\n<meta property="article:section" content="Dynamic Programming" />\n<meta property="article:published_time" content="2010-04-04T00:24:37+00:00" />\n<meta property="article:modified_time" content="2016-02-24T11:31:15+00:00" />\n<meta property="og:updated_time" content="2016-02-24T11:31:15+00:00" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-6257 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-6257" class="post-6257 post type-post status-publish format-standard hentry category-dynamic-programming category-matrix tag-dynamic-programming tag-matrix">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Maximum size square sub-matrix with all 1s</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Given a binary matrix, find out the maximum size square sub-matrix with all 1s. </p>\n<p>For example, consider the below binary matrix. <span id="more-6257"></span>\n<pre> \r\n   0  1  1  0  1 \r\n   1  1  0  1  0 \r\n   0  1  1  1  0\r\n   1  1  1  1  0\r\n   1  1  1  1  1\r\n   0  0  0  0  0</pre>\n<p>The maximum square sub-matrix with all set bits is\n<pre>\r\n    1  1  1\r\n    1  1  1\r\n    1  1  1</pre>\n<p><a href="http://www.practice.geeksforgeeks.org/problem-page.php?pid=161" target="_blank"><br />\n<h2>We strongly recommend that you click here and practice it, before moving on to the solution.</h2>\n<p></a><br />\nAlgorithm:<br />\nLet the given binary matrix be M[R][C]. The idea of the algorithm is to construct an auxiliary size matrix S[][] in which each entry S[i][j] represents size of the square sub-matrix with all 1s including M[i][j] where M[i][j] is the rightmost and bottommost entry in sub-matrix.</p>\n<pre>\r\n1) Construct a sum matrix S[R][C] for the given M[R][C].\r\n     a)\tCopy first row and first columns as it is from M[][] to S[][]\r\n     b)\tFor other entries, use following expressions to construct S[][]\r\n         If M[i][j] is 1 then\r\n            S[i][j] = min(S[i][j-1], S[i-1][j], S[i-1][j-1]) + 1\r\n         Else /*If M[i][j] is 0*/\r\n            S[i][j] = 0\r\n2) Find the maximum entry in S[R][C]\r\n3) Using the value and coordinates of maximum entry in S[i], print \r\n   sub-matrix of M[][]</pre>\n<p>For the given M[R][C] in above example, constructed S[R][C] would be:\n<pre>\r\n   0  1  1  0  1\r\n   1  1  0  1  0\r\n   0  1  1  1  0\r\n   1  1  2  2  0\r\n   1  2  2  3  1\r\n   0  0  0  0  0</pre>\n<p>The value of maximum entry in above matrix is 3 and coordinates of the entry are (4, 3). Using the maximum value and its coordinates, we can find out the required sub-matrix.</p>\n<pre class="brush: cpp; title: ; notranslate" title="">\r\n#include&lt;stdio.h&gt;\r\n#define bool int\r\n#define R 6\r\n#define C 5\r\n\r\nvoid printMaxSubSquare(bool M[R][C])\r\n{\r\n  int i,j;\r\n  int S[R][C];\r\n  int max_of_s, max_i, max_j; \r\n \r\n  /* Set first column of S[][]*/\r\n  for(i = 0; i &lt; R; i++)\r\n     S[i][0] = M[i][0];\r\n \r\n  /* Set first row of S[][]*/     \r\n  for(j = 0; j &lt; C; j++)\r\n     S[0][j] = M[0][j];\r\n     \r\n  /* Construct other entries of S[][]*/\r\n  for(i = 1; i &lt; R; i++)\r\n  {\r\n    for(j = 1; j &lt; C; j++)\r\n    {\r\n      if(M[i][j] == 1) \r\n        S[i][j] = min(S[i][j-1], S[i-1][j], S[i-1][j-1]) + 1;\r\n      else\r\n        S[i][j] = 0;\r\n    }    \r\n  } \r\n  \r\n  /* Find the maximum entry, and indexes of maximum entry \r\n     in S[][] */\r\n  max_of_s = S[0][0]; max_i = 0; max_j = 0;\r\n  for(i = 0; i &lt; R; i++)\r\n  {\r\n    for(j = 0; j &lt; C; j++)\r\n    {\r\n      if(max_of_s &lt; S[i][j])\r\n      {\r\n         max_of_s = S[i][j];\r\n         max_i = i; \r\n         max_j = j;\r\n      }        \r\n    }                 \r\n  }     \r\n  \r\n  printf(&quot;\\n Maximum size sub-matrix is: \\n&quot;);\r\n  for(i = max_i; i &gt; max_i - max_of_s; i--)\r\n  {\r\n    for(j = max_j; j &gt; max_j - max_of_s; j--)\r\n    {\r\n      printf(&quot;%d &quot;, M[i][j]);\r\n    }  \r\n    printf(&quot;\\n&quot;);\r\n  }  \r\n}     \r\n\r\n/* UTILITY FUNCTIONS */\r\n/* Function to get minimum of three values */\r\nint min(int a, int b, int c)\r\n{\r\n  int m = a;\r\n  if (m &gt; b) \r\n    m = b;\r\n  if (m &gt; c) \r\n    m = c;\r\n  return m;\r\n}\r\n\r\n/* Driver function to test above functions */\r\nint main()\r\n{\r\n  bool M[R][C] =  {{0, 1, 1, 0, 1}, \r\n                   {1, 1, 0, 1, 0}, \r\n                   {0, 1, 1, 1, 0},\r\n                   {1, 1, 1, 1, 0},\r\n                   {1, 1, 1, 1, 1},\r\n                   {0, 0, 0, 0, 0}};\r\n               \r\n  printMaxSubSquare(M);\r\n  getchar();  \r\n}  \r\n</pre>\n<p>Time Complexity:  O(m*n) where m is number of rows and n is number of columns in the given matrix.<br />\nAuxiliary Space: O(m*n) where m is number of rows and n is number of columns in the given matrix.<br />\nAlgorithmic Paradigm: Dynamic Programming</p>\n<p>Please write comments if you find any bug in above code/algorithm, or find other ways to solve the same problem</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="6257 http://geeksforgeeks.org/?p=6257">65 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/dynamic-programming/" rel="category tag">Dynamic Programming</a> <a href="http://www.geeksforgeeks.org/category/matrix/" rel="category tag">Matrix</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/dynamic-programming/" rel="tag">Dynamic Programming</a>, <a href="http://www.geeksforgeeks.org/tag/matrix/" rel="tag">Matrix</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/count-number-of-subsets-having-a-particular-xor-value/" title="Count number of subsets having a particular XOR value">Count number of subsets having a particular XOR value</a></li><li><a href="http://www.geeksforgeeks.org/permutation-coefficient/" title="Permutation Coefficient">Permutation Coefficient</a></li><li><a href="http://www.geeksforgeeks.org/longest-zig-zag-subsequence/" title="Longest Zig-Zag Subsequence">Longest Zig-Zag Subsequence</a></li><li><a href="http://www.geeksforgeeks.org/compute-ncr-p-set-1-introduction-and-dynamic-programming-solution/" title="Compute nCr % p  | Set 1 (Introduction and Dynamic Programming Solution)">Compute nCr % p  | Set 1 (Introduction and Dynamic Programming Solution)</a></li><li><a href="http://www.geeksforgeeks.org/partition-a-set-into-two-subsets-such-that-the-difference-of-subset-sums-is-minimum/" title="Partition a set into two subsets such that the difference of subset sums is minimum">Partition a set into two subsets such that the difference of subset sums is minimum</a></li><li><a href="http://www.geeksforgeeks.org/count-number-of-paths-with-k-turns/" title="Count number of paths with at-most k turns">Count number of paths with at-most k turns</a></li><li><a href="http://www.geeksforgeeks.org/count-number-of-ways-to-partition-a-set-into-k-subsets/" title="Count number of ways to partition a set into k subsets">Count number of ways to partition a set into k subsets</a></li><li><a href="http://www.geeksforgeeks.org/bell-numbers-number-of-ways-to-partition-a-set/" title="Bell Numbers (Number of ways to Partition a Set)">Bell Numbers (Number of ways to Partition a Set)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/ugly-numbers/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/turn-an-image-by-90-degree/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="6257" ptitle="Maximum size square sub-matrix with all 1s" id="ratePlugin"></div>\r\n<div pid="6257" ptitle="Maximum size square sub-matrix with all 1s" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-35931">\r\n        <div id="dsq-comment-header-35931" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35931">\r\n                <span id="dsq-author-user-35931">wrestler</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35931" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35931" class="dsq-comment-message"><p>Index of max is not needed, simply print the square with all 1 of size max.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-35787">\r\n        <div id="dsq-comment-header-35787" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35787">\r\n                <span id="dsq-author-user-35787">Meenal Mishra</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35787" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35787" class="dsq-comment-message"><p>Guys check this should be helpful<br />\n<a href="http://www.queryhome.com/26246/maximum-size-square-sub-matrix-with-all-1-s-recusively" rel="nofollow">http://www.queryhome.com/26246/maximum-size-square-sub-matrix-with-all-1-s-recusively</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-35783">\r\n        <div id="dsq-comment-header-35783" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35783">\r\nhttp://www.queryhome.com/                <span id="dsq-author-user-35783">Bottom Boy</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35783" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35783" class="dsq-comment-message"><p>typedef struct mat<br />\n{<br />\n    int n, r, c;<br />\n}matParm;</p>\n<p>matParm sub_mat;    // Global Variable<br />\n/* Call from main function */</p>\n<p>    if( row &gt; col)<br />\n        for (i = 0; i  row)<br />\n        for (i = 0; i &lt;  col &#8211; row ; i++)<br />\n            find_sqr_mat (matrix, 0, i, row);<br />\n    else<br />\n        find_sqr_mat (matrix, 0, 0, col);<br />\n/* Print the out put matrix */</p>\n<p>printf(&quot;n Largest Sub Square Matrixn&quot;);<br />\nprintf(&quot;Row = %d  Col = %d  N = %dn&quot;,sub_mat.r, sub_mat.c, sub_mat.n);<br />\nfor (i = sub_mat.r; i &lt; sub_mat.r + sub_mat.n; i++)<br />\n{<br />\n    printf(&quot;nn&quot;);<br />\n    for (j = sub_mat.c; j n = N;<br />\n        tempparm-&gt;r = row;<br />\n        tempparm-&gt;c = col;<br />\n    }<br />\n    else<br />\n    {<br />\n        tempparm-&gt;n = 0;<br />\n        tempparm-&gt;r = 0;<br />\n        tempparm-&gt;c = 0;<br />\n    }<br />\n  }<br />\n  else<br />\n  {<br />\n    tempparm1 = find_sqr_mat(M, row, col, N-1);<br />\n    tempparm2 = find_sqr_mat(M, row+1, col, N-1);<br />\n    tempparm3 = find_sqr_mat(M, row, col+1, N-1);<br />\n    tempparm4 = find_sqr_mat(M, row+1, col+1, N-1);<br />\n    if((tempparm1 &amp;&amp; tempparm2 &amp;&amp; tempparm3 &amp;&amp; tempparm4) &amp;&amp;<br />\n       (tempparm1-&gt;n == tempparm2-&gt;n) &amp;&amp;<br />\n       (tempparm2-&gt;n == tempparm3-&gt;n) &amp;&amp;<br />\n       (tempparm3-&gt;n == tempparm4-&gt;n) &amp;&amp;<br />\n       (tempparm4-&gt;n == N-1))<br />\n    {<br />\n        tempparm-&gt;n = N;<br />\n        tempparm-&gt;r = row;<br />\n        tempparm-&gt;c = col;</p>\n<p>        if (sub_mat.n &lt; N)<br />\n        {<br />\n            sub_mat.n = N;<br />\n            sub_mat.r = row;<br />\n            sub_mat.c = col;<br />\n        }<br />\n        free(tempparm1);<br />\n        free(tempparm2);<br />\n        free(tempparm3);<br />\n        free(tempparm4);</p>\n<p>        return tempparm;<br />\n    }<br />\n    else<br />\n    {<br />\n        return NULL;<br />\n    }<br />\n    free(tempparm1);<br />\n    free(tempparm2);<br />\n    free(tempparm3);<br />\n    free(tempparm4);<br />\n  }<br />\n  return tempparm;<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-32751">\r\n        <div id="dsq-comment-header-32751" class="dsq-comment-header">\r\n            <cite id="dsq-cite-32751">\r\n                <span id="dsq-author-user-32751">prashant jha</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-32751" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-32751" class="dsq-comment-message"><p>my c++ code using dp in o(mn) compleity<br />\n<a href="http://ideone.com/anhb8j" rel="nofollow">http://ideone.com/anhb8j</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-31646">\r\n        <div id="dsq-comment-header-31646" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31646">\r\n                <span id="dsq-author-user-31646">Nikhil Kumar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31646" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31646" class="dsq-comment-message"><p>can any one explain the logic of above algorithm ?<br />\nwhy we take min of three values and add 1 if M[i][j]  == 1 ?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-31645">\r\n        <div id="dsq-comment-header-31645" class="dsq-comment-header">\r\n            <cite id="dsq-cite-31645">\r\n                <span id="dsq-author-user-31645">Nikhil Kumar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-31645" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-31645" class="dsq-comment-message"><p>can any one explain the logic of above algorithm ?<br />\nwhy we take min of three values and add 1 if M[i][j]  == 1 ?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-29923">\r\n        <div id="dsq-comment-header-29923" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29923">\r\n                <span id="dsq-author-user-29923">Sachin</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29923" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29923" class="dsq-comment-message"><p>I think we can reduce the space complexity to m x 2(m-no. of rows); since the value only depends on 3 cells, and can store the maximum value in a separate variable, to keep the track of biggest square sub matrix. This will drastically reduce the space complexity to O(2*m) ~ O(m)</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-29089">\r\n        <div id="dsq-comment-header-29089" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29089">\r\n                <span id="dsq-author-user-29089">Neha Garg</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29089" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29089" class="dsq-comment-message"><p>complexity can be reduced keep the track of maxofs in the first step .. then no need to again track the s matrix for finding it and also no need to max_i and max_j as all elements are 1 and we dont want position of that matrix .. the maxofs will give dimension of required matrix as this is a square matrix<br />\nplz correct me if i m wrong&#8230;</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-28026">\r\n        <div id="dsq-comment-header-28026" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28026">\r\n                <span id="dsq-author-user-28026">draganwarrior</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28026" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28026" class="dsq-comment-message"><p>solution  for  rectangle  <a href="http://ideone.com/DbafRI" rel="nofollow">http://ideone.com/DbafRI</a></p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-28347">\r\n        <div id="dsq-comment-header-28347" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28347">\r\n                <span id="dsq-author-user-28347">vishal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28347" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28347" class="dsq-comment-message"><p>your soln doesnt work for the given input:<br />\n                         {{1,1,1,1,0,0,1,0,1,1},<br />\n                         {1,0,1,0,1,1,0,1,0,1},<br />\n                         {1,1,1,1,1,1,0,0,0,0},<br />\n                         {0,1,1,1,1,1,1,1,1,0},<br />\n                         {1,1,1,1,0,1,0,1,0,1}}<br />\noutput will be<br />\n1 1 1 1 1<br />\n1 1 1 1 1<br />\nbut your output is {{1},{1}}</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-28383">\r\n        <div id="dsq-comment-header-28383" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28383">\r\n                <span id="dsq-author-user-28383">Saurabh Gupta</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28383" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28383" class="dsq-comment-message"><p>Buddy , Q. is asking for square matrix and your ex. output is not square matrix.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-3" id="dsq-comment-28542">\r\n        <div id="dsq-comment-header-28542" class="dsq-comment-header">\r\n            <cite id="dsq-cite-28542">\r\n                <span id="dsq-author-user-28542">draganwarrior</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-28542" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-28542" class="dsq-comment-message"><p>YEP  u  right</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even depth-3" id="dsq-comment-29553">\r\n        <div id="dsq-comment-header-29553" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29553">\r\n                <span id="dsq-author-user-29553">M.Sheykhov</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29553" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29553" class="dsq-comment-message"><p>it is designed for square matrix</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-27451">\r\n        <div id="dsq-comment-header-27451" class="dsq-comment-header">\r\n            <cite id="dsq-cite-27451">\r\n                <span id="dsq-author-user-27451">Guest</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-27451" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-27451" class="dsq-comment-message"><p>#include</p>\n<p>using namespace std;</p>\n<p>int Matrix[5][5]= {{0,0,0,0,0},</p>\n<p>                   {0,1,0,0,0},</p>\n<p>                   {0,1,1,0,0},</p>\n<p>                   {0,0,1,1,0},</p>\n<p>                   {0,0,1,1,0}};</p>\n<p>int IsMatrix(int i,int j,int n)</p>\n<p>{   int x = i, y = j;</p>\n<p>    while(x &lt; (i + n))</p>\n<p>    {   y = j;</p>\n<p>        while(y &lt; (j + n))</p>\n<p>        {</p>\n<p>            if (Matrix[x][y] != 1)</p>\n<p>            {</p>\n<p>                return 0;</p>\n<p>            }</p>\n<p>         y++;</p>\n<p>        }</p>\n<p>        x++;</p>\n<p>    }</p>\n<p>    return 1;</p>\n<p>}</p>\n<p>int main()</p>\n<p>{</p>\n<p>    int n = 5,i,j;</p>\n<p>    int sizeOfSubMatrix = 0,xoffset,yoffset;</p>\n<p>    int sizecounter = 0;</p>\n<p>   for(i = 0; i &lt; n; i++ )</p>\n<p>     for(j= 0; j  sizeOfSubMatrix)</p>\n<p>                {</p>\n<p>                    if(IsMatrix(xoffset,yoffset,sizecounter))</p>\n<p>                      {</p>\n<p>                         sizeOfSubMatrix = sizecounter;</p>\n<p>                      }</p>\n<p>                     else</p>\n<p>                      {</p>\n<p>                          sizecounter = 0;</p>\n<p>                      }</p>\n<p>                }</p>\n<p>              }</p>\n<p>             else</p>\n<p>             {</p>\n<p>                sizecounter = 0;</p>\n<p>             }</p>\n<p>        }</p>\n<p>cout&lt;&lt;&quot;Max size of the possible sub matrix : &quot;&lt;&lt;sizeOfSubMatrix;</p>\n<p>}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-26939">\r\n        <div id="dsq-comment-header-26939" class="dsq-comment-header">\r\n            <cite id="dsq-cite-26939">\r\n                <span id="dsq-author-user-26939">Nguy?n Ho\xc3\xa0i B?o</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-26939" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-26939" class="dsq-comment-message"><p>it wrong in sample test:<br />\n0 1 0 0<br />\n0 0 0 0<br />\n0 0 0 0<br />\n0 0 0 0<br />\nanswer must be 1 but it return 0.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-26951">\r\n        <div id="dsq-comment-header-26951" class="dsq-comment-header">\r\n            <cite id="dsq-cite-26951">\r\n                <span id="dsq-author-user-26951">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-26951" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-26951" class="dsq-comment-message"><p>It prints 1.  See <a href="http://ideone.com/EQwwB5" rel="nofollow">http://ideone.com/EQwwB5</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-jaskaran1 even thread-odd thread-alt depth-1" id="dsq-comment-21792">\r\n        <div id="dsq-comment-header-21792" class="dsq-comment-header">\r\n            <cite id="dsq-cite-21792">\r\n                <span id="dsq-author-user-21792">jaskaran1</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-21792" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-21792" class="dsq-comment-message"><p>I think there seems to be some inconsistency.<br />\nIf suppose the matrix M[][] is<br />\n1 1 0<br />\n1 1 0<br />\n0 0 0</p>\n<p>then S[][] according to the logic is<br />\n1 1 0<br />\n1 2 0<br />\n0 0 0</p>\n<p>So according to the logic S[2][2] is the size of the largest square submatrix of 1s which is present in this matrix M which here is 0.But we know that the largest square submatrix in M is of size 2.So shouldn&#8217;t S in this case be</p>\n<p>1 1 1<br />\n1 2 2<br />\n2 2 2</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-2" id="dsq-comment-21804">\r\n        <div id="dsq-comment-header-21804" class="dsq-comment-header">\r\n            <cite id="dsq-cite-21804">\r\n                <span id="dsq-author-user-21804">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-21804" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-21804" class="dsq-comment-message"><p>Please note that we copy first row and first column as it is, then fill rest of the entries in S[][].</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-jaskaran1 even depth-3" id="dsq-comment-21809">\r\n        <div id="dsq-comment-header-21809" class="dsq-comment-header">\r\n            <cite id="dsq-cite-21809">\r\n                <span id="dsq-author-user-21809">jaskaran1</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-21809" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-21809" class="dsq-comment-message"><p>I do understand the point.But then the matrix S is<br />\n1 1 0<br />\n1 2 0<br />\n0 0 0</p>\n<p>which is incorrect as S[i][j] represents the dimension of the largest square submatrix of 1s<br />\nin the matrix (i+1)x(j+1).So S[2][2] is 0 which means that the size of the largest square submatrix of 1s in 3&#215;3 matrix is 0 which is wrong and the correct answer is 2.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-geeksforgeeks bypostauthor odd alt depth-4" id="dsq-comment-21845">\r\n        <div id="dsq-comment-header-21845" class="dsq-comment-header">\r\n            <cite id="dsq-cite-21845">\r\n                <span id="dsq-author-user-21845">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-21845" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-21845" class="dsq-comment-message"><p>Please take a closer look at the implementation and explanation, especially the following statement.</p>\n<p><em>S[i][j] represents size of the square sub-matrix with all 1s including M[i][j] where M[i][j] is the rightmost and bottommost entry in sub-matrix.</em></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-19393">\r\n        <div id="dsq-comment-header-19393" class="dsq-comment-header">\r\n            <cite id="dsq-cite-19393">\r\n                <span id="dsq-author-user-19393">mohammad faizan ali</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-19393" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-19393" class="dsq-comment-message"><pre> <code language="C">\nHey every one since i found the above implementation little lengthy i\'m posting this one:\n\n\n#include&lt;stdio.h&gt;\nint count=0;\nvoid modify(int * arr,int x,int y);\nint min(int,int,int);\nint main()\n{\n\t\n\tint x,i,y,j;\n//      asking for no. of rows and columns\n\tprintf(&quot;Enter the  number of rows and columns\\n&quot;);\n\tscanf(&quot;%d %d &quot;,&amp;x,&amp;y);\n\n\tint array[x][y];\n//      taking input\n\n\tfor(i=0;i&lt;x;i++)\n\t{\n\t\tfor(j=0;j&lt;y;j++)\n\t\tscanf(&quot;\\n%d&quot;,&amp;array[i][j]);\n\t}\n//      calling the function to perform desired action\n//      first argument is the integer address of first element //      of 2-D array\n\n\tmodify(array[0],x,y);\n//      printing the modified array\n\tfor(i=0;i&lt;x;i++)\n\t{\n\t\tfor(j=0;j&lt;y;j++)\n\t\tprintf(&quot; %d&quot;,array[i][j]);\n\t\tprintf(&quot;\\n&quot;);\n\t}\n\tscanf(&quot;\\n%d&quot;,&amp;x);\n\treturn 0;\n}\nvoid modify(int * arr, int x,int y)\n{\n\tint i,j;\n\tfor(i=0;i&lt;x;i++)\n\t{\n\t\tfor(j=0;j&lt;y;j++)\n\t\t{\n//             below *(arr+(i)*y+j) is same as array[i][j] in //             main program. comparing it to  top,left and \n//             top left  adjacent element\n\n\t\t\tif(*(arr+(i)*y+j)==1  &amp;&amp; j&gt;0 &amp;&amp; i&gt;0)\n\t\t\t*(arr+(i)*y+j)=min(*(arr+(i-1)*y+j-1),*(arr+(i-1)*y+j),*(arr+(i)*y+j-1))+1;\n\t\t}\n\t}\n\t\n\t\n\n}\n// function to find minimum of three integers\nint min(int a,int b,int c)\n{\n\treturn(a&gt;b?(b&gt;c?c:b):(a&gt;c?c:a));\n}\n//sample run input array\n/* 0  1  1  0  1 \n   1  1  0  1  0 \n   0  1  1  1  0\n   1  1  1  1  0\n   1  1  1  1  1\n   0  0  0  0  0*/\n\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-22544">\r\n        <div id="dsq-comment-header-22544" class="dsq-comment-header">\r\n            <cite id="dsq-cite-22544">\r\n                <span id="dsq-author-user-22544">Srikanth</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-22544" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-22544" class="dsq-comment-message"><p>You are trying to modify the given matrix &#8230;here right </p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-19392">\r\n        <div id="dsq-comment-header-19392" class="dsq-comment-header">\r\n            <cite id="dsq-cite-19392">\r\n                <span id="dsq-author-user-19392">mohammad faizan ali</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-19392" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-19392" class="dsq-comment-message"><p>Hey every one since i found the above implementation little lengthy im posting this one:</p>\n<p>#include<br />\nint count=0;<br />\nvoid modify(int * arr,int x,int y);<br />\nint min(int,int,int);<br />\nint main()<br />\n{</p>\n<p>\tint x,i,y,j;<br />\n//      asking for no. of rows and columns<br />\n\tprintf(&#8220;Enter the  number of rows and columns\\n&#8221;);<br />\n\tscanf(&#8220;%d %d &#8220;,&amp;x,&amp;y);</p>\n<p>\tint array[x][y];<br />\n//      taking input</p>\n<p>\tfor(i=0;i&lt;x;i++)<br />\n\t{<br />\n\t\tfor(j=0;j&lt;y;j++)<br />\n\t\tscanf(&quot;\\n%d&quot;,&amp;array[i][j]);<br />\n\t}<br />\n//      calling the function to perform desired action<br />\n//      first argument is the integer address of first element //      of 2-D array</p>\n<p>\tmodify(array[0],x,y);<br />\n//      printing the modified array<br />\n\tfor(i=0;i&lt;x;i++)<br />\n\t{<br />\n\t\tfor(j=0;j&lt;y;j++)<br />\n\t\tprintf(&quot; %d&quot;,array[i][j]);<br />\n\t\tprintf(&quot;\\n&quot;);<br />\n\t}<br />\n\tscanf(&quot;\\n%d&quot;,&amp;x);<br />\n\treturn 0;<br />\n}<br />\nvoid modify(int * arr, int x,int y)<br />\n{<br />\n\tint i,j;<br />\n\tfor(i=0;i&lt;x;i++)<br />\n\t{<br />\n\t\tfor(j=0;j0 &amp;&amp; i&gt;0)<br />\n\t\t\t*(arr+(i)*y+j)=min(*(arr+(i-1)*y+j-1),*(arr+(i-1)*y+j),*(arr+(i)*y+j-1))+1;<br />\n\t\t}<br />\n\t}</p>\n<p>}<br />\n// function to find minimum of three integers<br />\nint min(int a,int b,int c)<br />\n{<br />\n\treturn(a&gt;b?(b&gt;c?c:b):(a&gt;c?c:a));<br />\n}<br />\n//sample run input array<br />\n/* 0  1  1  0  1<br />\n   1  1  0  1  0<br />\n   0  1  1  1  0<br />\n   1  1  1  1  0<br />\n   1  1  1  1  1<br />\n   0  0  0  0  0*/</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment byuser comment-author-_maverick odd alt thread-even depth-1" id="dsq-comment-15563">\r\n        <div id="dsq-comment-header-15563" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15563">\r\n                <span id="dsq-author-user-15563">_maverick</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15563" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15563" class="dsq-comment-message"><p>can anyone help me for finding the maximum cluster of 1&#8217;s in the given matrix</p>\n<p>-> It can be top,bottom,left,right movement from any cell</p>\n<p>eg:</p>\n<p>110001000111<br />\n111101011110<br />\n000110001101<br />\n000000000011</p>\n<p>in this situation 9  </p>\n<p>if possible including diagonal movement also !</p>\n<p>give me an idea or code anyone pls&#8230;&#8230;.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-29272">\r\n        <div id="dsq-comment-header-29272" class="dsq-comment-header">\r\n            <cite id="dsq-cite-29272">\r\n                <span id="dsq-author-user-29272">someone</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-29272" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-29272" class="dsq-comment-message"><p>you can do a bfs to get your answer</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-15340">\r\n        <div id="dsq-comment-header-15340" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15340">\r\n                <span id="dsq-author-user-15340">pefullarton</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15340" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15340" class="dsq-comment-message"><p>This approach is not correct. It would always give a square matrix only, even if a greater sized rectangle matrix is possible. E.g.<br />\nIn<br />\n   0  1  1  0  1<br />\n   1  1  0  1  0<br />\n   1  1  1  1  0<br />\n   1  1  1  1  0<br />\n   1  1  1  1  1<br />\n   0  0  0  0  0<br />\nResult would be</p>\n<p>      1  1  1<br />\n      1  1  1<br />\n      1  1  1<br />\ninstead of </p>\n<p>   1  1  1  1<br />\n   1  1  1  1<br />\n   1  1  1  1</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-15341">\r\n        <div id="dsq-comment-header-15341" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15341">\r\n                <span id="dsq-author-user-15341">pefullarton</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15341" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15341" class="dsq-comment-message"><p>Oh didn&#8217;t see if it the question was about sub-matrix only \xf0\x9f\x98\x90</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-coderace odd alt thread-even depth-1" id="dsq-comment-15135">\r\n        <div id="dsq-comment-header-15135" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15135">\r\n                <span id="dsq-author-user-15135">coderAce</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15135" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15135" class="dsq-comment-message"><p>Please just don&#8217;t give the algorithm plainly. Atleast provide some explanations as to how this algorithm was formulated. The way it is presented here, it looks as if you want the readers to memorise the strategy!</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-14289">\r\n        <div id="dsq-comment-header-14289" class="dsq-comment-header">\r\n            <cite id="dsq-cite-14289">\r\nhttp://www.prakhar.me                <span id="dsq-author-user-14289">prakhar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-14289" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-14289" class="dsq-comment-message"><p>Python code</p>\n<p>def find_sub_matrix_size(matrix):<br />\n    copy_matrix = deepcopy(matrix)<br />\n    for i in range(1, len(matrix)):<br />\n        for j in range(1, len(matrix[0])):<br />\n            if matrix[i][j] == 1:<br />\n                copy_matrix[i][j] = min(copy_matrix[i-1][j],<br />\n                                    copy_matrix[i][j-1],<br />\n                                    copy_matrix[i-1][j-1]) + 1<br />\n            else:<br />\n                copy_matrix[i][j] = 0<br />\n    return max([item for rows in copy_matrix for item in rows])</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-13912">\r\n        <div id="dsq-comment-header-13912" class="dsq-comment-header">\r\n            <cite id="dsq-cite-13912">\r\n                <span id="dsq-author-user-13912">mn</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-13912" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-13912" class="dsq-comment-message"><p>6 6<br />\n8 -3 4 -1 5 18<br />\n2 3 4 -3 0 7<br />\n6 -2 3 1 1 3<br />\n3 0 2 -1 3 1<br />\n2 2 2 2 2 2<br />\n1 3 1 -1 3 1</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-13515">\r\n        <div id="dsq-comment-header-13515" class="dsq-comment-header">\r\n            <cite id="dsq-cite-13515">\r\n                <span id="dsq-author-user-13515">Pandiyaraj</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-13515" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-13515" class="dsq-comment-message"><pre> <code language="C">\n#include &lt;iostream&gt;\n#define R 6\n#define C 5\n\nusing namespace std;\n\nint find_sub_sq_matrix_size(int a[R][C])\n{\n    int sum, total_sum=0;\n    int *aux = (int *)malloc(R* sizeof(int));\n    \n    for( int i=0; i&lt;R; i++){\n        sum = 0;\n        for(int j=0; j&lt;C; j++){\n            sum += a[i][j];\n        }\n        aux[i] = sum;\n        total_sum += sum;\n    }\n    int mean = total_sum / R;\n    int count=0;\n\n    while( count &lt;= mean)\n    {\n        for(int i=0; i&lt;R; i++)\n        {\n            if(aux[i] &gt;= mean)\n                count ++;\n        }\n        if( count &lt; mean )\n        {\n            mean--;\n            count=0;\n        }\n    }\n    return mean;\n}\n\nint main()\n{\n    int a[R][C] =  {{0, 1, 1, 0, 1}, \n                   {1, 1, 0, 1, 0}, \n                   {0, 1, 1, 1, 0},\n                   {1, 1, 1, 1, 0},\n                   {1, 1, 1, 1, 1},\n                   {0, 0, 0, 0, 0}};\n\n    cout&lt;&lt;&quot;The sub matrix size is &quot;&lt;&lt;find_sub_sq_matrix_size(a)&lt;&lt;&quot;\\n&quot;;\n    return 0;\n}\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-11985">\r\n        <div id="dsq-comment-header-11985" class="dsq-comment-header">\r\n            <cite id="dsq-cite-11985">\r\n                <span id="dsq-author-user-11985">Palash</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-11985" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-11985" class="dsq-comment-message"><p>This could be done using max area histogram approach too. Just need to keep track of some small details.</p>\n<p>I say this because, max area histogram is generally used if the question is to find the biggest &#8220;rectangle&#8221; of 1&#8217;s. In this question, we need to find a square, so it&#8217;s better if you learn one approach that could do both.</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-11984">\r\n        <div id="dsq-comment-header-11984" class="dsq-comment-header">\r\n            <cite id="dsq-cite-11984">\r\n                <span id="dsq-author-user-11984">Palash</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-11984" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-11984" class="dsq-comment-message"><p>This could be done using max area histogram approach too. Just need to keep track of some small details.</p>\n<p>I say this because, max area histogram is generally used if the question is to find the biggest &#8220;rectangle&#8221; of 1&#8217;s. In this question, we need to find a square, so it&#8217;s better if you learn one approach to do both.</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-10638">\r\n        <div id="dsq-comment-header-10638" class="dsq-comment-header">\r\n            <cite id="dsq-cite-10638">\r\n                <span id="dsq-author-user-10638">Sourabh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-10638" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-10638" class="dsq-comment-message"><p>Hi, I saw a few questions around why S[i-1][j-1] is considered.<br />\nAccording to my understanding of this, i am posting it here.<br />\nSuppose, we have a solution like this : &#8211;</p>\n<p>0 1 1 1<br />\n0 1 1 1<br />\n1 1 1 1</p>\n<p>And suppose we are considering the case for the bottom-right 1.<br />\nHere, the maximum square is of 2*2 size with bottom-right at (2,2)(rows, column index with 0).<br />\nTo find the maximum square, we need to find the minimum extension of 1s in different directions and add 1 to it to form the length of square ending at present case.<br />\nSo, here are the cases :-<br />\n1 i-1,j &#8212;-&gt; This sees till what length i can extend upwards from bottom right corner vertically.<br />\n2.i, j-1&#8212;&gt; To check till what length we can extend leftwards from bottom left corner.</p>\n<p>If we just take minimum of these, it takes care of left and top direction.However, we also need to make sure that there are 1&#8217;s in top left corner of perspective square.<br />\nS[i-1][j-1], by definition, contains a max square at position i-1, j-1, whose top left corner (here,(0,1)), puts an upper limit on how up and left we can get. So, we need to consider that as well.<br />\nI will make this clear with help of pic if required.</p>\n<pre> <code language="C">\n/* Paste your code here (You may delete these lines if not writing code) */\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-10615">\r\n        <div id="dsq-comment-header-10615" class="dsq-comment-header">\r\n            <cite id="dsq-cite-10615">\r\n                <span id="dsq-author-user-10615">SR</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-10615" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-10615" class="dsq-comment-message"><p>Not sure if S[i-1][j-1] is needed in this formulae:</p>\n<pre> <code language="C">\nS[i][j] = min(S[i][j-1], S[i-1][j], S[i-1][j-1]) + 1\n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-8768">\r\n        <div id="dsq-comment-header-8768" class="dsq-comment-header">\r\n            <cite id="dsq-cite-8768">\r\n                <span id="dsq-author-user-8768">blurjp</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-8768" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-8768" class="dsq-comment-message"><p>I don&#8217;t think this works for the sub-matrix is single row or col, you cannot get the max sub matrix with the following loop</p>\n<p>like this:<br />\n0 1 0 1 0 1 0 1<br />\n0 1 1 1 0 0 1 0</p>\n<p>then you get the index of max entry is (1, 1) which is wrong.</p>\n<pre> <code language="C">\n/* Find the maximum entry, and indexes of maximum entry\n     in S[][] */\n  max_of_s = S[0][0]; max_i = 0; max_j = 0;\n  for(i = 0; i &lt; R; i++)\n  {\n    for(j = 0; j &lt; C; j++)\n    {\n      if(max_of_s &lt; S[i][j])\n      {\n         max_of_s = S[i][j];\n         max_i = i;\n         max_j = j;\n      }\n    }\n  }     \n</code> </pre>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-null_pointer even depth-2" id="dsq-comment-15717">\r\n        <div id="dsq-comment-header-15717" class="dsq-comment-header">\r\n            <cite id="dsq-cite-15717">\r\n                <span id="dsq-author-user-15717">null_pointer</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-15717" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-15717" class="dsq-comment-message"><p>please read the question carefully,it says &#8220;SQUARE SUB MATRIX&#8221;,you are talking about rectangle :/</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-gksgeek odd alt thread-odd thread-alt depth-1" id="dsq-comment-5584">\r\n        <div id="dsq-comment-header-5584" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5584">\r\n                <span id="dsq-author-user-5584">gksgeek</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5584" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5584" class="dsq-comment-message"><p>@GeeksforGeeks: Can we modify this to find largest sum square matrix in general?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-10422">\r\n        <div id="dsq-comment-header-10422" class="dsq-comment-header">\r\n            <cite id="dsq-cite-10422">\r\n                <span id="dsq-author-user-10422">Shaikh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-10422" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-10422" class="dsq-comment-message"><p>Its sad that in spite of many people asking the rationale behind taking<br />\nS[i][j] = min(S[i-1][j], S[i][j-1], S[i-1][j-1]) + 1</p>\n<p>nobody has come forward to reason it out. One can understand that its Dynamic Programming, and its easy work through a solution but its quite difficult to figure it out why this step has been taken, keeping in mind what?</p>\n<p>I would really appreciate if someone(and @GeeksforGeeks) can come forward and let us know the reason behind it.</p>\n<p>Thanks.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-34445">\r\n        <div id="dsq-comment-header-34445" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34445">\r\n                <span id="dsq-author-user-34445">Max</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34445" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34445" class="dsq-comment-message"><p>Original:</p>\n<p>1111<br />\n1110<br />\n1110<br />\n0111</p>\n<p>Sum:</p>\n<p>1110<br />\n1220<br />\n2230<br />\n0121</p>\n<p>Explanation:</p>\n<p>I am indexing from 0 for the sake of this explanation, with the left as the x-axis zero and the top as the y-axis zero. </p>\n<p>Consider Sum[1][1]. We know that this space itself must be a sub-square of at least size one if Original[1][1] has a 1 there. Likewise, in Original[0][0], Original[0][1], and Original[1][0], we also know there to exist sub-squares of at least size one. When considering Sum[1][1], we are trying to determine the largest sub-square which exists there. We know that its neighbor upward, its neighbor to the left, and its up-left neighbor each contain a sub-square of size one. Since there is also a sub-square of size one at Sum[1][1], we know that there is a sub-square of size four across those four spaces.</p>\n<p>The same logic applies to [2][2]. We know there is a sub-square of size 2 above it ([1][0], [2][0], [1][1], [2][1]), to the left ([0][1], [0][2], [1][1], [1][2]), and to the upper-left ([0][0], [0][1], [1][0], [1][1]), as well as a sub-square of size one at [2][2], meaning that the largest sub-square to the upper-left starting at [2][2] is of size 3.</p>\n<p>For the space [3][2], it is clear why we use min. We see that [3][2] is occupied by a 1. The space above it shows us there is a sub-square of size 3. However, Sum[3][2] only contains the value 2. This is because the value to the left of Sum[3][2] indicates a sub-square of size 1. Given this information, we know that the maximum sub-square located at [3][2] is size 2, since one of its neighbors is only of size 1 which would prohibit a square larger than 2.</p>\n<p>I do hope this makes sense. We only need to expand the square one row/column at a time, so proving the existence of sub-squares within the region already traveled allows us to do the smallest amount of work while obtaining a correct answer.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-5299">\r\n        <div id="dsq-comment-header-5299" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5299">\r\n                <span id="dsq-author-user-5299">eclassi</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5299" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5299" class="dsq-comment-message"><p>Thanks for the algorithm.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-5072">\r\n        <div id="dsq-comment-header-5072" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5072">\r\n                <span id="dsq-author-user-5072">Sunil</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5072" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5072" class="dsq-comment-message"><p>Nice logic to determine <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /> credit goes to the person who found out the logic.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-4506">\r\n        <div id="dsq-comment-header-4506" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4506">\r\n                <span id="dsq-author-user-4506">Aleksandar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4506" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4506" class="dsq-comment-message"><p>Great algorithm! Did you invent it, or do you know the name of the inventor?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-4509">\r\n        <div id="dsq-comment-header-4509" class="dsq-comment-header">\r\n            <cite id="dsq-cite-4509">\r\n                <span id="dsq-author-user-4509">sankalp</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-4509" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-4509" class="dsq-comment-message"><p>@Aleksandar:<br />\nThis is a classic dynamic programming problem.. <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-ravinder even thread-odd thread-alt depth-1" id="dsq-comment-3940">\r\n        <div id="dsq-comment-header-3940" class="dsq-comment-header">\r\n            <cite id="dsq-cite-3940">\r\n                <span id="dsq-author-user-3940">Kumar</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-3940" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-3940" class="dsq-comment-message"><p>what is the algorithm for maximum rectangular sub-matrix having all 1&#8217;s</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-3606">\r\n        <div id="dsq-comment-header-3606" class="dsq-comment-header">\r\n            <cite id="dsq-cite-3606">\r\n                <span id="dsq-author-user-3606">abc</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-3606" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-3606" class="dsq-comment-message"><p>Can anyone elaborate a little bit on how do we find a rectangular sub-matrix instead? Thanks!</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2" id="dsq-comment-3633">\r\n        <div id="dsq-comment-header-3633" class="dsq-comment-header">\r\n            <cite id="dsq-cite-3633">\r\n                <span id="dsq-author-user-3633">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-3633" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-3633" class="dsq-comment-message"><p>@abc: We will soon write a separate post for rectangular matrix.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-3" id="dsq-comment-5747">\r\n        <div id="dsq-comment-header-5747" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5747">\r\n                <span id="dsq-author-user-5747">triti</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5747" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5747" class="dsq-comment-message"><p>Can you please give me the link to the rectangular submatrix algorithm?Please i really need it</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-kartik even depth-4" id="dsq-comment-5748">\r\n        <div id="dsq-comment-header-5748" class="dsq-comment-header">\r\n            <cite id="dsq-cite-5748">\r\n                <span id="dsq-author-user-5748">kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-5748" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-5748" class="dsq-comment-message"><p>See if the following link can help.</p>\n<p><a href="http://effprog.blogspot.com/2011/06/max-rectangle-sub-matrix-of-all-1s-in.html" rel="nofollow">http://effprog.blogspot.com/2011/06/max-rectangle-sub-matrix-of-all-1s-in.html</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-wgpshashank odd alt thread-odd thread-alt depth-1" id="dsq-comment-2685">\r\n        <div id="dsq-comment-header-2685" class="dsq-comment-header">\r\n            <cite id="dsq-cite-2685">\r\nhttp://www.wgpshashank.co.cc                <span id="dsq-author-user-2685">wgpshashank</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-2685" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-2685" class="dsq-comment-message"><p>Hey I would Like To Share The Concept Used BY Above program</p>\n<p>FAQ.<br />\nQ.Why we are copying the first column &amp; first row from source matrix to destination matrix.<br />\nans.. although its not mandatory but as below we are using the prev,current,next concept so lets just copy only first row &amp; col in tio auxiliary matrix.</p>\n<p>Q.why it uses the min of 3 elements<br />\nans. because if sub-matrix exist into middle of actual matrix we have to take care of in account of prev ,current, &amp; next value wrt corresponding M[i}[j}</p>\n<p>Correct me if i m wrong</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-1445">\r\n        <div id="dsq-comment-header-1445" class="dsq-comment-header">\r\n            <cite id="dsq-cite-1445">\r\n                <span id="dsq-author-user-1445">Ashish</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-1445" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-1445" class="dsq-comment-message"><p><a href="http://en.wikipedia.org/wiki/Levenshtein_distance" rel="nofollow">http://en.wikipedia.org/wiki/Levenshtein_distance</a></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-1264">\r\n        <div id="dsq-comment-header-1264" class="dsq-comment-header">\r\n            <cite id="dsq-cite-1264">\r\n                <span id="dsq-author-user-1264">Rohit Kandhal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-1264" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-1264" class="dsq-comment-message"><p>What if we want to show the maximum sized rectangular matrix consisting of all 0&#8217;s?<br />\nAlso as Himanshu pointed what is the reasoning behind  S[i][j] = min(S[i][j-1], S[i-1][j], S[i-1][j-1].To some extent i got it but i want to know exact reason.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-2687">\r\n        <div id="dsq-comment-header-2687" class="dsq-comment-header">\r\n            <cite id="dsq-cite-2687">\r\n                <span id="dsq-author-user-2687">gen</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-2687" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-2687" class="dsq-comment-message"><p>For a sub martrix with all 0&#8217;s..</p>\n<p>you can flip the initial matrix and follow above algorithm.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-939">\r\n        <div id="dsq-comment-header-939" class="dsq-comment-header">\r\n            <cite id="dsq-cite-939">\r\n                <span id="dsq-author-user-939">vignesh</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-939" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-939" class="dsq-comment-message"><p>A good example for DP.. Cheers</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-853">\r\n        <div id="dsq-comment-header-853" class="dsq-comment-header">\r\n            <cite id="dsq-cite-853">\r\n                <span id="dsq-author-user-853">Himanshu Aggarwal</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-853" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-853" class="dsq-comment-message"><p>Hi,</p>\n<p>Can any one explain how this formula/algorithm was derived?</p>\n<pre> <code language="C">If M[i][j] is 1 then\r\n            S[i][j] = min(S[i][j-1], S[i-1][j], S[i-1][j-1]) + 1\r\n         Else /*If M[i][j] is 0*/\r\n            S[i][j] = 0</code> </pre>\n<p>Some mathematical derivation or some reasoning would be sufficient to understand.</p>\n<p>Regards,<br />\nHimanshu Aggarwal</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-2236">\r\n        <div id="dsq-comment-header-2236" class="dsq-comment-header">\r\n            <cite id="dsq-cite-2236">\r\n                <span id="dsq-author-user-2236">ravi</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-2236" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-2236" class="dsq-comment-message"><p>I think they must have used the concept of dyanamic programming .<br />\nif you remember the problem of &#8220;longest common subsequence &#8221; the similar concept is used here.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-2897">\r\n        <div id="dsq-comment-header-2897" class="dsq-comment-header">\r\n            <cite id="dsq-cite-2897">\r\n                <span id="dsq-author-user-2897">abc</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-2897" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-2897" class="dsq-comment-message"><p>They indeed have used DP but what&#8217;s the rationale behind the formulae?<br />\nWe know the reason behind L[i,j] = min(L[i-1,j], L[i, j-1]), but what&#8217;s the similar reasoning behind min(S[i][j-1], S[i-1][j], S[i-1][j-1]) + 1??</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt depth-2" id="dsq-comment-16157">\r\n        <div id="dsq-comment-header-16157" class="dsq-comment-header">\r\n            <cite id="dsq-cite-16157">\r\n                <span id="dsq-author-user-16157">Nikhil</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-16157" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-16157" class="dsq-comment-message"><p><a href="http://www.topcoder.com/tc?d1=tutorials&#038;d2=dynProg&#038;module=Static" rel="nofollow">http://www.topcoder.com/tc?d1=tutorials&#038;d2=dynProg&#038;module=Static</a><br />\nJust go through this article and you will have solution for all your doubts <img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/images/smilies/simple-smile.png" alt=":)" class="wp-smiley" style="height: 1em; max-height: 1em;" /></p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-841">\r\n        <div id="dsq-comment-header-841" class="dsq-comment-header">\r\n            <cite id="dsq-cite-841">\r\n                <span id="dsq-author-user-841">rohans</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-841" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-841" class="dsq-comment-message"><p>The solution for max sub rectangle won&#8217;t work</p>\n<p>if a row of S has 2,3,2 it means the max sub rectangle is of size 2*(3-1) = 6;</p>\n<p>So to find the max sub rectangle we will have to take all possible combinations of non zero entries in each row and column of S</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-711">\r\n        <div id="dsq-comment-header-711" class="dsq-comment-header">\r\n            <cite id="dsq-cite-711">\r\n                <span id="dsq-author-user-711">Sunny</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-711" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-711" class="dsq-comment-message"><p>What if we need to find the largest rectangular matrix consisting of 1s?<br />\nHow will you change the above algorithm to get the solution or else is it a completely different approach?</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-702">\r\n        <div id="dsq-comment-header-702" class="dsq-comment-header">\r\n            <cite id="dsq-cite-702">\r\n                <span id="dsq-author-user-702">Ands</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-702" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-702" class="dsq-comment-message"><p>is there a way to get the max sub rectangular matrix?</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-sandeep odd alt depth-2" id="dsq-comment-710">\r\n        <div id="dsq-comment-header-710" class="dsq-comment-header">\r\n            <cite id="dsq-cite-710">\r\n                <span id="dsq-author-user-710">Sandeep</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-710" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-710" class="dsq-comment-message"><p>You can add another step to above algorithm to merge square sub-matrices.<br />\nNote that square sub-matrices can be merged horizontally or vertically only if adjacent values in sum matrix S[R][C] are same.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-3608">\r\n        <div id="dsq-comment-header-3608" class="dsq-comment-header">\r\n            <cite id="dsq-cite-3608">\r\n                <span id="dsq-author-user-3608">abc</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-3608" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-3608" class="dsq-comment-message"><p>What do you mean by adjacent values?<br />\nConsider the input matrix:</p>\n<pre> <code language="C"></code> </pre>\n<p>  |0 1 2 3 4 5 6<br />\n&#8211;|&#8212;&#8212;&#8212;&#8212;-<br />\n 0|1 0 1 1 1 0 1<br />\n 1|1 1 1 1 1 0 1<br />\n 2|1 0 1 1 1 1 0<br />\n 3|1 0 1 1 1 0 1</p>\n<p>The sum matrix for this would look like:<br />\n  |0 1 2 3 4 5 6<br />\n&#8211;|&#8212;&#8212;&#8212;&#8212;-<br />\n 0|1 0 1 1 1 0 1<br />\n 1|1 1 1 2 2 0 1<br />\n 2|1 0 2 2 3 1 0<br />\n 3|1 0 1 2 3 0 2</p>\n<p>So now there are two numbers with same max value as 3, they are: S[2][4] and S[3][4]<br />\nThat means 2 square matrices, we can merge these.</p>\n<p>By adjacent do you mean either horizontally or vertically adjacent?</p>\n<p>That is, a sum matrix like this is valid (a hypothetical matrix)</p>\n<p>  |0 1 2 3 4 5 6<br />\n&#8211;|&#8212;&#8212;&#8212;&#8212;-<br />\n 0|X X X X X X X<br />\n 1|X X X X X X X<br />\n 2|X X X X 3 3 X<br />\n 3|X X X X X X X</p>\n<p>And a one like this is not (another hypothetical one):</p>\n<p>  |0 1 2 3 4 5 6<br />\n&#8211;|&#8212;&#8212;&#8212;&#8212;-<br />\n 0|X X X X X X X<br />\n 1|X X X X X X X<br />\n 2|X X X X 3 X X<br />\n 3|X X X X X 3 X</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment byuser comment-author-jntl odd alt thread-odd thread-alt depth-1" id="dsq-comment-701">\r\n        <div id="dsq-comment-header-701" class="dsq-comment-header">\r\n            <cite id="dsq-cite-701">\r\n                <span id="dsq-author-user-701">jntl</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-701" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-701" class="dsq-comment-message"><p>Typo found below, should be M[0][j] instead.</p>\n<p>for(j = 0; j &lt; C; j++)<br />\n    S[0][j] = M[0][i];</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment byuser comment-author-geeksforgeeks bypostauthor even depth-2" id="dsq-comment-705">\r\n        <div id="dsq-comment-header-705" class="dsq-comment-header">\r\n            <cite id="dsq-cite-705">\r\n                <span id="dsq-author-user-705">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-705" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-705" class="dsq-comment-message"><p>@jntl: Thanks for pointing this out. We have corrected the typo.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/maximum-size-sub-matrix-with-all-1s-in-a-binary-matrix/\';\r\nvar disqus_identifier = \'6257 http://geeksforgeeks.org/?p=6257\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Maximum size square sub-matrix with all 1s";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(406)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(81)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(245)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(57)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'62 topics\' style=\'font-size: 15.766423357664pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.371 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-02 20:13:29 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p56
sb.