ccopy_reg
_reconstructor
p0
(cpost
Post
p1
c__builtin__
object
p2
Ntp3
Rp4
(dp5
S'post_file'
p6
S'/Users/anupamjain/code/gitRepo/GitToPost/posts/Java/RearrangeSameCharactersAtDistance'
p7
sS'files_covered'
p8
c__builtin__
set
p9
((lp10
S'/Users/anupamjain/code/gitRepo/Questions/Algo/Java/RearrangeSameCharactersAtDistance.java'
p11
atp12
Rp13
sS'title'
p14
VRearrange a string so that all same characters become d distance away
p15
sS'file_name'
p16
g11
sS'link'
p17
S'http://www.geeksforgeeks.org/rearrange-a-string-so-that-all-same-characters-become-at-least-d-distance-away/'
p18
sS'host_name'
p19
S'www.geeksforgeeks.org'
p20
sS'problem_text'
p21
g0
(cbs4.element
Tag
p22
g2
Ntp23
Rp24
(dp25
S'can_be_empty_element'
p26
I00
sS'previous_element'
p27
NsS'next_sibling'
p28
NsS'name'
p29
S'p'
p30
sS'parent'
p31
NsS'namespace'
p32
NsS'prefix'
p33
NsS'previous_sibling'
p34
NsS'attrs'
p35
(dp36
sS'next_element'
p37
g0
(g22
g2
Ntp38
Rp39
(dp40
g26
I00
sg27
g24
sg28
g0
(g22
g2
Ntp41
Rp42
(dp43
g26
I00
sg27
g0
(cbs4.element
NavigableString
p44
c__builtin__
unicode
p45
V\u000aExpected time complexity is O(n) where n is length of input string. 
p46
tp47
Rp48
(dp49
g34
g0
(g22
g2
Ntp50
Rp51
(dp52
g26
I01
sg27
g0
(g44
g45
V Rearrange characters of the given string such that the same characters become d distance away from each other.  Note that there can be many possible rearrangements, the output should be one of the possible rearrangements. If no such arrangement is possible, that should also be reported.
p53
tp54
Rp55
(dp56
g34
g0
(g22
g2
Ntp57
Rp58
(dp59
g26
I00
sg27
g0
(g44
g45
VGiven a string and a positive integer d. Some characters may be repeated in the given string.
p60
tp61
Rp62
(dp63
g34
Nsg27
g39
sg28
g58
sg37
g58
sg31
g39
sbsg28
g55
sg29
Vspan
p64
sg31
g39
sg32
Nsg33
Nsg34
g62
sg35
(dp65
Vid
p66
Vmore-127370
p67
ssg37
g55
sS'parser_class'
p68
cbs4
BeautifulSoup
p69
sS'hidden'
p70
I00
sS'contents'
p71
(lp72
sbsg27
g58
sg28
g51
sg37
g51
sg31
g39
sbsg28
g48
sg29
Vbr
p73
sg31
g39
sg32
Nsg33
Nsg34
g55
sg35
(dp74
sg37
g48
sg68
g69
sg70
I00
sg71
(lp75
sbsg27
g51
sg28
Nsg37
g42
sg31
g39
sbsg28
Nsg29
Vpre
p76
sg31
g24
sg32
Nsg33
Nsg34
g39
sg35
(dp77
sg37
g0
(g44
g45
VExamples:\u000aInput:  "abb", d = 2\u000aOutput: "bab"\u000a\u000aInput:  "aacbbc", d = 3\u000aOutput: "abcabc"\u000a\u000aInput: "geeksforgeeks", d = 3\u000aOutput: egkegkesfesor\u000a\u000aInput:  "aaa",  d = 2\u000aOutput: Cannot be rearranged\u000a
p78
tp79
Rp80
(dp81
g34
Nsg27
g42
sg28
Nsg37
Nsg31
g42
sbsg68
g69
sg70
I00
sg71
(lp82
g80
asbsg29
Vp
p83
sg31
g24
sg32
Nsg33
Nsg34
Nsg35
(dp84
sg37
g62
sg68
g69
sg70
I00
sg71
(lp85
g62
ag58
ag55
ag51
ag48
asbsg68
Nsg70
I00
sg71
(lp86
g39
ag42
asbsS'raw_page'
p87
S'<!DOCTYPE html>\r\n<!--[if IE 7]>\r\n<html class="ie ie7" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if IE 8]>\r\n<html class="ie ie8" lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<![endif]-->\r\n<!--[if !(IE 7) | !(IE 8)  ]><!-->\r\n<html lang="en-US" prefix="og: http://ogp.me/ns#">\r\n<!--<![endif]-->\r\n<head>\r\n<meta charset="UTF-8" />\r\n<meta name="viewport" content="width=device-width" />\r\n\r\n<meta property="og:image" content="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/gfg_200X200.png">\r\n<meta property="og:image:type" content="image/png">\r\n<meta property="og:image:width" content="200">\r\n<meta property="og:image:height" content="200">\r\n\r\n<title>Rearrange a string so that all same characters become d distance away - GeeksforGeeks</title>\r\n<link rel="profile" href="http://gmpg.org/xfn/11" />\r\n<link rel="pingback" href="http://www.geeksforgeeks.org/xmlrpc.php" />\r\n<!--[if lt IE 9]>\r\n<script src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/html5.js" type="text/javascript"></script>\r\n<![endif]-->\r\n\n<!-- This site is optimized with the Yoast SEO plugin v3.0.7 - https://yoast.com/wordpress/plugins/seo/ -->\n<link rel="canonical" href="http://www.geeksforgeeks.org/rearrange-a-string-so-that-all-same-characters-become-at-least-d-distance-away/" />\n<meta property="og:locale" content="en_US" />\n<meta property="og:type" content="article" />\n<meta property="og:title" content="Rearrange a string so that all same characters become d distance away - GeeksforGeeks" />\n<meta property="og:description" content="Given a string and a positive integer d. Some characters may be repeated in the given string. Rearrange characters of the given string such that the same characters become d distance away from each other. Note that there can be many possible rearrangements, the output should be one of the possible rearrangements. If no such\xe2\x80\xa6 Read More &raquo;" />\n<meta property="og:url" content="http://www.geeksforgeeks.org/rearrange-a-string-so-that-all-same-characters-become-at-least-d-distance-away/" />\n<meta property="og:site_name" content="GeeksforGeeks" />\n<meta property="article:tag" content="Greedy Algorithm" />\n<meta property="article:tag" content="Python" />\n<meta property="article:section" content="Greedy" />\n<meta property="article:published_time" content="2014-03-07T21:28:49+00:00" />\n<meta property="article:modified_time" content="2015-11-27T00:02:34+00:00" />\n<meta property="og:updated_time" content="2015-11-27T00:02:34+00:00" />\n<!-- / Yoast SEO plugin. -->\n\n\t\t<script type="text/javascript">\n\t\t\twindow._wpemojiSettings = {"baseUrl":"http:\\/\\/s.w.org\\/images\\/core\\/emoji\\/72x72\\/","ext":".png","source":{"concatemoji":"http:\\/\\/www.geeksforgeeks.org\\/wp-includes\\/js\\/wp-emoji-release.min.js"}};\n\t\t\t!function(a,b,c){function d(a){var c=b.createElement("canvas"),d=c.getContext&&c.getContext("2d");return d&&d.fillText?(d.textBaseline="top",d.font="600 32px Arial","flag"===a?(d.fillText(String.fromCharCode(55356,56812,55356,56807),0,0),c.toDataURL().length>3e3):(d.fillText(String.fromCharCode(55357,56835),0,0),0!==d.getImageData(16,16,1,1).data[0])):!1}function e(a){var c=b.createElement("script");c.src=a,c.type="text/javascript",b.getElementsByTagName("head")[0].appendChild(c)}var f,g;c.supports={simple:d("simple"),flag:d("flag")},c.DOMReady=!1,c.readyCallback=function(){c.DOMReady=!0},c.supports.simple&&c.supports.flag||(g=function(){c.readyCallback()},b.addEventListener?(b.addEventListener("DOMContentLoaded",g,!1),a.addEventListener("load",g,!1)):(a.attachEvent("onload",g),b.attachEvent("onreadystatechange",function(){"complete"===b.readyState&&c.readyCallback()})),f=c.source||{},f.concatemoji?e(f.concatemoji):f.wpemoji&&f.twemoji&&(e(f.twemoji),e(f.wpemoji)))}(window,document,window._wpemojiSettings);\n\t\t</script>\n\t\t<style type="text/css">\nimg.wp-smiley,\nimg.emoji {\n\tdisplay: inline !important;\n\tborder: none !important;\n\tbox-shadow: none !important;\n\theight: 1em !important;\n\twidth: 1em !important;\n\tmargin: 0 .07em !important;\n\tvertical-align: -0.1em !important;\n\tbackground: none !important;\n\tpadding: 0 !important;\n}\n</style>\n<link rel=\'stylesheet\' id=\'wp-pagenavi-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/wp-pagenavi/pagenavi-css.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-fonts-css\'  href=\'http://fonts.googleapis.com/css?family=Ubuntu:400,700&#038;subset=latin,latin-ext\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'themonic-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/style.css\' type=\'text/css\' media=\'all\' />\n<link rel=\'stylesheet\' id=\'custom-style-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/custom.css\' type=\'text/css\' media=\'all\' />\n<!--[if lt IE 9]>\n<link rel=\'stylesheet\' id=\'themonic-ie-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/css/ie.css\' type=\'text/css\' media=\'all\' />\n<![endif]-->\n<meta name="generator" content="WordPress 4.2.7" />\n<style type="text/css" id="custom-background-css">\nbody.custom-background { background-color: #ffffff; }\n</style>\n<style type="text/css" id="syntaxhighlighteranchor"></style>\n<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<script>\r\n  (adsbygoogle = window.adsbygoogle || []).push({\r\n    google_ad_client: "ca-pub-9465609616171866",\r\n    enable_page_level_ads: true\r\n  });\r\n</script>\r\n</head>\r\n<body class="single single-post postid-127370 single-format-standard custom-background custom-background-white custom-font-enabled">\r\n<div id="page" class="hfeed site">\r\n\t<header id="masthead" class="site-header" role="banner">\r\n\t\t\t\t\t<hgroup>\r\n\t\t\t<a href="http://www.geeksforgeeks.org/" title="GeeksforGeeks" rel="home">GeeksforGeeks</a>\r\n\t\t\t\t<br .../> <a class="site-description">A computer science portal for geeks</a>\r\n\t\t</hgroup>\r\n\r\n<div style="float:right;">\r\n<hgroup style="float:right;">   \r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/campus-ambassador-program-by-geeksforgeeks/">CA</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/gate-corner-2/">GATE CS</a>\r\n\r\n<strong><a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://practice.geeksforgeeks.org/">Practice</a></strong>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://www.geeksforgeeks.org/suggest/">Suggest</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://code.geeksforgeeks.org/">IDE</a>\r\n\r\n<a style="padding:0px 25px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://qa.geeksforgeeks.org/">Q&A</a>\r\n\r\n<a style="padding:0px 30px 0px 0px; font-size:25px; font-family: Georgia,Times New Roman,Times,Helvetica,Arial,serif; font-weight: lighter; letter-spacing: -0.05em; text-decoration:none;" href="http://geeksquiz.com/">GeeksQuiz</a>\r\n\r\n</hgroup><br></br>\r\n\r\n<span style="display:inline-block; width:300px;float:right;">\r\n<script>\r\n  (function() {\r\n    var cx = \'009682134359037907028:tj6eafkv_be\';\r\n    var gcse = document.createElement(\'script\');\r\n    gcse.type = \'text/javascript\';\r\n    gcse.async = true;\r\n    gcse.src = (document.location.protocol == \'https:\' ? \'https:\' : \'http:\') +\r\n        \'//cse.google.com/cse.js?cx=\' + cx;\r\n    var s = document.getElementsByTagName(\'script\')[0];\r\n    s.parentNode.insertBefore(gcse, s);\r\n  })();\r\n</script>\r\n<gcse:search></gcse:search>\r\n\r\n<style type="text/css">\r\n  .gsc-control-cse {\r\n     padding: 0px 10px;\r\n  } \r\n\r\n  .gsc-control-cse {\r\n    font-family: "Trebuchet MS", sans-serif;\r\n    /*border-color: #E1F3DA;*/\r\n    /*background-color: #E1F3DA;*/\r\n  }\r\n  input.gsc-input {\r\n    border-color: #94CC7A;\r\n  }\r\n  input.gsc-search-button {\r\n    border-color: #94CC7A;\r\n    background-color: #4CB96B;\r\n    margin-top:7px;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhInactive {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-tabHeader.gsc-tabhActive {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gsc-tabsArea {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-webResult.gsc-result {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-webResult.gsc-result:hover {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:link,\r\n  .gs-webResult.gs-result a.gs-title:link b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:visited,\r\n  .gs-webResult.gs-result a.gs-title:visited b {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:hover,\r\n  .gs-webResult.gs-result a.gs-title:hover b {\r\n    color: #003300;\r\n  }\r\n  .gs-webResult.gs-result a.gs-title:active,\r\n  .gs-webResult.gs-result a.gs-title:active b {\r\n    color: #009900;\r\n  }\r\n  .gsc-cursor-page {\r\n    color: #009900;\r\n  }\r\n  a.gsc-trailing-more-results:link {\r\n    color: #009900;\r\n  }\r\n  .gs-webResult.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    color: #33cc00;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-short {\r\n    display: none;\r\n  }\r\n  .gs-webResult.gs-result .gs-visibleUrl-long {\r\n    display: block;\r\n  }\r\n  .gsc-cursor-box {\r\n    border-color: #A9DA92;\r\n  }\r\n  .gsc-results .gsc-cursor-page {\r\n    border-color: #A9DA92;\r\n    background-color: #FFFFFF;\r\n  }\r\n  .gsc-results .gsc-cursor-page.gsc-cursor-current-page {\r\n    border-color: #A9DA92;\r\n    background-color: #A9DA92;\r\n  }\r\n  .gs-promotion.gs-result {\r\n    border-color: #94CC7A;\r\n    background-color: #CBE8B4;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:link {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:visited {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:hover {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result a.gs-title:active {\r\n    color: #0066CC;\r\n  }\r\n  .gs-promotion.gs-result .gs-snippet {\r\n    color: #454545;\r\n  }\r\n  .gs-promotion.gs-result .gs-visibleUrl,\r\n  .gs-promotion.gs-result .gs-visibleUrl-short {\r\n    color: #815FA7;\r\n  }\r\n  .gsib_a {\r\n    padding : 2px;\r\n  }\r\n</style>    \r\n</span>\r\n</div>\r\n\r\n\t\t\r\n\t\t\r\n\t\t<nav id="site-navigation" class="themonic-nav" role="navigation">\r\n\t\t\t<a class="assistive-text" href="#content" title="Skip to content">Skip to content</a>\r\n\t\t\t<div class="menu-iconic-container"><ul id="menu-top" class="nav-menu"><li id="menu-item-135003" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-home menu-item-135003"><a href="http://www.geeksforgeeks.org/">Home</a></li>\n<li id="menu-item-135004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135004"><a title="Algorithms" href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algo</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135030" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135030"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#AnalysisofAlgorithms">Analysis of Algorithms</a></li>\n\t<li id="menu-item-135031" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135031"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#SearchingandSorting">Searching and Sorting</a></li>\n\t<li id="menu-item-135032" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135032"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GreedyAlgorithms">Greedy Algorithms</a></li>\n\t<li id="menu-item-135033" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135033"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DynamicProgramming">Dynamic Programming</a></li>\n\t<li id="menu-item-135034" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135034"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#PatternSearching">Pattern Searching</a></li>\n\t<li id="menu-item-135035" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135035"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#OtherStringAlgorithms">Other String Algorithms</a></li>\n\t<li id="menu-item-135036" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135036"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#Backtracking">Backtracking</a></li>\n\t<li id="menu-item-135037" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135037"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#DivideandConquer">Divide and Conquer</a></li>\n\t<li id="menu-item-135038" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135038"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GeometricAlgorithms">Geometric Algorithms</a></li>\n\t<li id="menu-item-135039" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135039"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#MathematicalAlgorithms">Mathematical Algorithms</a></li>\n\t<li id="menu-item-135040" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135040"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#BitAlgorithms">Bit Algorithms</a></li>\n\t<li id="menu-item-135041" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135041"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#GraphAlgorithms">Graph Algorithms</a></li>\n\t<li id="menu-item-135042" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135042"><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/#RandomizedAlgorithms">Randomized Algorithms</a></li>\n</ul>\n</li>\n<li id="menu-item-135010" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-135010"><a title="Data Structures" href="http://www.geeksforgeeks.org/data-structures/">DS</a>\n<ul class="sub-menu">\n\t<li id="menu-item-135045" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135045"><a href="http://www.geeksforgeeks.org/data-structures/#LinkedList">LinkedList</a></li>\n\t<li id="menu-item-135046" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135046"><a href="http://www.geeksforgeeks.org/data-structures/#Stack">Stack</a></li>\n\t<li id="menu-item-135047" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135047"><a href="http://www.geeksforgeeks.org/data-structures/#Queue">Queue</a></li>\n\t<li id="menu-item-135048" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135048"><a href="http://www.geeksforgeeks.org/data-structures/#BinaryTree">Binary Tree</a></li>\n\t<li id="menu-item-135049" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135049"><a href="http://www.geeksforgeeks.org/data-structures/#BinarySearchTree">Binary Search Tree</a></li>\n\t<li id="menu-item-135050" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135050"><a href="http://www.geeksforgeeks.org/data-structures/#Heap">Heap</a></li>\n\t<li id="menu-item-135051" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135051"><a href="http://www.geeksforgeeks.org/data-structures/#Hashing">Hashing</a></li>\n\t<li id="menu-item-135052" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135052"><a href="http://www.geeksforgeeks.org/data-structures/#Graph">Graph</a></li>\n\t<li id="menu-item-135053" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135053"><a href="http://www.geeksforgeeks.org/data-structures/#AdvancedDataStructure">Advanced Data Structure</a></li>\n\t<li id="menu-item-135054" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135054"><a href="http://www.geeksforgeeks.org/data-structures/#Array">Array</a></li>\n\t<li id="menu-item-135055" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135055"><a href="http://www.geeksforgeeks.org/data-structures/#Matrix">Matrix</a></li>\n\t<li id="menu-item-135056" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135056"><a href="http://www.geeksforgeeks.org/data-structures/#Misc">Misc</a></li>\n</ul>\n</li>\n<li id="menu-item-135014" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135014"><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview</a></li>\n<li id="menu-item-135006" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135006"><a href="http://www.geeksforgeeks.org/c/">C</a></li>\n<li id="menu-item-135007" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135007"><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++</a></li>\n<li id="menu-item-135012" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135012"><a href="http://www.geeksforgeeks.org/java/">Java</a></li>\n<li id="menu-item-137004" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-137004"><a href="http://www.geeksforgeeks.org/python/">Python</a></li>\n<li id="menu-item-135009" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-135009"><a href="http://www.geeksforgeeks.org/contribute/">Contribute</a></li>\n<li id="menu-item-135016" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135016"><a href="http://qa.geeksforgeeks.org/index.php?qa=ask">Ask a Q</a></li>\n<li id="menu-item-135077" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135077"><a href="https://play.google.com/store/apps/details?id=free.programming.programming">AndroidApp</a></li>\n<li id="menu-item-135367" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135367"><a href="http://www.geeksforgeeks.org/category/guestblogs/">GBlog</a></li>\n<li id="menu-item-135028" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135028"><a href="http://www.geeksforgeeks.org/category/gfact/">GFact</a></li>\n<li id="menu-item-136004" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136004"><a href="http://www.geeksforgeeks.org/category/project/">Project</a></li>\n<li id="menu-item-136978" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-136978"><a href="http://www.geeksforgeeks.org/jobs/">Jobs</a></li>\n<li id="menu-item-135019" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135019"><a href="http://www.geeksforgeeks.org/category/c-arrays/">Arr</a></li>\n<li id="menu-item-135022" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-135022"><a href="http://www.geeksforgeeks.org/category/c-strings/">String</a></li>\n<li id="menu-item-135937" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135937"><a href="http://www.geeksforgeeks.org/category/matrix/">Matrix</a></li>\n<li id="menu-item-135023" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135023"><a href="http://www.geeksforgeeks.org/category/linked-list/">Linked List</a></li>\n<li id="menu-item-135029" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-135029"><a href="http://www.geeksforgeeks.org/category/stack/">Stack</a></li>\n<li id="menu-item-135932" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135932"><a href="http://www.geeksforgeeks.org/category/queue/">Q</a></li>\n<li id="menu-item-136299" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-136299"><a href="http://www.geeksforgeeks.org/category/hash/">Hash</a></li>\n<li id="menu-item-135941" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135941"><a href="http://www.geeksforgeeks.org/category/heap/">Heap</a></li>\n<li id="menu-item-135020" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135020"><a href="http://www.geeksforgeeks.org/category/tree/">Tree</a></li>\n<li id="menu-item-135940" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135940"><a href="http://www.geeksforgeeks.org/category/binary-search-tree/">BST</a></li>\n<li id="menu-item-135024" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135024"><a href="http://www.geeksforgeeks.org/category/graph/">Graph</a></li>\n<li id="menu-item-135017" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135017"><a href="http://www.geeksforgeeks.org/category/c-puzzles/">C/C++</a></li>\n<li id="menu-item-135027" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135027"><a href="http://www.geeksforgeeks.org/category/bit-magic/">Bit</a></li>\n<li id="menu-item-135021" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135021"><a href="http://www.geeksforgeeks.org/category/multiple-choice-question/">MCQ</a></li>\n<li id="menu-item-135018" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135018"><a href="http://www.geeksforgeeks.org/category/c-programs/">Misc</a></li>\n<li id="menu-item-135025" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-135025"><a href="http://www.geeksforgeeks.org/category/program-output/">O/P</a></li>\n</ul></div>\t\t</nav><!-- #site-navigation -->\r\n\t\t<div class="clear"></div>\r\n\t</header><!-- #masthead -->\r\n\r\n\t<div id="main" class="wrapper">\t<div id="primary" class="site-content">\r\n\t\t<div id="content" role="main">\r\n\r\n\t\t\t\t\t\t\t\r\n\t<article id="post-127370" class="post-127370 post type-post status-publish format-standard hentry category-greedy category-c-strings tag-greedy-algorithm tag-python">\r\n\t\t\t\t<header class="entry-header">\r\n\t\t\t\t\t\t<h1 class="entry-title">Rearrange a string so that all same characters become d distance away</h1>\r\n\t\t\t\t\r\n\t\t\t</header><!-- .entry-header -->\r\n\r\n\t\t\t\t<div class="entry-content">\r\n\t\t\t<p>Given a string and a positive integer d. Some characters may be repeated in the given string.<span id="more-127370"></span> Rearrange characters of the given string such that the same characters become d distance away from each other.  Note that there can be many possible rearrangements, the output should be one of the possible rearrangements. If no such arrangement is possible, that should also be reported.<br />\nExpected time complexity is O(n) where n is length of input string. </p>\n<pre>Examples:\r\nInput:  "abb", d = 2\r\nOutput: "bab"\r\n\r\nInput:  "aacbbc", d = 3\r\nOutput: "abcabc"\r\n\r\nInput: "geeksforgeeks", d = 3\r\nOutput: egkegkesfesor\r\n\r\nInput:  "aaa",  d = 2\r\nOutput: Cannot be rearranged\r\n</pre>\n<p><em><strong>We strongly recommend to minimize the browser and try this yourself first.</strong></em><br />\n<em><strong>Hint: </strong></em>Alphabet size may be assumed as constant (256) and extra space may be used.</p>\n<p><em><strong>Solution: </strong></em>The idea is to count frequencies of all characters and consider the most frequent character first and place all occurrences of it as close as possible.  After the most frequent character is placed, repeat the same process for remaining characters.</p>\n<p><strong>1)</strong> Let the given string be str and size of string be n</p>\n<p><strong>2)</strong> Traverse str, store all characters and their frequencies in a Max Heap MH. The value of frequency decides the order in MH, i.e., the most frequent character is at the root of MH.</p>\n<p><strong>3)</strong> Make all characters of str as &#8216;\\0&#8242;.</p>\n<p><strong>4)</strong> Do following while MH is not empty.<br />\n&#8230;<strong>a)</strong> Extract the Most frequent character. Let the extracted character be x and its frequency be f.<br />\n&#8230;<strong>b)</strong> Find the first available position in str, i.e., find the first &#8216;\\0&#8242; in str.<br />\n&#8230;<strong>c)</strong> Let the first position be p. Fill x at p, p+d,.. p+(f-1)d</p>\n<p>Following are C++ and Python implementations of above algorithm.</p>\n<div class="responsive-tabs">\n<h2 class="tabtitle">C/C++</h2>\n<div class="tabcontent">\n\n<pre class="brush: cpp; highlight: [64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118]; title: ; notranslate" title="">\r\n// C++ program to rearrange a string so that all same \r\n// characters become at least d distance away\r\n#include &lt;iostream&gt;\r\n#include &lt;cstring&gt;\r\n#include &lt;cstdlib&gt;\r\n#define MAX 256\r\nusing namespace std;\r\n\r\n// A structure to store a character \'c\' and its frequency \'f\'\r\n// in input string\r\nstruct charFreq {\r\n    char c;\r\n    int f;\r\n};\r\n\r\n// A utility function to swap two charFreq items.\r\nvoid swap(charFreq *x, charFreq *y) {\r\n    charFreq z = *x;\r\n    *x = *y;\r\n    *y = z;\r\n}\r\n\r\n// A utility function to maxheapify the node freq[i] of a heap \r\n// stored in freq[]\r\nvoid maxHeapify(charFreq freq[], int i, int heap_size)\r\n{\r\n    int l = i*2 + 1;\r\n    int r = i*2 + 2;\r\n    int largest = i;\r\n    if (l &lt; heap_size &amp;&amp; freq[l].f &gt; freq[i].f)\r\n        largest = l;\r\n    if (r &lt; heap_size &amp;&amp; freq[r].f &gt; freq[largest].f)\r\n        largest = r;\r\n    if (largest != i)\r\n    {\r\n        swap(&amp;freq[i], &amp;freq[largest]);\r\n        maxHeapify(freq, largest, heap_size);\r\n    }\r\n}\r\n\r\n// A utility function to convert the array freq[] to a max heap\r\nvoid buildHeap(charFreq freq[], int n)\r\n{\r\n    int i = (n - 1)/2;\r\n    while (i &gt;= 0)\r\n    {\r\n        maxHeapify(freq, i, n);\r\n        i--;\r\n    }\r\n}\r\n\r\n// A utility function to remove the max item or root from max heap\r\ncharFreq extractMax(charFreq freq[], int heap_size)\r\n{\r\n    charFreq root = freq[0];\r\n    if (heap_size &gt; 1)\r\n    {\r\n        freq[0] = freq[heap_size-1];\r\n        maxHeapify(freq, 0, heap_size-1);\r\n    }\r\n    return root;\r\n}\r\n\r\n// The main function that rearranges input string \'str\' such that\r\n// two same characters become d distance away \r\nvoid rearrange(char str[], int d)\r\n{\r\n    // Find length of input string\r\n    int n = strlen(str);\r\n\r\n    // Create an array to store all characters and their\r\n    // frequencies in str[]\r\n    charFreq freq[MAX] = {{0, 0}};\r\n\r\n    int m = 0; // To store count of distinct characters in str[]\r\n\r\n    // Traverse the input string and store frequencies of all\r\n    // characters in freq[] array.\r\n    for (int i = 0; i &lt; n; i++)\r\n    {        \r\n        char x = str[i];\r\n\r\n        // If this character has occurred first time, increment m\r\n        if (freq[x].c == 0)\r\n            freq[x].c = x, m++;\r\n\r\n        (freq[x].f)++;\r\n        str[i] = \'&#92;&#48;\';  // This change is used later \r\n    }\r\n\r\n    // Build a max heap of all characters\r\n    buildHeap(freq, MAX);\r\n\r\n    // Now one by one extract all distinct characters from max heap\r\n    // and put them back in str[] with the d distance constraint\r\n    for (int i = 0; i &lt; m; i++)\r\n    {\r\n        charFreq x = extractMax(freq, MAX-i);\r\n\r\n        // Find the first available position in str[]\r\n        int p = i;\r\n        while (str[p] != \'&#92;&#48;\')\r\n            p++;\r\n\r\n        // Fill x.c at p, p+d, p+2d, .. p+(f-1)d\r\n        for (int k = 0; k &lt; x.f; k++)\r\n        {\r\n            // If the index goes beyond size, then string cannot\r\n            // be rearranged.\r\n            if (p + d*k &gt;= n)\r\n            {\r\n                cout &lt;&lt; &quot;Cannot be rearranged&quot;;\r\n                exit(0);\r\n            }\r\n            str[p + d*k] = x.c;\r\n        }\r\n    }\r\n}\r\n\r\n// Driver program to test above functions\r\nint main()\r\n{\r\n    char str[] = &quot;aabbcc&quot;;\r\n    rearrange(str, 3);\r\n    cout &lt;&lt; str;\r\n}\r\n</pre>\n\n</div><h2 class="tabtitle">Python</h2>\n<div class="tabcontent">\n\n<pre class="brush: python; highlight: [58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109]; title: ; notranslate" title="">\r\n// Python program to rearrange a string so that all same \r\n// characters become at least d distance away\r\nMAX = 256\r\n\r\n# A structure to store a character \'c\' and its frequency \'f\'\r\n# in input string\r\nclass charFreq(object):\r\n    def __init__(self,c,f):\r\n        self.c = c\r\n        self.f = f\r\n\r\n# A utility function to swap two charFreq items.\r\ndef swap(x, y):\r\n    return y, x\r\n\r\n# A utility function\r\ndef toList(string):\r\n    t = []\r\n    for x in string:\r\n        t.append(x)\r\n\r\n    return t\r\n\r\n# A utility function\r\ndef toString(l):\r\n    return \'\'.join(l)\r\n\r\n# A utility function to maxheapify the node freq[i] of a heap\r\n# stored in freq[]\r\ndef maxHeapify(freq, i, heap_size):\r\n    l = i*2 + 1\r\n    r = i*2 + 2\r\n    largest = i\r\n    if l &lt; heap_size and freq[l].f &gt; freq[i].f:\r\n        largest = l\r\n    if r &lt; heap_size and freq[r].f &gt; freq[largest].f:\r\n        largest = r\r\n    if largest != i:\r\n        freq[i], freq[largest] = swap(freq[i], freq[largest])\r\n        maxHeapify(freq, largest, heap_size)\r\n\r\n# A utility function to convert the array freq[] to a max heap\r\ndef buildHeap(freq, n):\r\n    i = (n - 1)/2\r\n    while i &gt;= 0:\r\n        maxHeapify(freq, i, n)\r\n        i-=1\r\n\r\n# A utility function to remove the max item or root from max heap\r\ndef extractMax(freq, heap_size):\r\n    root = freq[0]\r\n    if heap_size &gt; 1:\r\n        freq[0] = freq[heap_size-1]\r\n        maxHeapify(freq, 0, heap_size-1)\r\n\r\n    return root\r\n\r\n# The main function that rearranges input string \'str\' such that\r\n# two same characters become d distance away\r\ndef rearrange(string, d):\r\n    # Find length of input string\r\n    n = len(string)\r\n\r\n    # Create an array to store all characters and their\r\n    # frequencies in str[]\r\n    freq = []\r\n    for x in xrange(MAX):\r\n        freq.append(charFreq(0,0))\r\n\r\n    m = 0\r\n\r\n    # Traverse the input string and store frequencies of all\r\n    # characters in freq[] array.\r\n    for i in xrange(n):\r\n        x = ord(string[i])\r\n\r\n        # If this character has occurred first time, increment m\r\n        if freq[x].c == 0:\r\n            freq[x].c = chr(x)\r\n            m+=1\r\n\r\n        freq[x].f+=1\r\n        string[i] = \'&#92;&#48;\'\r\n\r\n    # Build a max heap of all characters\r\n    buildHeap(freq, MAX)\r\n\r\n    # Now one by one extract all distinct characters from max heap\r\n    # and put them back in str[] with the d distance constraint\r\n    for i in xrange(m):\r\n        x = extractMax(freq, MAX-i)\r\n\r\n        # Find the first available position in str[]\r\n        p = i\r\n        while string[p] != \'&#92;&#48;\':\r\n            p+=1\r\n\r\n        # Fill x.c at p, p+d, p+2d, .. p+(f-1)d\r\n        for k in xrange(x.f):\r\n\r\n            # If the index goes beyond size, then string cannot\r\n            # be rearranged.\r\n            if p + d*k &gt;= n:\r\n                print &quot;Cannot be rearranged&quot;\r\n                return\r\n\r\n            string[p + d*k] = x.c\r\n\r\n    return toString(string)\r\n\r\n# Driver program\r\nstring = &quot;aabbcc&quot;\r\nprint rearrange(toList(string), 3)\r\n\r\n# This code is contributed by BHAVYA JAIN\r\n</pre>\n<p></div></div><br />\nOutput:\n<pre>abcabc</pre>\n<p><strong>Algorithmic Paradigm:</strong> <a href="http://www.geeksforgeeks.org/greedy-algorithms-set-1-activity-selection-problem/" target="_blank">Greedy Algorithm</a></p>\n<p><strong>Time Complexity:</strong> Time complexity of above implementation is O(n + mLog(MAX)). Here n is the length of str, m is count of distinct characters in str[] and MAX is maximum possible different characters. MAX is typically 256 (a constant) and m is smaller than MAX.  So the time complexity can be considered as O(n). </p>\n<p><strong>More Analysis:</strong><br />\nThe above code can be optimized to store only m characters in heap, we have kept it this way to keep the code simple.  So the time complexity can be improved to O(n + mLogm). It doesn&#8217;t much matter through as MAX is a constant.</p>\n<p>Also, the above algorithm can be implemented using a O(mLogm) sorting algorithm.  The first steps of above algorithm remain same. Instead of building a heap, we can sort the freq[] array in non-increasing order of frequencies and then consider all characters one by one from sorted array.</p>\n<p>We will soon be covering an extended version where same characters should be moved at least d distance away. </p>\n<p>This article is contributed by <strong>Himanshu Gupta</strong>. Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above</p>\n\r\n\t\t\t<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big Rectangle Blog Bottom -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4061219431"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script>\r\n<br></br>\r\n\t\t</div><!-- .entry-content -->\r\n\t\t\t\t\r\n\t\t\r\n\r\n\t\t<footer class="entry-meta">\r\n\t\t<span class="post-comment"><a href="http://www.geeksforgeeks.org/rearrange-a-string-so-that-all-same-characters-become-at-least-d-distance-away/#comments" class="commentslink" ><span class="dsq-postid" data-dsqidentifier="127370 http://www.geeksforgeeks.org/?p=127370">17 Comments</span></a> <!--added for comments by Shubham-->\r\n\t\t</span><span>Category: <a href="http://www.geeksforgeeks.org/category/algorithm/greedy/" rel="category tag">Greedy</a> <a href="http://www.geeksforgeeks.org/category/c-strings/" rel="category tag">Strings</a></span> <span>Tags: <a href="http://www.geeksforgeeks.org/tag/greedy-algorithm/" rel="tag">Greedy Algorithm</a>, <a href="http://www.geeksforgeeks.org/tag/python/" rel="tag">Python</a></span> \r\n           \t          \t\r\n\t\t\t\t\t</footer><!-- .entry-meta -->\r\n\t</article><!-- #post -->\r\n<div class="related_posts"><h3>Related Posts:</h3><ul><li><a href="http://www.geeksforgeeks.org/find-minimum-time-to-finish-all-jobs-with-given-constraints/" title="Find minimum time to finish all jobs with given constraints">Find minimum time to finish all jobs with given constraints</a></li><li><a href="http://www.geeksforgeeks.org/shortest-superstring-problem/" title="Shortest Superstring Problem">Shortest Superstring Problem</a></li><li><a href="http://www.geeksforgeeks.org/greedy-algorithms-set-9-boruvkas-algorithm/" title="Greedy Algorithms | Set 9 (Boruvka&#8217;s algorithm)">Greedy Algorithms | Set 9 (Boruvka&#8217;s algorithm)</a></li><li><a href="http://www.geeksforgeeks.org/set-cover-problem-set-1-greedy-approximate-algorithm/" title="Set Cover Problem | Set 1 (Greedy Approximate Algorithm)">Set Cover Problem | Set 1 (Greedy Approximate Algorithm)</a></li><li><a href="http://www.geeksforgeeks.org/k-centers-problem-set-1-greedy-approximate-algorithm/" title="K Centers Problem | Set 1 (Greedy Approximate Algorithm)">K Centers Problem | Set 1 (Greedy Approximate Algorithm)</a></li><li><a href="http://www.geeksforgeeks.org/greedy-algorithm-egyptian-fraction/" title="Greedy Algorithm for Egyptian Fraction">Greedy Algorithm for Egyptian Fraction</a></li><li><a href="http://www.geeksforgeeks.org/minimize-cash-flow-among-given-set-friends-borrowed-money/" title="Minimize Cash Flow among a given set of friends who have borrowed money from each other">Minimize Cash Flow among a given set of friends who have borrowed money from each other</a></li><li><a href="http://www.geeksforgeeks.org/job-sequencing-problem-set-1-greedy-algorithm/" title="Job Sequencing Problem | Set 1 (Greedy Algorithm)">Job Sequencing Problem | Set 1 (Greedy Algorithm)</a></li></ul></div><br></br>\r\n\r\n<!-- Added on 29 Oct 2015 for next and previous from same category -->\r\n<nav class="nav-single">\r\n\t\t\t\t\t<div class="assistive-text">Post navigation</div>\r\n\t\t\t\t\t<span class="nav-previous"><a href="http://www.geeksforgeeks.org/graph-coloring-set-2-greedy-algorithm/" rel="prev">Previous post in category</a></span>\r\n\t\t\t\t\t<span class="nav-next"><a href="http://www.geeksforgeeks.org/printing-longest-common-subsequence/" rel="next">Next post in category</a></span>\r\n\t\t\t\t</nav><!-- .nav-single -->\r\n\r\n\r\n<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script>\r\n    <script type="text/javascript">\r\n    $(document).ready(function(){\r\n        $.ajax({\r\n            url:"http://courses.geeksforgeeks.org/plugin.php",\r\n            method:"POST",\r\n            dataType:"json",\r\n            data:{post_id:$("#ratePlugin").attr("pid"),url:window.location.href},\r\n            xhrFields:{withCredentials:true},\r\n            success:function(response){\r\n                $("#ratePlugin").html(response.rate);\r\n                $("#markPlugin").html(response.mark);\r\n            },\r\n            complete:function(){\r\n                $(".box").click(function(){\r\n                    rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                });\r\n                $(".mark").click(function(){\r\n                    mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                });\r\n            }\r\n        });\r\n        function rrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgRatings.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#ratePlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".box").click(function(){\r\n                        rrequest({post_id:$("#ratePlugin").attr("pid"),post_title:$("#ratePlugin").attr("ptitle"),rating:$(this).attr("rating"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //rrequest({post_id:$("#ratePlugin").attr("pid"),url:window.location.href});\r\n        function mrequest(payload){\r\n            $.ajax({\r\n                url:"http://courses.geeksforgeeks.org/gfgMarking.php",\r\n                method:"POST",\r\n                dataType:"html",\r\n                data:payload,\r\n                xhrFields:{withCredentials:true},\r\n                success:function(response){\r\n                    $("#markPlugin").html(response);\r\n                },\r\n                complete:function(){\r\n                    $(".mark").click(function(){\r\n                        mrequest({post_id:$("#markPlugin").attr("pid"),post_title:$("#markPlugin").attr("ptitle"),op:$(this).attr("id"),url:window.location.href});\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        //mrequest({post_id:$("#markPlugin").attr("pid"),url:window.location.href});\r\n    });\r\n</script>\r\n\r\n<div class="plugins">\r\n<div pid="127370" ptitle="Rearrange a string so that all same characters become d distance away" id="ratePlugin"></div>\r\n<div pid="127370" ptitle="Rearrange a string so that all same characters become d distance away" id="markPlugin"></div>\r\n</div>\r\n\r\n<br></br>\r\n\r\n<script>\r\n  window.fbAsyncInit=function() {\r\n    FB.init({\r\n      appId      : \\\'380853768781431\\\',\r\n      xfbml      : true,\r\n      version    : \\\'v2.3\\\'\r\n    });\r\n  };\r\n\r\n  (function(d, s, id){\r\n     var js, fjs = d.getElementsByTagName(s)[0];\r\n     if (d.getElementById(id)) {return;}\r\n     js = d.createElement(s); js.id = id;\r\n     js.src = "//connect.facebook.net/en_US/sdk.js";\r\n     fjs.parentNode.insertBefore(js, fjs);\r\n   }(document, \\\'script\\\', \\\'facebook-jssdk\\\'));\r\n</script>\r\n<div class="fb-like" data-share="true" data-width="450" data-show-faces="true"></div>\r\n\r\n<br></br>\r\n<p>Writing code in comment? Please use <a href="http://code.geeksforgeeks.org/">code.geeksforgeeks.org</a>, generate link and share the link here.</a>\r\n\t\t\t\t\r\n<div id="disqus_thread">\r\n            <div id="dsq-content">\r\n\r\n\r\n            <ul id="dsq-comments">\r\n                    <li class="comment even thread-even depth-1" id="dsq-comment-36067">\r\n        <div id="dsq-comment-header-36067" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36067">\r\n                <span id="dsq-author-user-36067">typing..</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36067" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36067" class="dsq-comment-message"><p>your solution is not correct for string &#8220;aaaabbbcc&#8221; and d=2. your algorithm give output &#8220;cannot be rarranged&#8221; by considering string as &#8220;abababacc&#8221;, but there is a solution as &#8220;bababacac&#8221;.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-36201">\r\n        <div id="dsq-comment-header-36201" class="dsq-comment-header">\r\n            <cite id="dsq-cite-36201">\r\n                <span id="dsq-author-user-36201">nikita</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-36201" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-36201" class="dsq-comment-message"><p>update the sol&#8230; this doesnt work for cases such as given by kss</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-35519">\r\n        <div id="dsq-comment-header-35519" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35519">\r\n                <span id="dsq-author-user-35519">Guest13</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35519" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35519" class="dsq-comment-message"><p><a href="http://ideone.com/HOnRLZ" rel="nofollow">http://ideone.com/HOnRLZ</a></p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-35521">\r\n        <div id="dsq-comment-header-35521" class="dsq-comment-header">\r\n            <cite id="dsq-cite-35521">\r\n                <span id="dsq-author-user-35521">Guest13</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-35521" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-35521" class="dsq-comment-message"><p>Posted By mistake..This is for recursively removing all adjacent duplicates from string</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-34516">\r\n        <div id="dsq-comment-header-34516" class="dsq-comment-header">\r\n            <cite id="dsq-cite-34516">\r\n                <span id="dsq-author-user-34516">codex</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-34516" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-34516" class="dsq-comment-message"><p>can we implement  it without using heap????</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-33713">\r\n        <div id="dsq-comment-header-33713" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33713">\r\n                <span id="dsq-author-user-33713">jitender</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33713" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33713" class="dsq-comment-message"><p>#include<br />\n#include<br />\n#include</p>\n<p>struct node      // structure to store character and it&#8217;s frequency<br />\n{<br />\n  char c;<br />\n  int count;<br />\n};</p>\n<p>void sameCharacter_K_Distance(char *str , int d)  // function for rearrange the string<br />\n{</p>\n<p>   int size=strlen(str);    //  length of string</p>\n<p>  struct node* arr=(struct node*)malloc(sizeof(struct node)*size);  // struct node array to store character and frequency</p>\n<p>  int i,j,n=0,l=0,k=0;</p>\n<p>  /*  code for calculate  each character and it&#8217;s frequency  */</p>\n<p>  for(i = 0 ; i &lt; size ; i++)<br />\n  {<br />\n      for(j = 0 ; j &lt; n ; j++)<br />\n       {<br />\n         if(arr[j].c == str[i])  // if character is already store then increase it&#039;s count only<br />\n          {<br />\n            arr[j].count++;<br />\n            break;<br />\n           }<br />\n       }</p>\n<p>       if( j == n )    // if character is not store then store it and it&#039;s frequency 1<br />\n       {<br />\n        arr[n].c=str[i];<br />\n        arr[n++].count=1;<br />\n       }<br />\n       str[i]=&#039;&#039;;   // store null in string when character is used for future use of str<br />\n   }</p>\n<p> /*  store character in struct node array in decreasing order frequency */ </p>\n<p> //  bubble sort for sorting</p>\n<p> struct node temp;<br />\n  for( i = 0 ; i &lt; n ; i++ )<br />\n  {<br />\n     for( j = 0 ; j &lt; n-i-1 ; j++)<br />\n     {<br />\n        if(arr[j].count &lt; arr[j+1].count)  // swap the struct node array object<br />\n        {<br />\n          temp=arr[i];<br />\n          arr[i]=arr[i+1];<br />\n          arr[i+1]=temp;</p>\n<p>        }<br />\n     }<br />\n  }   </p>\n<p> // Find the first available position in str, i.e., find the first \xe2\x80\x98? in str.<br />\n // Let the first position be p. Fill x at p, p+d,.. p+(f-1)d  </p>\n<p>   for(i = 0 ; i &lt; n ; i++)<br />\n    {<br />\n       l=0;<br />\n       for(l = 0 ; str[l] != &#039;&#039; ; l++);   // loop for find available position</p>\n<p>       for(j=0 ;  arr[i].count !=0 ; arr[i].count&#8211;,j++)  // loop will continue until the frequency becomes zero<br />\n       {</p>\n<p>        str[l+j*d]=arr[i].c;</p>\n<p>       }  </p>\n<p>    } </p>\n<p>    // if str length becomes original size  then string rearrangement not possible<br />\n    if(strlen(str) &lt; size)<br />\n    {<br />\n      printf(&quot;string rearrange is not possiblen&quot;);<br />\n      exit(0);<br />\n     }          </p>\n<p>  printf(&quot;after making %d distance same character = %s n&quot;,d,str);  // print string after rearrangement </p>\n<p> }</p>\n<p>int main()<br />\n{<br />\n  char str[100];</p>\n<p>  int d;</p>\n<p>  printf(&quot;enter the stringn&quot;);</p>\n<p>  fgets(str,100,stdin);<br />\n  printf(&quot;enter the distance = &quot;);<br />\n  scanf(&quot;%d&quot;,&amp;d);<br />\n  sameCharacter_K_Distance(str , d);</p>\n<p>  return 0;<br />\n}</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-33285">\r\n        <div id="dsq-comment-header-33285" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33285">\r\n                <span id="dsq-author-user-33285">bharat</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33285" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33285" class="dsq-comment-message"><p>if string is &#8220;AAABBBCCC&#8221; and d  = 2&#8230;..<br />\nthen can we arrage like this&#8230;.. &#8220;ABACACBCB&#8221; (taking a relative postion from other simillar characters)&#8230; any suggesttions please??</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt thread-odd thread-alt depth-1" id="dsq-comment-33282">\r\n        <div id="dsq-comment-header-33282" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33282">\r\n                <span id="dsq-author-user-33282">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33282" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33282" class="dsq-comment-message"><p>All, thanks for your inputs.  The above provided solution works only for the problem where same characters should be moved exact d distance away.   We have updated the problem statement.  We will soon be covering the extended version where same characters should be moved at least d distance away.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment even thread-even depth-1" id="dsq-comment-33277">\r\n        <div id="dsq-comment-header-33277" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33277">\r\n                <span id="dsq-author-user-33277">Guest</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33277" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33277" class="dsq-comment-message"><p>There is logical error in for loop, when you are re-arranging chars. Correct loop should be</p>\n<p>   for (int i = 0; i &lt; m; i++)</p>\n<p>    {</p>\n<p>        charFreq x = extractMax(freq, MAX-i);</p>\n<p>        // Find the first available position in str[]</p>\n<p>        int p = i;</p>\n<p>        while (str[p] != &#039;&#039;)</p>\n<p>            p++;</p>\n<p>        // Fill x.c at p, p+d, p+2d, .. p+(f-1)d</p>\n<p>        for (int k = 0; k &lt; x.f; k++)</p>\n<p>        {</p>\n<p>            // If the index goes beyond size, then string cannot</p>\n<p>            // be rearranged.</p>\n<p>            int indx = p + d*k;</p>\n<p>            // Check if there is some character is already there, </p>\n<p>            // then look for next empty (&#039;&#039;) slot</p>\n<p>            while (indx = n)</p>\n<p>            {</p>\n<p>                cout &lt;&lt; &quot;Cannot be rearranged&quot;;</p>\n<p>                exit(0);</p>\n<p>            }</p>\n<p>            str[indx] = x.c;</p>\n<p>        }</p>\n<p>    }</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-33283">\r\n        <div id="dsq-comment-header-33283" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33283">\r\n                <span id="dsq-author-user-33283">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33283" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33283" class="dsq-comment-message"><p>Guest, this fix doesn&#8217;t work for the example provided by uuuouou in below comments.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment even thread-odd thread-alt depth-1" id="dsq-comment-33274">\r\n        <div id="dsq-comment-header-33274" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33274">\r\nhttp://practicepeople.blogspot.in/                <span id="dsq-author-user-33274">RajKumar Rampalli</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33274" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33274" class="dsq-comment-message"><p>Can we implement it using below simple logic.<br />\n1. Traverse string and note down the all occurrences of characters in 2-D array in decreasing order of occurrence<br />\n    Ex: aaabbbccc becomes a|3|b|3|c|3 and acbcaa becomes a|3|c|2|b|1<br />\n2. Now, take each character from each row of 2-D array and make up the new string (of length equals to given string) starting from index 0<br />\n   Ex: i) a|3|b|3|c|3<br />\n              In 1st iteration &#8211;&gt; abc<br />\n              In 2nd iteration &#8211;&gt; abcabc<br />\n              In 3rd iteration &#8212;&gt; abcabcabc<br />\n        ii) a|3|c|2|b|1<br />\n            In 1st iteration &#8211;&gt; acb<br />\n            In 2nd iteration &#8211;&gt; acbac<br />\n            In 3rd iteration &#8212;&gt; acbaca</p>\n<p>Suggestions are welcome.!</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment odd alt depth-2" id="dsq-comment-33276">\r\n        <div id="dsq-comment-header-33276" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33276">\r\n                <span id="dsq-author-user-33276">Kartik</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33276" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33276" class="dsq-comment-message"><p>This doesn&#8217;t seem to work for<br />\naaabbcdefg<br />\nd = 3</p>\n<p>The 2-D array is<br />\na3b2c1d1e1f1g1</p>\n<p>After first pass<br />\nabcdefg</p>\n<p>After second pass<br />\nabcdefgab</p>\n<p>3rd pass fails to place a and b</p>\n<p>But string can be rearranged abcabdeafg.</p>\n<p>I think both the approaches should be combined.</p>\n<p>Let me know your thoughts.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-33368">\r\n        <div id="dsq-comment-header-33368" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33368">\r\nhttp://practicepeople.blogspot.in/                <span id="dsq-author-user-33368">RajKumar Rampalli</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33368" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33368" class="dsq-comment-message"><p>Karthik, I think the proposed Himanshu Gupta&#8217;s logic will work for cases. The 1st comment (uuuuu) is leading everyone in wrong path. Since d=2 &#8211;&gt; a&#8211;a&#8211;a &#8211;&gt; ab-ab-ab &#8211;&gt; abcabc.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n    <li class="comment odd alt thread-even depth-1" id="dsq-comment-33273">\r\n        <div id="dsq-comment-header-33273" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33273">\r\n                <span id="dsq-author-user-33273">uuuouou</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33273" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33273" class="dsq-comment-message"><p>I&#8217;m sorry, but your algorithm will fail when the string is &#8220;aaabbbccc&#8221; and d = 2. Following are steps according to your algorithm:<br />\n(1)a_a_a____<br />\n(2)ababab___<br />\n(3)can not be rearranged<br />\nBut in fact we can arrange the string into &#8220;abcabcabc&#8221; to meet the requirement.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-2" id="dsq-comment-33275">\r\n        <div id="dsq-comment-header-33275" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33275">\r\n                <span id="dsq-author-user-33275">GeeksforGeeks</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33275" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33275" class="dsq-comment-message"><p>Thanks for pointing this out.  We will soon update this post with correct solution.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n    <li class="comment odd alt depth-2" id="dsq-comment-33314">\r\n        <div id="dsq-comment-header-33314" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33314">\r\n                <span id="dsq-author-user-33314">Toney</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33314" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33314" class="dsq-comment-message"><p>No, in your answer &#8216;abcabcabc&#8217;, same characters are not exactly 2 characters away from each other.</p>\n</div>\r\n        </div>\r\n\r\n    <ul class="children">\n    <li class="comment even depth-3" id="dsq-comment-33616">\r\n        <div id="dsq-comment-header-33616" class="dsq-comment-header">\r\n            <cite id="dsq-cite-33616">\r\n                <span id="dsq-author-user-33616">flyingbird</span>\r\n            </cite>\r\n        </div>\r\n        <div id="dsq-comment-body-33616" class="dsq-comment-body">\r\n            <div id="dsq-comment-message-33616" class="dsq-comment-message"><p>if &gt;= distance, I think this way does not work. we need to consider the fairness once its frequency is lowered after it is put into the spot. Cannot allocate most frequent characters as d-distance spots in advance. The check should be done for each spot.</p>\n</div>\r\n        </div>\r\n\r\n    </li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n</ul><!-- .children -->\n</li><!-- #comment-## -->\n            </ul>\r\n\r\n\r\n        </div>\r\n\r\n    </div>\r\n\r\n<script type="text/javascript">\r\nvar disqus_url = \'http://www.geeksforgeeks.org/rearrange-a-string-so-that-all-same-characters-become-at-least-d-distance-away/\';\r\nvar disqus_identifier = \'127370 http://www.geeksforgeeks.org/?p=127370\';\r\nvar disqus_container_id = \'disqus_thread\';\r\nvar disqus_shortname = \'geeksforgeeks\';\r\nvar disqus_title = "Rearrange a string so that all same characters become d distance away";\r\nvar disqus_config_custom = window.disqus_config;\r\nvar disqus_config = function () {\r\n    /*\r\n    All currently supported events:\r\n    onReady: fires when everything is ready,\r\n    onNewComment: fires when a new comment is posted,\r\n    onIdentify: fires when user is authenticated\r\n    */\r\n    \r\n    \r\n    this.language = \'\';\r\n    \r\n    if (disqus_config_custom) {\r\n        disqus_config_custom.call(this);\r\n    }\r\n};\r\n\r\n(function() {\r\n    var dsq = document.createElement(\'script\'); dsq.type = \'text/javascript\';\r\n    dsq.async = true;\r\n    dsq.src = \'//\' + disqus_shortname + \'.disqus.com/embed.js\';\r\n    (document.getElementsByTagName(\'head\')[0] || document.getElementsByTagName(\'body\')[0]).appendChild(dsq);\r\n})();\r\n</script>\r\n\r\n\r\n\t\t\t\r\n\t\t</div><!-- #content -->\r\n\t</div><!-- #primary -->\r\n\r\n\r\n\t\t\t<div id="secondary" class="widget-area" role="complementary">\r\n\t\t\t<aside id="text-9" class="widget widget_text">\t\t\t<div class="textwidget"><div id="fb-root"></div>\r\n<script>(function(d, s, id) {\r\n  var js, fjs = d.getElementsByTagName(s)[0];\r\n  if (d.getElementById(id)) return;\r\n  js = d.createElement(s); js.id = id;\r\n  js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.3&appId=138031159685820";\r\n  fjs.parentNode.insertBefore(js, fjs);\r\n}(document, \'script\', \'facebook-jssdk\'));</script>\r\n\r\n<div class="fb-page" data-href="https://www.facebook.com/pages/GeeksforGeeks/316764689022" data-width="300" data-height="180" data-small-header="true" data-adapt-container-width="false" data-hide-cover="true" data-show-facepile="true" data-show-posts="false"><div class="fb-xfbml-parse-ignore"><blockquote cite="https://www.facebook.com/pages/GeeksforGeeks/316764689022"><a href="https://www.facebook.com/pages/GeeksforGeeks/316764689022">GeeksforGeeks</a></blockquote></div></div>\r\n</div>\n\t\t</aside><aside id="text-33" class="widget widget_text">\t\t\t<div class="textwidget"><a href="http://www.springpeople.com/gfg-landing">\r\n<img src="http://d1gjlxt8vb0knt.cloudfront.net//wp-content/uploads/GfG-2.jpg" alt="SpringPeople Ad">\r\n</a>\r\n</div>\n\t\t</aside><aside id="text-14" class="widget widget_text"><p class="widget-title">Popular Posts</p>\t\t\t<div class="textwidget"><ul>\r\n<li><a href="http://www.geeksforgeeks.org/top-algorithms-and-data-structures-for-competitive-programming/">Top 10 Algorithms and Data Structures for Competitive Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/top-10-algorithms-in-interview-questions/">Top 10 algorithms in Interview Questions</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/how-to-begin-with-competitive-programming/">How to begin with Competitive Programming?</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/write-a-c-program-to-print-all-permutations-of-a-given-string/">  All permutations of a given string </a></li>\r\n<li><a href="http://www.geeksforgeeks.org/memory-layout-of-c-program/"> Memory Layout of C Programs</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/understanding-extern-keyword-in-c/"> Understanding \xe2\x80\x9cextern\xe2\x80\x9d keyword in C</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/heavy-light-decomposition-set-1-introduction/"> Heavy Light Decomposition</a> </li>\r\n<li><a href="http://www.geeksforgeeks.org/sorted-linked-list-to-balanced-bst/"> Sorted Linked List to Balanced BST</a></li>\r\n</ul></div>\n\t\t</aside><aside id="text-17" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- Big 300x600 Sidebar -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:300px;height:600px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="4402736037"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-32" class="widget widget_text">\t\t\t<div class="textwidget"><form style="border:1px solid #ccc;padding:3px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open(\'https://feedburner.google.com/fb/a/mailverify?uri=Geeksforgeeks\', \'popupwindow\', \'scrollbars=yes,width=550,height=520\');return true"><p>Subscribe and Never Miss an Article</p><input type="text" style="width:140px" placeholder="Email Address" name="email"/><input type="hidden" value="Geeksforgeeks" name="uri"/><input type="hidden" name="loc" value="en_US"/>&nbsp;&nbsp;<input type="submit" style="background-color: #4cb96b;" value="Subscribe" /></form></div>\n\t\t</aside><aside id="text-18" class="widget widget_text">\t\t\t<div class="textwidget"><script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>\r\n<!-- LargeRectangleSide -->\r\n<ins class="adsbygoogle"\r\n     style="display:inline-block;width:336px;height:280px"\r\n     data-ad-client="ca-pub-9465609616171866"\r\n     data-ad-slot="1884636833"></ins>\r\n<script>\r\n(adsbygoogle = window.adsbygoogle || []).push({});\r\n</script></div>\n\t\t</aside><aside id="text-13" class="widget widget_text">\t\t\t<div class="textwidget"><ul><li><a href="http://geeksquiz.com/category/articles/puzzle/">Common Interview Puzzles</a></li><li><a href="http://www.geeksforgeeks.org/category/interview-experiences/">Interview Experiences</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/advanced-data-structure/">Advanced Data Structures</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/dynamic-programming">Dynamic Programming</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/Greedy-Algorithm/">Greedy Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/backtracking">Backtracking</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/pattern-searching/">Pattern Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/divide-and-conquer">Divide & Conquer</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/geometric-algorithms/">Geometric Algorithms</a></li><li><a href="http://www.geeksforgeeks.org/category/searching/">Searching</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/sorting/">Sorting</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/Hash/">Hashing</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/analysis/">Analysis of Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/mathematical/">Mathematical Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/category/algorithm/randomized/">Randomized Algorithms</a></li>\r\n<li><a href="http://www.geeksforgeeks.org/tag/recursion">Recursion</a></li>\r\n</ul>\r\n\r\n\r\n\r\n\r\n</div>\n\t\t</aside><aside id="categories-384568212" class="widget widget_categories"><p class="widget-title">All Categories</p><label class="screen-reader-text" for="cat">All Categories</label><select name=\'cat\' id=\'cat\' class=\'postform\' >\n\t<option value=\'-1\'>Select Category</option>\n\t<option class="level-0" value="1762">Advanced Data Structure&nbsp;&nbsp;(69)</option>\n\t<option class="level-0" value="1744">Algorithm&nbsp;&nbsp;(405)</option>\n\t<option class="level-1" value="1745">&nbsp;&nbsp;&nbsp;Analysis&nbsp;&nbsp;(16)</option>\n\t<option class="level-1" value="1748">&nbsp;&nbsp;&nbsp;Backtracking&nbsp;&nbsp;(11)</option>\n\t<option class="level-1" value="1750">&nbsp;&nbsp;&nbsp;Divide and Conquer&nbsp;&nbsp;(29)</option>\n\t<option class="level-1" value="1746">&nbsp;&nbsp;&nbsp;Dynamic Programming&nbsp;&nbsp;(91)</option>\n\t<option class="level-1" value="1754">&nbsp;&nbsp;&nbsp;Geometric&nbsp;&nbsp;(14)</option>\n\t<option class="level-1" value="1747">&nbsp;&nbsp;&nbsp;Greedy&nbsp;&nbsp;(20)</option>\n\t<option class="level-1" value="1753">&nbsp;&nbsp;&nbsp;Mathematical&nbsp;&nbsp;(123)</option>\n\t<option class="level-1" value="1749">&nbsp;&nbsp;&nbsp;Pattern Searching&nbsp;&nbsp;(30)</option>\n\t<option class="level-1" value="1757">&nbsp;&nbsp;&nbsp;Randomized&nbsp;&nbsp;(19)</option>\n\t<option class="level-1" value="1751">&nbsp;&nbsp;&nbsp;Searching&nbsp;&nbsp;(43)</option>\n\t<option class="level-1" value="1752">&nbsp;&nbsp;&nbsp;Sorting&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="3">Arrays&nbsp;&nbsp;(80)</option>\n\t<option class="level-0" value="18">Articles&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="1761">Binary Search Tree&nbsp;&nbsp;(37)</option>\n\t<option class="level-0" value="17">Bit Magic&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="14">C/C++ Puzzles&nbsp;&nbsp;(244)</option>\n\t<option class="level-0" value="1790">Competitive Programming&nbsp;&nbsp;(4)</option>\n\t<option class="level-0" value="1710">GBlog&nbsp;&nbsp;(56)</option>\n\t<option class="level-0" value="67">GFacts&nbsp;&nbsp;(43)</option>\n\t<option class="level-0" value="97">Graph&nbsp;&nbsp;(74)</option>\n\t<option class="level-0" value="1756">Hash&nbsp;&nbsp;(21)</option>\n\t<option class="level-0" value="1755">Heap&nbsp;&nbsp;(18)</option>\n\t<option class="level-0" value="1140">Interview Experiences&nbsp;&nbsp;(1,052)</option>\n\t<option class="level-0" value="87">Java&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="8">Linked Lists&nbsp;&nbsp;(70)</option>\n\t<option class="level-0" value="1760">Matrix&nbsp;&nbsp;(39)</option>\n\t<option class="level-0" value="66">MCQ&nbsp;&nbsp;(95)</option>\n\t<option class="level-0" value="4">Misc&nbsp;&nbsp;(40)</option>\n\t<option class="level-0" value="5">Output&nbsp;&nbsp;(55)</option>\n\t<option class="level-0" value="1767">Project&nbsp;&nbsp;(22)</option>\n\t<option class="level-0" value="1789">Python&nbsp;&nbsp;(5)</option>\n\t<option class="level-0" value="1743">Queue&nbsp;&nbsp;(16)</option>\n\t<option class="level-0" value="1742">Stack&nbsp;&nbsp;(25)</option>\n\t<option class="level-0" value="7">Strings&nbsp;&nbsp;(61)</option>\n\t<option class="level-0" value="1788">Technical Scripter&nbsp;&nbsp;(14)</option>\n\t<option class="level-0" value="19">Trees&nbsp;&nbsp;(114)</option>\n</select>\n\n<script type=\'text/javascript\'>\n/* <![CDATA[ */\n(function() {\n\tvar dropdown = document.getElementById( "cat" );\n\tfunction onCatChange() {\n\t\tif ( dropdown.options[ dropdown.selectedIndex ].value > 0 ) {\n\t\t\tlocation.href = "http://www.geeksforgeeks.org/?cat=" + dropdown.options[ dropdown.selectedIndex ].value;\n\t\t}\n\t}\n\tdropdown.onchange = onCatChange;\n})();\n/* ]]> */\n</script>\n\n</aside><aside id="text-21" class="widget widget_text"><p class="widget-title">Recent Comments</p>\t\t\t<div class="textwidget"><script type="text/javascript" src="http://geeksforgeeks.disqus.com//recent_comments_widget.js?num_items=6&hide_avatars=1&excerpt_length=50&hide_mods=0"></script></div>\n\t\t</aside><aside id="tag_cloud-3" class="widget widget_tag_cloud"><p class="widget-title">Tags</p><div class="tagcloud"><a href=\'http://www.geeksforgeeks.org/tag/adobe/\' class=\'tag-link-148\' title=\'32 topics\' style=\'font-size: 12.905109489051pt;\'>Adobe</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advance-data-structures/\' class=\'tag-link-152\' title=\'31 topics\' style=\'font-size: 12.802919708029pt;\'>Advance Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/advanced-data-structures/\' class=\'tag-link-150\' title=\'38 topics\' style=\'font-size: 13.620437956204pt;\'>Advanced Data Structures</a>\n<a href=\'http://www.geeksforgeeks.org/tag/amazon/\' class=\'tag-link-141\' title=\'254 topics\' style=\'font-size: 22pt;\'>Amazon</a>\n<a href=\'http://www.geeksforgeeks.org/tag/array/\' class=\'tag-link-68\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>array</a>\n<a href=\'http://www.geeksforgeeks.org/tag/backtracking/\' class=\'tag-link-112\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>Backtracking</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bharti-softbank-hike/\' class=\'tag-link-1214\' title=\'10 topics\' style=\'font-size: 8pt;\'>Bharti SoftBank (HIKE)</a>\n<a href=\'http://www.geeksforgeeks.org/tag/bit-magic/\' class=\'tag-link-17\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Bit Magic</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c/\' class=\'tag-link-86\' title=\'18 topics\' style=\'font-size: 10.452554744526pt;\'>C++</a>\n<a href=\'http://www.geeksforgeeks.org/tag/cn/\' class=\'tag-link-142\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>CN</a>\n<a href=\'http://www.geeksforgeeks.org/tag/c-puzzle/\' class=\'tag-link-69\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>c puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/d-e-shaw/\' class=\'tag-link-823\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>D-E-Shaw</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dbms/\' class=\'tag-link-139\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>DBMS</a>\n<a href=\'http://www.geeksforgeeks.org/tag/divide-and-conquer/\' class=\'tag-link-113\' title=\'27 topics\' style=\'font-size: 12.189781021898pt;\'>Divide and Conquer</a>\n<a href=\'http://www.geeksforgeeks.org/tag/dynamic-programming/\' class=\'tag-link-111\' title=\'83 topics\' style=\'font-size: 16.992700729927pt;\'>Dynamic Programming</a>\n<a href=\'http://www.geeksforgeeks.org/tag/flipkart/\' class=\'tag-link-173\' title=\'46 topics\' style=\'font-size: 14.43795620438pt;\'>Flipkart</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate/\' class=\'tag-link-114\' title=\'88 topics\' style=\'font-size: 17.299270072993pt;\'>GATE</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-2012/\' class=\'tag-link-133\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-2012</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-c-language/\' class=\'tag-link-72\' title=\'10 topics\' style=\'font-size: 8pt;\'>GATE-CS-C-Language</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-ds-algo/\' class=\'tag-link-79\' title=\'35 topics\' style=\'font-size: 13.313868613139pt;\'>GATE-CS-DS-&amp;-Algo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gate-cs-older/\' class=\'tag-link-145\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>GATE-CS-Older</a>\n<a href=\'http://www.geeksforgeeks.org/tag/gfact/\' class=\'tag-link-67\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>GFacts</a>\n<a href=\'http://www.geeksforgeeks.org/tag/goldman-sachs/\' class=\'tag-link-590\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Goldman Sachs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/google/\' class=\'tag-link-155\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Google</a>\n<a href=\'http://www.geeksforgeeks.org/tag/graph/\' class=\'tag-link-97\' title=\'45 topics\' style=\'font-size: 14.335766423358pt;\'>Graph</a>\n<a href=\'http://www.geeksforgeeks.org/tag/greedy-algorithm/\' class=\'tag-link-159\' title=\'20 topics\' style=\'font-size: 10.861313868613pt;\'>Greedy Algorithm</a>\n<a href=\'http://www.geeksforgeeks.org/tag/hashing/\' class=\'tag-link-250\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>Hashing</a>\n<a href=\'http://www.geeksforgeeks.org/tag/interview-experience/\' class=\'tag-link-126\' title=\'216 topics\' style=\'font-size: 21.284671532847pt;\'>Interview Experience</a>\n<a href=\'http://www.geeksforgeeks.org/tag/java/\' class=\'tag-link-87\' title=\'61 topics\' style=\'font-size: 15.664233576642pt;\'>Java</a>\n<a href=\'http://www.geeksforgeeks.org/tag/maq-software/\' class=\'tag-link-1392\' title=\'11 topics\' style=\'font-size: 8.4087591240876pt;\'>MAQ Software</a>\n<a href=\'http://www.geeksforgeeks.org/tag/mathematicalalgo/\' class=\'tag-link-154\' title=\'73 topics\' style=\'font-size: 16.481751824818pt;\'>MathematicalAlgo</a>\n<a href=\'http://www.geeksforgeeks.org/tag/matrix/\' class=\'tag-link-211\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Matrix</a>\n<a href=\'http://www.geeksforgeeks.org/tag/microsoft/\' class=\'tag-link-104\' title=\'95 topics\' style=\'font-size: 17.605839416058pt;\'>Microsoft</a>\n<a href=\'http://www.geeksforgeeks.org/tag/morgan-stanley/\' class=\'tag-link-167\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>Morgan Stanley</a>\n<a href=\'http://www.geeksforgeeks.org/tag/operating-systems/\' class=\'tag-link-110\' title=\'19 topics\' style=\'font-size: 10.656934306569pt;\'>Operating systems</a>\n<a href=\'http://www.geeksforgeeks.org/tag/oracle/\' class=\'tag-link-171\' title=\'24 topics\' style=\'font-size: 11.678832116788pt;\'>Oracle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/pattern-searching/\' class=\'tag-link-107\' title=\'26 topics\' style=\'font-size: 11.985401459854pt;\'>Pattern Searching</a>\n<a href=\'http://www.geeksforgeeks.org/tag/puzzle/\' class=\'tag-link-70\' title=\'15 topics\' style=\'font-size: 9.6350364963504pt;\'>puzzle</a>\n<a href=\'http://www.geeksforgeeks.org/tag/python/\' class=\'tag-link-1770\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Python</a>\n<a href=\'http://www.geeksforgeeks.org/tag/recursion/\' class=\'tag-link-85\' title=\'21 topics\' style=\'font-size: 11.065693430657pt;\'>Recursion</a>\n<a href=\'http://www.geeksforgeeks.org/tag/samsung/\' class=\'tag-link-180\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Samsung</a>\n<a href=\'http://www.geeksforgeeks.org/tag/sap-labs/\' class=\'tag-link-1414\' title=\'23 topics\' style=\'font-size: 11.474452554745pt;\'>SAP Labs</a>\n<a href=\'http://www.geeksforgeeks.org/tag/snapdeal/\' class=\'tag-link-1246\' title=\'16 topics\' style=\'font-size: 9.9416058394161pt;\'>SnapDeal</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack/\' class=\'tag-link-94\' title=\'17 topics\' style=\'font-size: 10.248175182482pt;\'>stack</a>\n<a href=\'http://www.geeksforgeeks.org/tag/stack-queue/\' class=\'tag-link-899\' title=\'12 topics\' style=\'font-size: 8.7153284671533pt;\'>Stack-Queue</a></div>\n</aside><aside id="text-25" class="widget widget_text">\t\t\t<div class="textwidget"><ul>\r\n<li><h2><a href="http://geeksquiz.com/">GeeksQuiz</a></h2></li>\r\n\r\n<li><h2><a href="http://code.geeksforgeeks.org/">GeeksforGeeksIDE</a></h2></li>\r\n\r\n<li><h2><a href="http://www.practice.geeksforgeeks.org/">GeeksforGeeks Practice</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/data-structures/">Data Structures</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/fundamentals-of-algorithms/">Algorithms</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c/">C Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/c-plus-plus/">C++ Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/java/">Java Programming</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/books/">Books</a></h2></li>\r\n\r\n<li><h2><a href="http://www.geeksforgeeks.org/about/interview-corner/">Interview Experiences</a></h2></li>\r\n\r\n<li><h2><a href="http://geeksquiz.com/gate-corner-2/">GATE CS</a></h2></li>\r\n\r\n<li><h2><a href="http://www.gatecs.geeksquiz.com">GATE CS Forum</a></h2></li>\r\n\r\n<li><h2><a href="https://play.google.com/store/apps/details?id=free.programming.programming">Android App</a></h2></li>\r\n</ul>\r\n\r\n</div>\n\t\t</aside>\t\t</div><!-- #secondary -->\r\n\t\t</div><!-- #main .wrapper -->\r\n\t<footer id="colophon" role="contentinfo">\r\n\t\t<div class="site-info">\r\n\t\t<div class="clear"></div>\r\n\t\t</div><!-- .site-info -->\r\n\t\t</footer><!-- #colophon -->\r\n<center>\r\n<div class="iconic-footer">\r\n\r\n@geeksforgeeks, <a href="http://creativecommons.org/licenses/by-nc-nd/2.5/in/deed.en_US" title="Valid XHTML Strict 1.0">Some rights reserved</a>  <a href="http://www.geeksforgeeks.org/about/contact-us/"> &nbsp; &nbsp; &nbsp; &nbsp;Contact Us!</a>  <a href="http://www.geeksforgeeks.org/about/"> &nbsp; &nbsp; &nbsp; &nbsp;About Us!&nbsp; &nbsp; &nbsp; &nbsp;</a><a href="http://www.geeksforgeeks.org/new/ad.htm"> &nbsp; &nbsp; &nbsp; &nbsp;Advertise with us!&nbsp; &nbsp; &nbsp; &nbsp;</a>\r\n\r\n      \t\t\t</div></center><!-- .site-info -->\r\n\r\n\t\t\t\t<div class="clear"></div>\r\n</div><!-- #page -->\r\n\r\n        <script type="text/javascript">\r\n        // <![CDATA[\r\n        var disqus_shortname = \'geeksforgeeks\';\r\n        (function () {\r\n            var nodes = document.getElementsByTagName(\'span\');\r\n            for (var i = 0, url; i < nodes.length; i++) {\r\n                if (nodes[i].className.indexOf(\'dsq-postid\') != -1) {\r\n                    nodes[i].parentNode.setAttribute(\'data-disqus-identifier\', nodes[i].getAttribute(\'data-dsqidentifier\'));\r\n                    url = nodes[i].parentNode.href.split(\'#\', 1);\r\n                    if (url.length == 1) { url = url[0]; }\r\n                    else { url = url[1]; }\r\n                    nodes[i].parentNode.href = url + \'#disqus_thread\';\r\n                }\r\n            }\r\n            var s = document.createElement(\'script\'); \r\n            s.async = true;\r\n            s.type = \'text/javascript\';\r\n            s.src = \'//\' + disqus_shortname + \'.disqus.com/count.js\';\r\n            (document.getElementsByTagName(\'HEAD\')[0] || document.getElementsByTagName(\'BODY\')[0]).appendChild(s);\r\n        }());\r\n        // ]]>\r\n        </script>\r\n        <script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shCore.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushCpp.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/scripts/shBrushPython.js\'></script>\n<script type=\'text/javascript\'>\n\t(function(){\n\t\tvar corecss = document.createElement(\'link\');\n\t\tvar themecss = document.createElement(\'link\');\n\t\tvar corecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shCore.css?ver=3.0.9b";\r\n\t\tif ( corecss.setAttribute ) {\r\n\t\t\t\tcorecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tcorecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tcorecss.setAttribute( "href", corecssurl );\r\n\t\t} else {\r\n\t\t\t\tcorecss.rel = "stylesheet";\r\n\t\t\t\tcorecss.href = corecssurl;\r\n\t\t}\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( corecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t\tvar themecssurl = "http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/syntaxhighlighter/syntaxhighlighter3/styles/shThemeDefault.css?ver=3.0.9b";\r\n\t\tif ( themecss.setAttribute ) {\r\n\t\t\t\tthemecss.setAttribute( "rel", "stylesheet" );\r\n\t\t\t\tthemecss.setAttribute( "type", "text/css" );\r\n\t\t\t\tthemecss.setAttribute( "href", themecssurl );\r\n\t\t} else {\r\n\t\t\t\tthemecss.rel = "stylesheet";\r\n\t\t\t\tthemecss.href = themecssurl;\r\n\t\t}\r\n\t\t//document.getElementById("syntaxhighlighteranchor").appendChild(themecss);\r\n\t\tdocument.getElementsByTagName("head")[0].insertBefore( themecss, document.getElementById("syntaxhighlighteranchor") );\r\n\t})();\n\tSyntaxHighlighter.config.strings.expandSource = \'+ expand source\';\n\tSyntaxHighlighter.config.strings.help = \'?\';\n\tSyntaxHighlighter.config.strings.alert = \'SyntaxHighlighter\\n\\n\';\n\tSyntaxHighlighter.config.strings.noBrush = \'Can\\\'t find brush for: \';\n\tSyntaxHighlighter.config.strings.brushNotHtmlScript = \'Brush wasn\\\'t configured for html-script option: \';\n\tSyntaxHighlighter.defaults[\'gutter\'] = false;\n\tSyntaxHighlighter.defaults[\'pad-line-numbers\'] = true;\n\tSyntaxHighlighter.defaults[\'toolbar\'] = false;\n\tSyntaxHighlighter.all();\r\n</script>\r\n<link rel=\'stylesheet\' id=\'tabby-print-css\'  href=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/css/tabby-print.css\' type=\'text/css\' media=\'all\' />\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/comment-reply.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/themes/iconic-one/js/selectnav.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-includes/js/jquery/jquery-migrate.min.js\'></script>\n<script type=\'text/javascript\' src=\'http://d1gjlxt8vb0knt.cloudfront.net//wp-content/plugins/tabby-responsive-tabs/js/tabby.js\'></script>\n\n<script>jQuery(document).ready(function($) { RESPONSIVEUI.responsiveTabs(); })</script>\n\r\n\r\n<script type="text/javascript">\r\n\r\n  var _gaq = _gaq || [];\r\n  _gaq.push([\'_setAccount\', \'UA-12148232-1\']);\r\n  _gaq.push([\'_trackPageview\']);\r\n\r\n  (function() {\r\n    var ga = document.createElement(\'script\'); ga.type = \'text/javascript\'; ga.async = true;\r\n    ga.src = (\'https:\' == document.location.protocol ? \'https://ssl\' : \'http://www\') + \'.google-analytics.com/ga.js\';\r\n    var s = document.getElementsByTagName(\'script\')[0]; s.parentNode.insertBefore(ga, s);\r\n  })();\r\n\r\n</script>  \r\n<script async type="text/javascript" src="//cdn.fancybar.net/ac/fancybar.js?zoneid=1502&serve=C6ADVKE&placement=geeksforgeeks" id="_fancybar_js"></script>\r\n</body>\r\n</html>\n<!-- Dynamic page generated in 0.324 seconds. -->\n<!-- Cached page generated by WP-Super-Cache on 2016-03-01 09:16:20 -->\n\n<!-- Compression = gzip -->\n<!-- super cache -->'
p88
sb.