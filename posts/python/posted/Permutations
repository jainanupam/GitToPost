<b>Title: </b>Permutations  <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/permutations/'>leetcode.com</a><p><p>
Given a collection of numbers, return all possible permutations.
</p><p>
For example,<br/>
<code>[1,2,3]</code> have the following permutations:<br/>
<code>[1,2,3]</code>, <code>[1,3,2]</code>, <code>[2,1,3]</code>, <code>[2,3,1]</code>, <code>[3,1,2]</code>, and <code>[3,2,1]</code>.
</p></p>

<h3>Python solution</h3><pre class="lang:python decode:true ">''' https://leetcode.com/problems/permutations/ '''

class Solution(object):
    def __init__(self):
        self.lst = []
        
    def helper(self, curr, rem):
        if not rem:
            self.lst.append(curr)
        else:
            ln = len(rem)
            for i in range(0, ln):
                self.helper(curr + [rem[i]], rem[:i] + rem[i+1:])
                
        
    def permute(self, nums):
        """
        :type nums: List[int]
        :rtype: List[List[int]]
        """
        if not nums:
            return self.lst
        
        self.helper([], nums)
        return self.lst
</pre><br><br><h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/permutations/ */
import java.util.*;
class Permutation
{
	/*public static void permute(String prefix, String str)
	{
		//base case
		int n = str.length();
		if(n==0)
			System.out.println(prefix);
		else
		{
			for(int i=0;i<n;i++)
			{
				permute(prefix + str.charAt(i), str.substring(0,i)+str.substring(i+1));
			}
		}
	}*/

	public List<List<Integer>> permute(int[] nums) 
	{
        List<List<Integer>> list = new ArrayList<>();
        if(nums==null || nums.length==0)
        	return list;
        ArrayList<Integer> l = new ArrayList<>();
        for(int i:nums)
        	l.add(i);
        permuteHelper(l, new ArrayList<Integer>(), list);
        return list;
    }

	public void permuteHelper(List<Integer> nums,List<Integer> list, 
			List<List<Integer>> result)
	{
		if(nums.size()==0)
		{
			result.add(new ArrayList<Integer>(list));
		}
		else
		{
			for(int i=0;i<nums.size();++i)
			{
				int temp = nums.remove(i);
				list.add(temp);
				permuteHelper(nums, list, result);
				nums.add(i, temp);
				list.remove(list.size()-1);
			}
		}
	}

	public static void main(String[] args)
	{
		//Permutation.permute("", "ABCD");
		Permutation p = new Permutation();
		int[] nums = {1, 2, 3};
		System.out.println(p.permute(nums));
	}
}
</pre>