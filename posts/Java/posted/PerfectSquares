<b>Title: </b>Perfect Squares  <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/perfect-squares/'>leetcode.com</a><p><p>
Given a positive integer <i>n</i>, find the least number of perfect square numbers (for example, <code>1, 4, 9, 16, ...</code>) which sum to <i>n</i>.
</p><p>
For example, given <i>n</i> = <code>12</code>, return <code>3</code> because <code>12 = 4 + 4 + 4</code>; given <i>n</i> = <code>13</code>, return <code>2</code> because <code>13 = 4 + 9</code>.
</p></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/perfect-squares/ */
class PerfectSquares
{
	public static void main(String args[])
	{
		PerfectSquares ps = new PerfectSquares();
		System.out.println(ps.numSquares(12));
	}

	public int numSquares(int n)
	{
        int[] dp = new int[n+1];
        for(int i=1;i<=n;i++)
        {
        	int min = Integer.MAX_VALUE;
        	for(int j=1;j<=(int)Math.sqrt(i);j++)
        	{
        		min = Math.min(min, dp[i - j*j]+1);
        	}
        	dp[i] = min;
        }
        return dp[n];
    }
}
</pre>