<b>Title: </b>First Bad Version  <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/first-bad-version/'>leetcode.com</a><p><p>
You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad. 
</p><p>
Suppose you have <code>n</code> versions <code>[1, 2, ..., n]</code> and you want to find out the first bad one, which causes all the following ones to be bad.
</p><p>
You are given an API <code>bool isBadVersion(version)</code> which will return whether <code>version</code> is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.
</p></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/first-bad-version/ */
class FirstBadVersion
{
	public int firstBadVersion(int n)
	{
    	int lo = 0;
    	int hi = n-1;
    	while(lo <= hi)
    	{
    		int mid = lo + (hi-lo)/2;
    		if(isBadVersion(mid))
    			hi = mid - 1;
    		else
    			lo = mid + 1;
    	}
    	return lo;
    }

    boolean isBadVersion(int version)
    {
    	int[] num = {0, 1, 1, 1, 1, 1};
    	if(num[version]==1)
    		return true;
    	return false;
    }

    public static void main(String args[])
    {
    	FirstBadVersion solution = new FirstBadVersion();
    	System.out.println(solution.firstBadVersion(6));
    }
}
</pre>