<b>Title: </b>Move Zeroes  <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/move-zeroes/'>leetcode.com</a><p><p>
Given an array <code>nums</code>, write a function to move all <code>0</code>'s to the end of it while maintaining the relative order of the non-zero elements.
</p><p>
For example, given <code>nums  = [0, 1, 0, 3, 12]</code>, after calling your function, <code>nums</code> should be <code>[1, 3, 12, 0, 0]</code>.
</p><p>
<b>Note</b>:<br>
<ol>
<li>You must do this <b>in-place</b> without making a copy of the array.</li>
<li>Minimize the total number of operations.</li>
</ol>
</br></p></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/move-zeroes/ */
class MoveZeroes
{
	public static void main(String args[])
	{
		MoveZeroes solution = new MoveZeroes();
		// int[] nums = {0};
		// int[] nums = {1, 0};
		// int[] nums = {0, 1};
		// int[] nums = {0, 0, 0};
		// int[] nums = {1,0,1};
		// int[] nums = {1, 2, 3};
		int[] nums = {0, 1, 0, 3, 12};
		solution.moveZeroes(nums);

	}

	public void moveZeroes(int[] nums)
	{
			int ptr = 0;
			int i = 0;
			while(i<nums.length){
				if(nums[i]!=0){
					nums[ptr++] = nums[i];
				}
				i++;
			}
			while(ptr<nums.length){
				nums[ptr++] = 0;
			}
      for(int num: nums)
        System.out.print(num+"\t");
    }
}
</pre>