<b>Title: </b>
            54. Spiral Matrix
            <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/spiral-matrix/'>leetcode.com</a><p><section class="action action-btn-set">
<a class="icon-btn btn" href="https://discuss.leetcode.com/category/62" onclick="ga('send', 'event', 'discuss', 'click', 'spiral-matrix');" target="_blank">
<i aria-hidden="true" class="fa fa-commenting-o"></i>Discuss
          </a>
<button class="icon-btn disabled" data-placement="top" data-toggle="tooltip" title="Not available yet, please check back later." type="button">
<i aria-hidden="true" class="fa fa-book">
</i><span class="hidden-xs">Editorial </span>Solution
          </button>
<a class="icon-btn pull-right-sm btn" href="/problems/random-one-question/" onclick="ga('send', 'event', 'pick-one-detail', 'click');">
<i aria-hidden="true" class="fa fa-random"></i>Pick One
          </a>
</section><hr class="line dotted">
</hr></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/spiral-matrix/ */
import java.util.*;
public class SpiralMatrix
{
	public static void main(String args[])
	{
		/*int[][] matrix = {
 							{ 1, 2, 3 },
 							{ 4, 5, 6 },
 							{ 7, 8, 9 }
						};
		*/
		int[][] matrix = {{2,3,4},{5,6,7},{8,9,10},{11,12,13},{14,15,16}};
		SpiralMatrix s = new SpiralMatrix();
		System.out.println(s.spiralOrder(matrix));
	}

	public List<Integer> spiralOrder(int[][] matrix) 
	{
		List<Integer> list = new ArrayList<>();
        if(matrix==null || matrix.length==0)
        	return list;

        int left = 0;
        int right = matrix[0].length-1;
        int up = 0;
        int down = matrix.length-1;

        while(left <= right && up <= down)
        {
        	System.out.println("left: "+ left+ "right: "+right);
        	System.out.println("up: "+up + "down: "+down);
        	for(int i=left; i<=right; ++i)
        		list.add(matrix[up][i]);
        	up++;

        	for(int i=up; i<=down; ++i)
        		list.add(matrix[i][right]);
        	right--;

        	if(left>right || up>down) //check the boundaries
        		break;

        	for(int i=right;i>=left;--i)
        		list.add(matrix[down][i]);
        	down--;
        	for(int i=down;i>=up;--i)
        		list.add(matrix[i][left]);
        	left++;
        }

        return list;
    }
}</pre>