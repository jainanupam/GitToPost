<b>Title: </b>Ugly Numbers  <b>Source: </b><a target='_blank' href='http://www.geeksforgeeks.org/ugly-numbers/'>www.geeksforgeeks.org</a><p><p>Ugly numbers are numbers whose only prime factors are 2, 3 or 5. The sequence 1, 2, 3, 4, 5, 6, 8, 9, 10, 12, 15, … shows the first 11 ugly numbers. By convention, 1 is included. </p><p>Given a number n, the task is to find n’th Ugly number.</p><pre>
Input  : n = 7
Output : 8

Input  : n = 10
Output : 12

Input  : n = 15
Output : 24

Input  : n = 150
Output : 5832
</pre><p><span id="more-753"></span></p><div id="practiceLinkDiv">
<h2>
<a href="http://practice.geeksforgeeks.org/problems/number-that-are-not-divisible/0">Recommended: Please solve it on “<b><i><u>PRACTICE</u></i></b> ” first, before moving on to the solution.</a><br/>
</h2>
</div></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* http://www.geeksforgeeks.org/ugly-numbers/ */

public class GenerateUglyNumbersDP
{
	public static void main(String args[])
	{
		GenerateUglyNumbersDP g = new GenerateUglyNumbersDP();
		System.out.println(g.generate(150));
	}

	public int generate(int nth)
	{
		int[] arr = new int[nth];
		//first ugly number is 1
		arr[0]  = 1;
		
		int multipleof2 = 0;
		int multipleof3 = 0;
		int multipleof5 = 0;

		for(int i=1;i<nth;++i)
		{
			arr[i] = min(arr[multipleof2]*2, arr[multipleof3]*3, 
													arr[multipleof5]*5);
			if(arr[i]==arr[multipleof2]*2)
			{
				++multipleof2;
			}
			if(arr[i]==arr[multipleof3]*3)
			{
				++multipleof3;
			}
			if(arr[i]==arr[multipleof5]*5)
			{
				++multipleof5;
			}
		}
		return arr[nth - 1];
	}

	private int min(int a, int b, int c)
	{
		int min = Math.min(a, b);
		return Math.min(min, c);
	}
}</pre>