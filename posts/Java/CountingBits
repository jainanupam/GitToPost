<b>Title: </b>
            338. Counting Bits
            <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/counting-bits/'>leetcode.com</a><p><section class="action action-btn-set">
<a class="icon-btn btn" href="https://discuss.leetcode.com/category/422" onclick="ga('send', 'event', 'discuss', 'click', 'counting-bits');" target="_blank">
<i aria-hidden="true" class="fa fa-commenting-o"></i>Discuss
          </a>
<button class="icon-btn btn" onclick="confirmations.confirm_see_solution(
                    event,
                    '/articles/counting-bits/',
                    false
                    );" type="button">
<i aria-hidden="true" class="fa fa-book">
</i><span class="hidden-xs">Editorial </span>Solution
          </button>
<a class="icon-btn pull-right-sm btn" href="/problems/random-one-question/" onclick="ga('send', 'event', 'pick-one-detail', 'click');">
<i aria-hidden="true" class="fa fa-random"></i>Pick One
          </a>
</section><hr class="line dotted">
</hr></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/counting-bits/ */
import java.util.Arrays;
public class CountingBits
{
	public static void main(String args[])
	{
		CountingBits c = new CountingBits();
		System.out.println(Arrays.toString(c.countBits(5)));
	}

	public int[] countBits(int num) 
	{
		if(num<0)
			return null;
		int[] result = new int[num+1];
		for(int i=0;i<num+1;i++)
		{
			int k = i;
			int count = 0;
    		while(k>0)
    		{
    			count++;
    			k = k & (k-1);
    		}  	  
    		System.out.println(count);
    		result[i] = count;
    	}
    	return result;
    }
}</pre><br><br><h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/counting-bits/ */
import java.util.Arrays; 
public class CountingBitsDP
{
	public static void main(String args[])
	{
		CountingBitsDP c = new CountingBitsDP();
		System.out.println(Arrays.toString(c.countBits(5)));
	}


	public int[] countBits(int num) 
	{
		if(num<0)
			return null;
		if(num == 0)
			return new int[]{0};
		if(num==1)
			return new int[]{0,1};

		int[] dp = new int[num+1];
		dp[0] = 0;
		dp[1] = 1;
		int index = 0;
		for(int i=2;i<=num;++i)
		{
			if(powerOfTwo(i))
			{
				index = 0;
			}
			dp[i] = 1 + dp[index];
			++index;
		}
		return dp;
	}

	private boolean powerOfTwo(int num)
	{
		if((num & (num-1))==0)
			return true;
		return false;
	}
}</pre>