<b>Title: </b>Print all subarrays with 0 sum  <b>Source: </b><a target='_blank' href='http://www.geeksforgeeks.org/print-all-subarrays-with-0-sum/?utm_source=feedburner&utm_medium=email&utm_campaign=Feed%3A+Geeksforgeeks+%28GeeksforGeeks%29'>www.geeksforgeeks.org</a><p><p>Given an array, print all subarrays in the array which has sum 0.</p><p>Examples:</p><pre>
<strong>Input: </strong> arr = [6, 3, -1, -3, 4, -2, 2,
             4, 6, -12, -7]
<strong>Output: </strong> 
Subarray found from Index 2 to 4
Subarray found from Index 2 to 6          
Subarray found from Index 5 to 6
Subarray found from Index 6 to 9
Subarray found from Index 0 to 10
</pre><p>Related posts: <a href="http://www.geeksforgeeks.org/find-subarray-with-given-sum/">Find if there is a subarray with 0 sum </a></p><p><!-- To show strongly recommend and practice link    --></p><div id="practiceLinkDiv">
<h2><a href="http://practice.geeksforgeeks.org/problems/zero-sum-subarrays/0">Recommended: Please solve it on “<b><i><u>PRACTICE</u></i></b>” first, before moving on to the solution.</a></h2>
</div><p>A simple solution is to consider all subarrays one by one and check if sum of every subarray is equal to 0 or not. The complexity of this solution would be O(n^2).</p><p>A better approach is to use Hashing.</p><p>Do following for each element in the array</p><ol>
<li> Maintain sum of elements encountered so far in a variable (say sum).</li>
<li> If current sum is 0, we found a subarray starting from index 0 and ending at index current index</li>
<li> Check if current sum exists in the hash table or not.</li>
<li> If current sum exists in the hash table, that means we have subarray(s) present with 0 sum that ends at current index.</li>
<li> Insert current sum into the hash table </li>
</ol><p>Below is C++ implementation of above idea –</p><pre class="brush: cpp; highlight: [8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49]; title: ; notranslate" title="">
// C++ program to print all subarrays
// in the array which has sum 0
#include &lt;iostream&gt;
#include &lt;unordered_map&gt;
#include &lt;vector&gt;
using namespace std;
 
// Function to print all subarrays in the array which
// has sum 0
vector&lt; pair&lt;int, int&gt; &gt; findSubArrays(int arr[], int n)
{
    // create an empty map
    unordered_map&lt;int, vector&lt;int&gt; &gt; map;
 
    // create an empty vector of pairs to store
    // subarray starting and ending index
    vector &lt;pair&lt;int, int&gt;&gt; out;
 
    // Maintains sum of elements so far
    int sum = 0;
 
    for (int i = 0; i &lt; n; i++)
    {
        // add current element to sum
        sum += arr[i];
 
        // if sum is 0, we found a subarray starting
        // from index 0 and ending at index i
        if (sum == 0)
            out.push_back(make_pair(0, i));
 
        // If sum already exists in the map there exists
        // at-least one subarray ending at index i with
        // 0 sum
        if (map.find(sum) != map.end())
        {
            // map[sum] stores starting index of all subarrays
            vector&lt;int&gt; vc = map[sum];
            for (auto it = vc.begin(); it != vc.end(); it++)
                out.push_back(make_pair(*it + 1, i));
        }
 
        // Important - no else
        map[sum].push_back(i);
    }
 
    // return output vector
    return out;
}
 
// Utility function to print all subarrays with sum 0
void print(vector&lt;pair&lt;int, int&gt;&gt; out)
{
    for (auto it = out.begin(); it != out.end(); it++)
        cout &lt;&lt; "Subarray found from Index " &lt;&lt;
            it-&gt;first &lt;&lt; " to " &lt;&lt; it-&gt;second &lt;&lt; endl;
}
 
// Driver code
int main()
{
    int arr[] = {6, 3, -1, -3, 4, -2, 2, 4, 6, -12, -7};
    int n = sizeof(arr)/sizeof(arr[0]);
 
    vector&lt;pair&lt;int, int&gt; &gt; out = findSubArrays(arr, n);
 
    // if we didn’t find any subarray with 0 sum,
    // then subarray doesn’t exists
    if (out.size() == 0)
        cout &lt;&lt; "No subarray exists";
    else
        print(out);
 
    return 0;
}
</pre><p>Output:</p><pre>
Subarray found from Index 2 to 4
Subarray found from Index 2 to 6
Subarray found from Index 5 to 6
Subarray found from Index 6 to 9
Subarray found from Index 0 to 10
</pre><p>This article is contributed by <strong>Aditya Goel</strong>. If you like GeeksforGeeks and would like to contribute, you can also write an article using <a href="http://www.contribute.geeksforgeeks.org">contribute.geeksforgeeks.org</a> or mail your article to contribute@geeksforgeeks.org. See your article appearing on the GeeksforGeeks main page and help other Geeks.</p><p>Please write comments if you find anything incorrect, or you want to share more information about the topic discussed above.</p><div class="AdsParent" style="width:100%;">
<span class="rectangleAd">
<!--
<script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
 Big Rectangle Blog Bottom 
<ins class="adsbygoogle"
     style="display:inline-block;width:336px;height:280px"
     data-ad-client="ca-pub-9465609616171866"
     data-ad-slot="4061219431"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
-->
<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- GfGDownLeftNew -->
<ins class="adsbygoogle" data-ad-client="ca-pub-9465609616171866" data-ad-format="auto" data-ad-slot="5794942435" style="display:block"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</span>
<span class="responsiveAd">
<script async="" src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
<!-- newMobile2 -->
<ins class="adsbygoogle" data-ad-client="ca-pub-9465609616171866" data-ad-format="auto" data-ad-slot="1950485631" style="display:block"></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script>
</span>
</div><h1><strong><a href="http://quiz.geeksforgeeks.org/gate-corner-2/">GATE CS Corner</a>
   <a href="http://practice.geeksforgeeks.org/company-tags">Company Wise Coding Practice</a></strong></h1></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* http://www.geeksforgeeks.org/print-all-subarrays-with-0-sum/?utm_source=feedburner&utm_medium=email&utm_campaign=Feed%3A+Geeksforgeeks+%28GeeksforGeeks%29 */
import java.util.*;
public class PrintSubarraysWithSumZero
{
	public static void main(String args[])
	{
		int[] arr = {6, 3, -1, -3, 4, -2, 2, 4, 6, -12, -7};
		PrintSubarraysWithSumZero p = new PrintSubarraysWithSumZero();
		System.out.println(p.findSubarrays(arr));
	}

	public List<Pair> findSubarrays(int[] arr)
	{
		HashMap<Integer, ArrayList<Integer>> map = new HashMap<>();
		List<Pair> list = new ArrayList<>();
		int sum = 0;
		for(int i=0;i<arr.length;i++)
		{
			sum += arr[i];
			if(sum==0)
			{
				list.add(new Pair(0, i));
			}
			else
			{
				//System.out.println(sum);
				if(map.containsKey(sum))
				{
					//System.out.println(sum);
					List<Integer> temp = map.get(sum);
					for(Integer j : temp)
					{
						list.add(new Pair(j+1, i));
					}
				}
			}
			//System.out.println(map);
			if(!map.containsKey(sum))
			{
				map.put(sum, new ArrayList<Integer>());
			}
			map.get(sum).add(i);
		}
		return list;
	}
}


class Pair
{
	int start;
	int end;

	Pair(int start, int end)
	{
		this.start = start;
		this.end = end;
	}

	public String toString()
	{
		return "("+this.start+", "+this.end+")";
	}
}</pre>