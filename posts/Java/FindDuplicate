<b>Title: </b>287. Find the Duplicate Number  <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/find-the-duplicate-number/'>leetcode.com</a><p><p>
Given an array <i>nums</i> containing <i>n</i> + 1 integers where each integer is between 1 and <i>n</i> (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.
</p><p>
<b>Note:</b><br>
<ol>
<li>You <b>must not</b> modify the array (assume the array is read only).</li>
<li>You must use only constant, <i>O</i>(1) extra space.</li>
<li>Your runtime complexity should be less than <code>O(n<sup>2</sup>)</code>.</li>
<li>There is only one duplicate number in the array, but it could be repeated more than once.</li>
</ol>
</br></p></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/find-the-duplicate-number/ */
import java.util.Arrays;

class FindDuplicate
{
	public int findDuplicate(int[] nums) 
	{
       Arrays.sort(nums);
       return helper(nums, 0, nums.length-1);
    }

    public int helper(int[] nums, int lo, int hi)
    {
    	int mid = lo + (hi-lo)/2;

    }

    public static void main(String args[])
    {
    	FindDuplicate f = new FindDuplicate();
    	int[] a = {1,2,3,4,1};
    	System.out.println(f.findDuplicate(a));
    }
}</pre>