<b>Title: </b>
            44. Wildcard Matching
            <b>Source: </b><a target='_blank' href='https://leetcode.com/problems/wildcard-matching/'>leetcode.com</a><p><section class="action action-btn-set">
<a class="icon-btn btn" href="https://discuss.leetcode.com/category/52" onclick="ga('send', 'event', 'discuss', 'click', 'wildcard-matching');" target="_blank">
<i aria-hidden="true" class="fa fa-commenting-o"></i>Discuss
          </a>
<button class="icon-btn disabled" data-placement="top" data-toggle="tooltip" title="Not available yet, please check back later." type="button">
<i aria-hidden="true" class="fa fa-book">
</i><span class="hidden-xs">Editorial </span>Solution
          </button>
<a class="icon-btn pull-right-sm btn" href="/problems/random-one-question/" onclick="ga('send', 'event', 'pick-one-detail', 'click');">
<i aria-hidden="true" class="fa fa-random"></i>Pick One
          </a>
</section><hr class="line dotted">
</hr></p>

<h3>Java solution</h3><pre class="lang:java decode:true ">/* https://leetcode.com/problems/wildcard-matching/ */

public class WildcardMatching
{
	public static void main(String args[])
	{
		WildcardMatching w = new WildcardMatching();
		//System.out.println(w.isMatch("aa","a"));
		//System.out.println(w.isMatch("aa","aa"));
		//System.out.println(w.isMatch("aaa","aa"));
		System.out.println(w.isMatch("aa", "*"));
		//System.out.println(w.isMatch("aa", "a*"));
		//System.out.println(w.isMatch("ab", "?*"));
		//System.out.println(w.isMatch("aab", "c*a*b"));
		System.out.println(w.isMatch("abefcdgiescdfimde", "ab*cd?i*de"));
	}	

	public boolean isMatch(String s, String p) 
	{
        //i is index in the string s
        int i = 0;
        //j is index in string p
        int j = 0;

        int starIndex = -1;
        int iIndex = -1;
        System.out.println(s+ " " + p);
        while (i < s.length()) 
        {
            System.out.println("i: "+i+" j: "+j+" startIndex: "+starIndex+" iIndex: "+iIndex);
            //if the value @index j in p is equal to either value @index i in s or 
            //is equal to ?
            //then its a match increment both i and j by 1  
            if (j < p.length() && (p.charAt(j) == '?' || p.charAt(j) == s.charAt(i))) 
            {
                ++i;
                ++j;
            } 
            //if the value @index j in p is equals to *
            //get the index of '*' and save it in startIndex
            //store the index i in iIndex
            //and increment j++
            //until j is not equal to '*'
            else if (j < p.length() && p.charAt(j) == '*') 
            {
                starIndex = j;      
                iIndex = i;
                //move j to next character
                j++;
            } 
            else if (starIndex != -1) 
            {
                j = starIndex + 1;
                i = iIndex+1;
                iIndex++;
            } 
            else 
            {
                return false;
            }
        }
     
        while (j < p.length() && p.charAt(j) == '*') 
        {
            ++j;
        }
     
        return j == p.length();
    }
}</pre>